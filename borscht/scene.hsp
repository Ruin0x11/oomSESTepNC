*scene
	procid = (procid + 1) \ 10
	proclist(procid) = "Scene:Init" + " ct:" + ct
	if ( dbg_outputdebuglog ) {
	}
	if ( gStoryBookmark < sceneid ) {
		gStoryBookmark = sceneid
	}
	if ( cfg_story == 0 ) {
		return
	}
	scene_cut = 0
	msgtempprev = msgtemp
	scenemode = TRUE
	sdim actor, 20, 3, 10
	file = "void"
	y1 = 60
	y2 = windowh - 60
	notesel buff
	noteload lang("scene1.hsp", "scene2.hsp")
	s = "{" + sceneid + "}"
	scidx = instr(buff, 0, s)
	if ( scidx == (-1) ) {
		goto *label_3998
	}
	scidx += strlen(s)

*scene_loop
	procid = (procid + 1) \ 10
	proclist(procid) = "Scene:Loop" + " ct:" + ct
	if ( dbg_outputdebuglog ) {
	}
	await
	stick a, 128
	if ( a == 128 ) {
		scene_cut = 1
	}
	if ( scene_cut == 1 ) {
		goto *label_3998
	}
	notesel buff
	noteload lang("scene1.hsp", "scene2.hsp")
	cs = 0
	key_list = key_enter
	scidxtop = scidx
	scidxtop = 0
	val = 0

*scene_loop_WHILE1
	p(1) = instr(buff, scidx, "{") + scidx
	if ( p(1) == (-1) ) {
		goto *label_3998
	}
	p(2) = instr(buff, scidx, "}") + scidx + 1
	if ( p(2) == (-1) ) {
		goto *label_3998
	}
	if ( scidxtop != 0 ) {
		scidx = p(1)
		goto *scene_loop_WEND1
	}
	s = strmid(buff, p(1), p(2) - p(1))
	scidx = p(2) + 1
	if ( s == "{txt}" ) {
		scidxtop = scidx
		val = 0
		goto *scene_loop_WHILE1_CONTINUE
	}
	if ( instr(s, 0, "{chat_") != (-1) ) {
		rc = int(strmid(s, 6, 1))
		scidxtop = scidx
		val = 1
		goto *scene_loop_WHILE1_CONTINUE
	}
	if ( s == "{fade}" ) {
		gsel BUFFER_BUF
		color 0, 0, 0
		boxf
		gsel BUFFER_SCREEN
		gosub *label_1567
		goto *scene_loop_WHILE1_CONTINUE
	}
	if ( s == "{fadein}" ) {
		repeat 25
			redraw 1
			pos 0, 0
			gmode 4, , , cnt * 15
			pos 0, 0
			gcopy BUFFER_BUF, 0, 0, windoww, windowh
			gmode 2
			await 10
		loop
		goto *scene_loop_WHILE1_CONTINUE
	}
	if ( s == "{wait}" ) {
		scidxtop = scidx
		val = 2
		goto *scene_loop_WHILE1_CONTINUE
	}
	if ( s == "{end}" ) {
		await 1000
		goto *label_3998
	}
	p(3) = instr(buff, scidx, "\"") + scidx + 1
	p(4) = instr(buff, p(3), "\"") + p(3)
	s(1) = strmid(buff, p(3), p(4) - p(3))
	scidx = p(4) + 1
	if ( s == "{pic}" ) {
		file = s(1)
		goto *scene_loop_WHILE1_CONTINUE
	}
	if ( s == "{mc}" ) {
		music = MUSICLIST_NONE2
		if ( s(1) == "mcUnrest2" ) {
			music = MUSICLIST_MCUNREST2
		}
		if ( s(1) == "mcTown1" ) {
			music = MUSICLIST_MCTOWN1
		}
		if ( s(1) == "mcMemory" ) {
			music = MUSICLIST_MCMEMORY
		}
		if ( s(1) == "mcIntro" ) {
			music = MUSICLIST_MCINTRO
		}
		if ( music == MUSICLIST_NONE2 ) {
			musicfile(MUSICLIST_SCENE_MUSIC) = s(1)
			music = MUSICLIST_SCENE_MUSIC
			gosub *music_play
		}
		else {
			gosub *music_play
		}
		goto *scene_loop_WHILE1_CONTINUE
	}
	if ( s == "{se}" ) {
		folder = exedir + "sound\\"
		sndload folder + s(1), SOUNDLIST_SCENE_SOUND
		snd SOUNDLIST_SCENE_SOUND
		goto *scene_loop_WHILE1_CONTINUE
	}
	if ( instr(s, 0, "{actor_") != (-1) ) {
		rc = int(strmid(s, 7, 1))
		csvsort s, s(1), 44
		actor(0, rc) = s, s(1), s(2)
	}

*scene_loop_WHILE1_CONTINUE
	goto *scene_loop_WHILE1

*scene_loop_WEND1
	buff = strmid(buff, scidxtop, scidx - scidxtop)
	p = noteinfo(0)
	repeat noteinfo(0)
		noteget s, p - cnt - 1
		if ( s == "" ) {
			notedel p - cnt - 1
		}
	loop
	redraw 0
	gsel BUFFER_BUF
	gmode 0
	pos 0, 0
	picload_ exedir + "\\graphic\\" + file + ".bmp", 1
	pos 0, y1
	gzoom windoww, y2 - y1, 4, 0, 0, 640, 480
	gmode 2
	color 5, 5, 5
	boxf 0, 0, windoww, y1
	boxf 0, y2, windoww, windowh
	if ( val == 1 ) {
		gsel BUFFER_SCREEN
		redraw 0
		gmode 0
		pos 0, 0
		gcopy BUFFER_BUF, 0, 0, windoww, windowh
		gmode 2
		tc = CHARA_PLAYER
		gosub *chat
		goto *scene_loop
	}
	if ( val == 2 ) {
		gsel BUFFER_SCREEN
		redraw 0
		gmode 0
		pos 0, 0
		gcopy BUFFER_BUF, 0, 0, windoww, windowh
		gmode 2
		redraw 1
		await 1000
		goto *scene_loop
	}
	font lang(cfg_font1, cfg_font2), 16 - en * 2, 0
	x = 44
	repeat noteinfo(0)
		y = y1 + 31 + (9 - noteinfo(0) / 2 + cnt) * 20
		noteget s, cnt
		x = windoww / 2 - strlen(s) * 4
		dx = 80 + strlen(s) * 8
		if ( dx < 180 ) {
			dx = 0
		}
		pos windoww / 2, y + 4
		gmode 6, 344, 72, 70
		grotate BUFFER_INF, 456, 144, 0, dx, 72
		color 20, 20, 20
	loop
	x = 40
	repeat noteinfo(0)
		y = y1 + 28 + (9 - noteinfo(0) / 2 + cnt) * 20
		noteget s, cnt
		x = windoww / 2 - strlen(s) * 4
		color 10, 10, 10
		pos x, y
		bmes s, 240, 240, 240
	loop
	gsel BUFFER_SCREEN
	color 500, 500, 500
	repeat 15, 1
		redraw 0
		await 30
		stick a, 128
		if ( a == 128 ) {
			scene_cut = 1
		}
		gmode 4, , , cnt * 16
		pos 0, 0
		gcopy BUFFER_BUF, 0, 0, windoww, windowh
		redraw 1
	loop
	gmode 2
	redraw 0
	gmode 0
	pos 0, 0
	gcopy BUFFER_BUF, 0, 0, windoww, windowh
	gmode 2
	redraw 0
	locvar_anime_halt_x = windoww - 120
	locvar_anime_halt_y = windowh - 60
	anime_halt
	redraw 0
	color 5, 5, 5
	boxf 0, 0, windoww, y1
	boxf 0, y2, windoww, windowh
	goto *scene_loop

*label_3998
	procid = (procid + 1) \ 10
	proclist(procid) = "Scene:Exit" + " ct:" + ct
	if ( dbg_outputdebuglog ) {
	}
	gsel BUFFER_BUF
	color 0, 0, 0
	boxf
	gsel BUFFER_SCREEN
	gosub *label_1567
	scenemode = FALSE
	msgtemp = msgtempprev
	msgtempprev = ""
	return







