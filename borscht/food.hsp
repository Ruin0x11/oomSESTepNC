#deffunc food_meltbysalt int food_meltbysalt_prm0
	if ( synccheck(food_meltbysalt_prm0, -1) ) {
		txtef COLOR_RED
		txt -1, lang("塩だ！" + name(food_meltbysalt_prm0) + "は溶けはじめた！", "It's salt! " + name(food_meltbysalt_prm0) + " start" + _s(food_meltbysalt_prm0) + " to melt.")
	}
	if ( cHP(food_meltbysalt_prm0) > 10 ) {
		dmghp food_meltbysalt_prm0, cHP(food_meltbysalt_prm0) - rnd(10), DAMAGE_FROM_ACID
	}
	else {
		dmghp food_meltbysalt_prm0, rnd(20000), DAMAGE_FROM_ACID
	}
	return

#defcfunc foodname int foodname_arg1, str foodname_arg2, int foodname_arg3, int foodname_arg4, int foodname_prm4
	locvar_foodname_s = foodname_arg2
	if ( foodname_arg1 == 1 ) {
		if ( foodname_arg4 == 0 ) {
			locvar_foodname_n = lang("動物", "beast")
		}
		else {
			if ( foodname_arg4 == 343 ) {
				if ( foodname_prm4 != usernpcmax ) {
					locvar_foodname_n = userdatan(1, foodname_prm4)
				}
				else {
					locvar_foodname_n = lang("残りカス", "garbage")
				}
			}
			else {
				locvar_foodname_n = refchara(foodname_arg4, DBSPEC_CHARA_NAME_ORG, 1)
			}
		}
		if ( foodname_arg3 == 1 ) {
			return lang("グロテスクな" + locvar_foodname_n + "の肉", "grotesque " + locvar_foodname_n + " meat")
		}
		if ( foodname_arg3 == 2 ) {
			return lang("焼け焦げた" + locvar_foodname_n + "の肉", "charred " + locvar_foodname_n + " meat")
		}
		if ( foodname_arg3 == 3 ) {
			return lang("" + locvar_foodname_n + "のこんがり肉", "roast " + locvar_foodname_n)
		}
		if ( foodname_arg3 == 4 ) {
			return lang("" + locvar_foodname_n + "肉のオードブル", "deep fried " + locvar_foodname_n)
		}
		if ( foodname_arg3 == 5 ) {
			return lang("" + locvar_foodname_n + "のピリ辛炒め", "skewer grilled " + locvar_foodname_n)
		}
		if ( foodname_arg3 == 6 ) {
			return lang("" + locvar_foodname_n + "コロッケ", locvar_foodname_n + " croquette")
		}
		if ( foodname_arg3 == 7 ) {
			return lang("" + locvar_foodname_n + "のハンバーグ", locvar_foodname_n + " hamburger")
		}
		if ( foodname_arg3 == 8 ) {
			return lang("" + locvar_foodname_n + "肉の大葉焼き", locvar_foodname_n + " cutlet")
		}
		if ( foodname_arg3 == 9 ) {
			return lang("" + locvar_foodname_n + "ステーキ", locvar_foodname_n + " steak")
		}
		return locvar_foodname_s
	}
	if ( foodname_arg1 == 2 ) {
		if ( locvar_foodname_s == "" ) {
			locvar_foodname_s = lang("野菜", "vegetable")
		}
		if ( foodname_arg3 == 1 ) {
			return lang("生ごみ同然の" + locvar_foodname_s, "kitchen refuse " + locvar_foodname_s)
		}
		if ( foodname_arg3 == 2 ) {
			return lang("悪臭を放つ" + locvar_foodname_s, "smelly " + locvar_foodname_s)
		}
		if ( foodname_arg3 == 3 ) {
			return lang("" + locvar_foodname_s + "のサラダ", locvar_foodname_s + " salad")
		}
		if ( foodname_arg3 == 4 ) {
			return lang("" + locvar_foodname_s + "の炒め物", "fried " + locvar_foodname_s)
		}
		if ( foodname_arg3 == 5 ) {
			return lang("" + locvar_foodname_s + "風味の肉じゃが", locvar_foodname_s + " roll")
		}
		if ( foodname_arg3 == 6 ) {
			return lang("" + locvar_foodname_s + "の天ぷら", locvar_foodname_s + " tempura")
		}
		if ( foodname_arg3 == 7 ) {
			return lang("" + locvar_foodname_s + "の煮込み", locvar_foodname_s + " gratin")
		}
		if ( foodname_arg3 == 8 ) {
			return lang("" + locvar_foodname_s + "シチュー", "meat and " + locvar_foodname_s + " stew")
		}
		if ( foodname_arg3 == 9 ) {
			return lang("" + locvar_foodname_s + "風カレー", locvar_foodname_s + " curry")
		}
		return locvar_foodname_s
	}
	if ( foodname_arg1 == 3 ) {
		if ( locvar_foodname_s == "" ) {
			locvar_foodname_s = lang("果物", "fruit")
		}
		if ( foodname_arg3 == 1 ) {
			return lang("食べてはならない" + locvar_foodname_s, "dangerous " + locvar_foodname_s)
		}
		if ( foodname_arg3 == 2 ) {
			return lang("べっちょりした" + locvar_foodname_s, "doubtful " + locvar_foodname_s)
		}
		if ( foodname_arg3 == 3 ) {
			return lang("" + locvar_foodname_s + "のフルーツサラダ", locvar_foodname_s + " jelly salad")
		}
		if ( foodname_arg3 == 4 ) {
			return lang("" + locvar_foodname_s + "のプリン", locvar_foodname_s + " pudding")
		}
		if ( foodname_arg3 == 5 ) {
			return lang("" + locvar_foodname_s + "シャーベット", locvar_foodname_s + " sherbet")
		}
		if ( foodname_arg3 == 6 ) {
			return lang("" + locvar_foodname_s + "シェイク", locvar_foodname_s + " ice cream")
		}
		if ( foodname_arg3 == 7 ) {
			return lang("" + locvar_foodname_s + "クレープ", locvar_foodname_s + " crepe")
		}
		if ( foodname_arg3 == 8 ) {
			return lang("" + locvar_foodname_s + "フルーツケーキ", locvar_foodname_s + " fruit cake")
		}
		if ( foodname_arg3 == 9 ) {
			return lang("" + locvar_foodname_s + "パフェ", locvar_foodname_s + " grand parfait")
		}
		return locvar_foodname_s
	}
	if ( foodname_arg1 == 4 ) {
		if ( locvar_foodname_s == "" ) {
			locvar_foodname_s = lang("お菓子", "candy")
		}
		if ( foodname_arg3 == 1 ) {
			return lang("原型を留めない" + locvar_foodname_s, "collapsed " + locvar_foodname_s)
		}
		if ( foodname_arg3 == 2 ) {
			return lang("まずそうな" + locvar_foodname_s, "nasty " + locvar_foodname_s)
		}
		if ( foodname_arg3 == 3 ) {
			return lang("" + locvar_foodname_s + "クッキー", locvar_foodname_s + " cookie")
		}
		if ( foodname_arg3 == 4 ) {
			return lang("" + locvar_foodname_s + "のゼリー", locvar_foodname_s + " jelly")
		}
		if ( foodname_arg3 == 5 ) {
			return lang("" + locvar_foodname_s + "パイ", locvar_foodname_s + " pie")
		}
		if ( foodname_arg3 == 6 ) {
			return lang("" + locvar_foodname_s + "まんじゅう", locvar_foodname_s + " bun")
		}
		if ( foodname_arg3 == 7 ) {
			return lang("" + locvar_foodname_s + "風味のシュークリーム", locvar_foodname_s + " cream puff")
		}
		if ( foodname_arg3 == 8 ) {
			return lang("" + locvar_foodname_s + "のケーキ", locvar_foodname_s + " cake")
		}
		if ( foodname_arg3 == 9 ) {
			return lang("" + locvar_foodname_s + "風ザッハトルテ", locvar_foodname_s + " sachertorte")
		}
		return locvar_foodname_s
	}
	if ( foodname_arg1 == 5 ) {
		locvar_foodname_n = lang("麺", "noodle")
		if ( foodname_arg3 == 1 ) {
			return lang("禁断の" + locvar_foodname_n, "risky " + locvar_foodname_n)
		}
		if ( foodname_arg3 == 2 ) {
			return lang("のびてふにゃった" + locvar_foodname_n, "exhausted " + locvar_foodname_n)
		}
		if ( foodname_arg3 == 3 ) {
			return lang("サラダパスタ", "salad pasta")
		}
		if ( foodname_arg3 == 4 ) {
			return lang("うどん", "udon")
		}
		if ( foodname_arg3 == 5 ) {
			return lang("冷やし蕎麦", "soba")
		}
		if ( foodname_arg3 == 6 ) {
			return lang("ペペロンチーノ", "peperoncino")
		}
		if ( foodname_arg3 == 7 ) {
			return lang("カルボナーラ", "carbonara")
		}
		if ( foodname_arg3 == 8 ) {
			return lang("ラーメン", "ramen")
		}
		if ( foodname_arg3 == 9 ) {
			return lang("ミートスパゲティ", "meat spaghetti")
		}
		return locvar_foodname_s
	}
	if ( foodname_arg1 == 6 ) {
		if ( locvar_foodname_s == "" ) {
			locvar_foodname_s = lang("魚", "fish")
		}
		if ( foodname_arg3 == 1 ) {
			return lang("" + locvar_foodname_s + "の残骸", "leftover " + locvar_foodname_s)
		}
		if ( foodname_arg3 == 2 ) {
			return lang("骨だけ残った" + locvar_foodname_s, "bony " + locvar_foodname_s)
		}
		if ( foodname_arg3 == 3 ) {
			return lang("" + locvar_foodname_s + "のフライ", "fried " + locvar_foodname_s)
		}
		if ( foodname_arg3 == 4 ) {
			return lang("" + locvar_foodname_s + "の煮込み", "stewed " + locvar_foodname_s)
		}
		if ( foodname_arg3 == 5 ) {
			return lang("" + locvar_foodname_s + "スープ", locvar_foodname_s + " soup")
		}
		if ( foodname_arg3 == 6 ) {
			return lang("" + locvar_foodname_s + "の天ぷら", locvar_foodname_s + " tempura")
		}
		if ( foodname_arg3 == 7 ) {
			return lang("" + locvar_foodname_s + "ソーセージ", locvar_foodname_s + " sausage")
		}
		if ( foodname_arg3 == 8 ) {
			return lang("" + locvar_foodname_s + "の刺身", locvar_foodname_s + " sashimi")
		}
		if ( foodname_arg3 == 9 ) {
			return lang("" + locvar_foodname_s + "の活け作り", locvar_foodname_s + " sushi")
		}
		return locvar_foodname_s
	}
	if ( foodname_arg1 == 7 ) {
		locvar_foodname_n = lang("パン", "bread")
		if ( foodname_arg3 == 1 ) {
			return lang("恐怖の" + locvar_foodname_n, "fearsome " + locvar_foodname_n)
		}
		if ( foodname_arg3 == 2 ) {
			return lang("ガチガチの" + locvar_foodname_n, "hard " + locvar_foodname_n)
		}
		if ( foodname_arg3 == 3 ) {
			return lang("くるみパン", "walnut bread")
		}
		if ( foodname_arg3 == 4 ) {
			return lang("アップルパイ", "apple pie")
		}
		if ( foodname_arg3 == 5 ) {
			return lang("サンドイッチ", "sandwich")
		}
		if ( foodname_arg3 == 6 ) {
			return lang("クロワッサン", "croissant")
		}
		if ( foodname_arg3 == 7 ) {
			return lang("コロッケパン", "croquette sandwich")
		}
		if ( foodname_arg3 == 8 ) {
			return lang("カレーパン", "chocolate babka")
		}
		if ( foodname_arg3 == 9 ) {
			return lang("メロンパン", "melon flavored bread")
		}
		return locvar_foodname_s
	}
	if ( foodname_arg1 == 8 ) {
		if ( locvar_foodname_s != "" ) {
			locvar_foodname_n = locvar_foodname_s
		}
		else {
			if ( foodname_arg4 == 0 ) {
				locvar_foodname_n = lang("鳥", "animal")
			}
			else {
				if ( foodname_arg4 == 343 ) {
					if ( foodname_prm4 != usernpcmax ) {
						locvar_foodname_n = userdatan(1, foodname_prm4)
					}
					else {
						locvar_foodname_n = lang("残りカス", "garbage")
					}
				}
				else {
					locvar_foodname_n = refchara(foodname_arg4, DBSPEC_CHARA_NAME_ORG, 1)
				}
			}
		}
		if ( foodname_arg3 == 1 ) {
			return lang("グロテスクな" + locvar_foodname_n + "の卵", "grotesque " + locvar_foodname_n + " egg")
		}
		if ( foodname_arg3 == 2 ) {
			return lang("焦げた" + locvar_foodname_n + "の卵", "overcooked " + locvar_foodname_n + " egg")
		}
		if ( foodname_arg3 == 3 ) {
			return lang(locvar_foodname_n + "の卵の目玉焼き", "fried " + locvar_foodname_n + " egg")
		}
		if ( foodname_arg3 == 4 ) {
			return lang(locvar_foodname_n + "風味のキッシュ", locvar_foodname_n + " egg toast")
		}
		if ( foodname_arg3 == 5 ) {
			return lang("半熟" + locvar_foodname_n, "soft boiled " + locvar_foodname_n + " egg")
		}
		if ( foodname_arg3 == 6 ) {
			return lang(locvar_foodname_n + "の卵入りスープ", "soup with " + locvar_foodname_n + " egg")
		}
		if ( foodname_arg3 == 7 ) {
			return lang("熟成" + locvar_foodname_n + "チーズ", "mature " + locvar_foodname_n + " cheese")
		}
		if ( foodname_arg3 == 8 ) {
			return lang(locvar_foodname_n + "のレアチーズケーキ", locvar_foodname_n + " cheese cake")
		}
		if ( foodname_arg3 == 9 ) {
			return lang(locvar_foodname_n + "風オムライス", locvar_foodname_n + " omelet")
		}
		return locvar_foodname_s
	}
	if ( foodname_arg1 == 9 ) {
		if ( locvar_foodname_s != "" ) {
			locvar_foodname_n = locvar_foodname_s
		}
		else {
			if ( foodname_arg4 == 0 ) {
				locvar_foodname_n = ""
			}
			else {
				if ( foodname_arg4 == 343 ) {
					if ( foodname_prm4 != usernpcmax ) {
						locvar_foodname_n = userdatan(1, foodname_prm4)
					}
					else {
						locvar_foodname_n = lang("残りカス", "garbage")
					}
				}
				else {
					locvar_foodname_n = refchara(foodname_arg4, DBSPEC_CHARA_NAME_ORG, 1)
				}
			}
		}
		if ( foodname_arg3 == 1 ) {
			if ( locvar_foodname_n == "" ) {
				return lang("ドロドロした乳", "thick milk")
			}
			else {
				return lang("ドロドロした" + locvar_foodname_n + "の乳", "think " + locvar_foodname_n + " milk")
			}
		}
		if ( foodname_arg3 == 2 ) {
			if ( locvar_foodname_n == "" ) {
				return lang("固まりかけの乳", "curdled milk")
			}
			else {
				return lang("固まりかけの" + locvar_foodname_n + "の乳", "curdled " + locvar_foodname_n + " milk")
			}
		}
		if ( foodname_arg3 == 3 ) {
			return lang(locvar_foodname_n + "ヨーグルト", locvar_foodname_n + " yogurt")
		}
		if ( foodname_arg3 == 4 ) {
			return lang(locvar_foodname_n + "パンケーキ", locvar_foodname_n + " pancake")
		}
		if ( foodname_arg3 == 5 ) {
			return lang(locvar_foodname_n + "ポタージュ", locvar_foodname_n + " potage")
		}
		if ( foodname_arg3 == 6 ) {
			return lang(locvar_foodname_n + "ソフトクリーム", locvar_foodname_n + " soft serve")
		}
		if ( foodname_arg3 == 7 ) {
			return lang(locvar_foodname_n + "パンナコッタ", locvar_foodname_n + " panna cotta")
		}
		if ( foodname_arg3 == 8 ) {
			return lang(locvar_foodname_n + "クリームチーズ", locvar_foodname_n + " cream cheese")
		}
		if ( foodname_arg3 == 9 ) {
			return lang(locvar_foodname_n + "グラタン", locvar_foodname_n + " gratin")
		}
		return locvar_foodname_s
	}
	if ( foodname_arg1 == 10 ) {
		if ( locvar_foodname_s == "" ) {
			locvar_foodname_s = lang("ハーブ", "herb")
		}
		if ( foodname_arg3 == 1 ) {
			return lang("バラバラになった" + locvar_foodname_s, "shredded " + locvar_foodname_s)
		}
		if ( foodname_arg3 == 2 ) {
			return lang("失敗した" + locvar_foodname_s + "ティー", "failed " + locvar_foodname_s + " tea")
		}
		if ( foodname_arg3 == 3 ) {
			return lang("雑味のある" + locvar_foodname_s + "ティー", "odd tasting " + locvar_foodname_s + " tea")
		}
		if ( foodname_arg3 == 4 ) {
			return lang("少し苦い" + locvar_foodname_s + "ティー", "slightly bitter " + locvar_foodname_s + " tea")
		}
		if ( foodname_arg3 == 5 ) {
			return lang(locvar_foodname_s + "ティー", locvar_foodname_s + " tea")
		}
		if ( foodname_arg3 == 6 ) {
			return lang("上質な" + locvar_foodname_s + "ティー", "good quality " + locvar_foodname_s + " tea")
		}
		if ( foodname_arg3 == 7 ) {
			return lang("良質な" + locvar_foodname_s + "ティー", "superior quality " + locvar_foodname_s + " tea")
		}
		if ( foodname_arg3 == 8 ) {
			return lang("貴族が嗜む" + locvar_foodname_s + "ティー", "noble's favorite " + locvar_foodname_s + " tea")
		}
		if ( foodname_arg3 == 9 ) {
			return lang("世界最高の" + locvar_foodname_s + "ティー", "the greatest " + locvar_foodname_s + " tea in the world")
		}
		return locvar_foodname_s
	}
	return locvar_foodname_s

*foodRotten
	tc = cc
	dim fdlist, 2, 10
	fdmax = 0
	foodid = iID(ci)
	nutrition = 2500
	if ( refitem(foodid, DBSPEC_CARGO, ci) == 1 ) {
		nutrition += 2500
	}
	i = iParam1(ci) / 1000
	if ( trophycheck(TROPHY_CHASTE) == 2 ) {
		if ( i == 1 ) {
			if ( fdmax < 10 ) {
				fdlist(0, fdmax) = 10, 45
				fdmax++
			}
			if ( fdmax < 10 ) {
				fdlist(0, fdmax) = 11, 60
				fdmax++
			}
			if ( fdmax < 10 ) {
				fdlist(0, fdmax) = 17, 15
				fdmax++
			}
			nutrition = 3500
		}
		if ( i == 2 ) {
			if ( fdmax < 10 ) {
				fdlist(0, fdmax) = 15, 75
				fdmax++
			}
			if ( fdmax < 10 ) {
				fdlist(0, fdmax) = 14, 75
				fdmax++
			}
			nutrition = 2000
		}
		if ( i == 3 ) {
			if ( fdmax < 10 ) {
				fdlist(0, fdmax) = 16, 75 + 75 / 10 * iLevel(ci)
				fdmax++
			}
			if ( fdmax < 10 ) {
				fdlist(0, fdmax) = 17, 30 + 30 / 10 * iLevel(ci)
				fdmax++
			}
			if ( fdmax < 10 ) {
				fdlist(0, fdmax) = 13, 45 + 45 / 10 * iLevel(ci)
				fdmax++
			}
			nutrition = 1500
		}
		if ( i == 4 ) {
			if ( fdmax < 10 ) {
				fdlist(0, fdmax) = 16, 60 + 60 / 10 * iLevel(ci)
				fdmax++
			}
			if ( fdmax < 10 ) {
				fdlist(0, fdmax) = 12, 45 + 45 / 10 * iLevel(ci)
				fdmax++
			}
			if ( fdmax < 10 ) {
				fdlist(0, fdmax) = 14, 45 + 45 / 10 * iLevel(ci)
				fdmax++
			}
			nutrition = 1500
		}
		if ( i == 5 ) {
			if ( fdmax < 10 ) {
				fdlist(0, fdmax) = 11, 90
				fdmax++
			}
			if ( fdmax < 10 ) {
				fdlist(0, fdmax) = 12, 60
				fdmax++
			}
			nutrition = 3500
		}
		if ( i == 6 ) {
			if ( fdmax < 10 ) {
				fdlist(0, fdmax) = 14, 60
				fdmax++
			}
			if ( fdmax < 10 ) {
				fdlist(0, fdmax) = 12, 60
				fdmax++
			}
			if ( fdmax < 10 ) {
				fdlist(0, fdmax) = 13, 30
				fdmax++
			}
			nutrition = 3000
		}
		if ( i == 7 ) {
			if ( fdmax < 10 ) {
				fdlist(0, fdmax) = 10, 40
				fdmax++
			}
			if ( fdmax < 10 ) {
				fdlist(0, fdmax) = 12, 40
				fdmax++
			}
			if ( fdmax < 10 ) {
				fdlist(0, fdmax) = 14, 40
				fdmax++
			}
			if ( fdmax < 10 ) {
				fdlist(0, fdmax) = 11, 40
				fdmax++
			}
			nutrition = 2800
		}
		if ( i == 8 ) {
			if ( fdmax < 10 ) {
				fdlist(0, fdmax) = 17, 30
				fdmax++
			}
			if ( fdmax < 10 ) {
				fdlist(0, fdmax) = 13, 30
				fdmax++
			}
			if ( fdmax < 10 ) {
				fdlist(0, fdmax) = 15, 30
				fdmax++
			}
			nutrition = 2000
		}
		if ( i == 9 ) {
			if ( fdmax < 10 ) {
				fdlist(0, fdmax) = 11, 30
				fdmax++
			}
			if ( fdmax < 10 ) {
				fdlist(0, fdmax) = 12, 30
				fdmax++
			}
			if ( fdmax < 10 ) {
				fdlist(0, fdmax) = 17, 75
				fdmax++
			}
			nutrition = 2000
		}
	}
	else {
		if ( i == 1 ) {
			if ( fdmax < 10 ) {
				fdlist(0, fdmax) = 10, 30
				fdmax++
			}
			if ( fdmax < 10 ) {
				fdlist(0, fdmax) = 11, 40
				fdmax++
			}
			if ( fdmax < 10 ) {
				fdlist(0, fdmax) = 17, 10
				fdmax++
			}
			nutrition = 3500
		}
		if ( i == 2 ) {
			if ( fdmax < 10 ) {
				fdlist(0, fdmax) = 15, 50
				fdmax++
			}
			if ( fdmax < 10 ) {
				fdlist(0, fdmax) = 14, 50
				fdmax++
			}
			nutrition = 2000
		}
		if ( i == 3 ) {
			if ( fdmax < 10 ) {
				fdlist(0, fdmax) = 16, 50 + 50 / 10 * iLevel(ci)
				fdmax++
			}
			if ( fdmax < 10 ) {
				fdlist(0, fdmax) = 17, 20 + 20 / 10 * iLevel(ci)
				fdmax++
			}
			if ( fdmax < 10 ) {
				fdlist(0, fdmax) = 13, 30 + 30 / 10 * iLevel(ci)
				fdmax++
			}
			nutrition = 1500
		}
		if ( i == 4 ) {
			if ( fdmax < 10 ) {
				fdlist(0, fdmax) = 16, 40 + 40 / 10 * iLevel(ci)
				fdmax++
			}
			if ( fdmax < 10 ) {
				fdlist(0, fdmax) = 12, 30 + 30 / 10 * iLevel(ci)
				fdmax++
			}
			if ( fdmax < 10 ) {
				fdlist(0, fdmax) = 14, 30 + 30 / 10 * iLevel(ci)
				fdmax++
			}
			nutrition = 1500
		}
		if ( i == 5 ) {
			if ( fdmax < 10 ) {
				fdlist(0, fdmax) = 11, 60
				fdmax++
			}
			if ( fdmax < 10 ) {
				fdlist(0, fdmax) = 12, 40
				fdmax++
			}
			nutrition = 3500
		}
		if ( i == 6 ) {
			if ( fdmax < 10 ) {
				fdlist(0, fdmax) = 14, 40
				fdmax++
			}
			if ( fdmax < 10 ) {
				fdlist(0, fdmax) = 12, 40
				fdmax++
			}
			if ( fdmax < 10 ) {
				fdlist(0, fdmax) = 13, 20
				fdmax++
			}
			nutrition = 3000
		}
		if ( i == 7 ) {
			if ( fdmax < 10 ) {
				fdlist(0, fdmax) = 10, 25
				fdmax++
			}
			if ( fdmax < 10 ) {
				fdlist(0, fdmax) = 12, 25
				fdmax++
			}
			if ( fdmax < 10 ) {
				fdlist(0, fdmax) = 14, 25
				fdmax++
			}
			if ( fdmax < 10 ) {
				fdlist(0, fdmax) = 11, 25
				fdmax++
			}
			nutrition = 2800
		}
		if ( i == 8 ) {
			if ( fdmax < 10 ) {
				fdlist(0, fdmax) = 17, 20
				fdmax++
			}
			if ( fdmax < 10 ) {
				fdlist(0, fdmax) = 13, 20
				fdmax++
			}
			if ( fdmax < 10 ) {
				fdlist(0, fdmax) = 15, 20
				fdmax++
			}
			nutrition = 2000
		}
		if ( i == 9 ) {
			if ( fdmax < 10 ) {
				fdlist(0, fdmax) = 11, 20
				fdmax++
			}
			if ( fdmax < 10 ) {
				fdlist(0, fdmax) = 12, 20
				fdmax++
			}
			if ( fdmax < 10 ) {
				fdlist(0, fdmax) = 17, 50
				fdmax++
			}
			nutrition = 2000
		}
	}
	if ( refitem(foodid, DBSPEC_TYPE, ci) == FILTER_ITEM_FOOD | foodid == 574 ) {
		nutrition = nutrition * (100 + iParam2(ci) * 15) / 100
	}
	repeat fdmax
		if ( fdlist(1, cnt) > 0 ) {
			if ( iParam2(ci) < 3 ) {
				fdlist(1, cnt) = fdlist(1, cnt) / 2
			}
			else {
				fdlist(1, cnt) = fdlist(1, cnt) * (50 + iParam2(ci) * 20) / 100
			}
		}
		else {
			if ( iParam2(ci) < 3 ) {
				fdlist(1, cnt) = fdlist(1, cnt) * ((3 - iParam2(ci)) * 100 + 100) / 100
			}
			else {
				fdlist(1, cnt) = fdlist(1, cnt) * 100 / (iParam2(ci) * 50)
			}
		}
	loop
	p = iParam1(ci) / 1000
	repeat 1
		if ( cc == CHARA_PLAYER ) {
			if ( gettrait(0, 41) ) {
				if ( foodid == 204 ) {
					s = refchara(iSubName(ci), DBSPEC_CHARA_FILTER, 1)
					if ( instr(s, 0, "/man/") != (-1) ) {
						txt -1, lang("ウマイ！", "Delicious!")
					}
				}
			}
		}
		if ( iMaterial(ci) == ITEM_MATERIAL_RAW ) {
			if ( iParam3(ci) < 0 ) {
				ctalk cc, 408, cc, cc
				if ( stat == 0 ) {
					if ( cc == CHARA_PLAYER ) {
						txt -1, lang("うげっ！腐ったものを食べてしまった…うわ…", "Ugh! Rotten food!")
					}
					else {
						txt -1, lang(name(cc) + "は渋い顔をした。", name(cc) + " looks glum.")
					}
				}
				break
			}
		}
		if ( foodid == 204 ) {
			ctalk cc, 954, cc, cc
			if ( stat ) {
				break
			}
		}
		if ( foodid == 571 ) {
			ctalk cc, 953, cc, cc
			if ( stat ) {
				break
			}
		}
		if ( foodid == 573 ) {
			ctalk cc, 952, cc, cc
			if ( stat ) {
				break
			}
		}
		if ( foodid == 618 ) {
			ctalk cc, 951, cc, cc
			if ( stat ) {
				break
			}
		}
		if ( foodid == 574 ) {
			ctalk cc, 1029, cc, cc
			if ( stat ) {
				break
			}
		}
		ctalk cc, 957, cc, cc
		if ( stat ) {
			break
		}
		ctalk cc, 958, cc, cc
		if ( stat ) {
			break
		}
		if ( iParam2(ci) == 0 ) {
			if ( p == 1 ) {
				ctalk cc, 409, cc, cc
				if ( stat == 0 & cc == CHARA_PLAYER ) {
					txt -1, lang("生肉だ…", "Ugh...Raw meat...")
				}
				break
			}
			if ( p == 7 ) {
				ctalk cc, 410, cc, cc
				if ( stat == 0 & cc == CHARA_PLAYER ) {
					txt -1, lang("粉の味がする…", "It tastes like...powder...")
				}
				break
			}
			if ( p == 5 ) {
				ctalk cc, 411, cc, cc
				if ( stat == 0 & cc == CHARA_PLAYER ) {
					txt -1, lang("生で食べるものじゃないな…", "Er...this needs to be cooked.")
				}
				break
			}
			if ( p == 10 ) {
				ctalk cc, 416, cc, cc
				if ( stat == 0 & cc == CHARA_PLAYER ) {
					txt -1, lang("美味しい！", "Delicious!"), lang("これはいける！", "Gee what a good taste!"), lang("いい味だ！", "It tasted pretty good!")
				}
				break
			}
			else {
				ctalk cc, 412, cc, cc
				if ( stat == 0 & cc == CHARA_PLAYER ) {
					txt -1, lang("まずいわけではないが…", "It doesn't taste awful but..."), lang("平凡な味だ。", "Very boring food.")
				}
			}
			break
		}
		if ( iParam2(ci) < 3 ) {
			ctalk cc, 413, cc, cc
			if ( stat == 0 & cc == CHARA_PLAYER ) {
				txt -1, lang("うぅ…腹を壊しそうだ。", "Boy, it gives your stomach trouble!"), lang("まずい！", "Ugh! Yuk!"), lang("ひどい味だ！", "Awful taste!!")
			}
			break
		}
		if ( iParam2(ci) < 5 ) {
			ctalk cc, 414, cc, cc
			if ( stat == 0 & cc == CHARA_PLAYER ) {
				txt -1, lang("まあまあの味だ。", "Uh-uh, the taste is so so."), lang("悪くない味だ。", "The taste is not bad.")
			}
			break
		}
		if ( iParam2(ci) < 7 ) {
			ctalk cc, 415, cc, cc
			if ( stat == 0 & cc == CHARA_PLAYER ) {
				txt -1, lang("かなりいける。", "It tasted good."), lang("それなりに美味しかった。", "Decent meal.")
			}
			break
		}
		if ( iParam2(ci) < 9 ) {
			ctalk cc, 416, cc, cc
			if ( stat == 0 & cc == CHARA_PLAYER ) {
				txt -1, lang("美味しい！", "Delicious!"), lang("これはいける！", "Gee what a good taste!"), lang("いい味だ！", "It tasted pretty good!")
			}
			break
		}
		ctalk cc, 417, cc, cc
		if ( stat == 0 & cc == CHARA_PLAYER ) {
			txt -1, lang("最高に美味しい！", "Wow! Terrific food!"), lang("まさに絶品だ！", "Yummy! Absolutely yummy!"), lang("天にも昇る味だ！", "It tasted like seventh heaven!")
		}
	loop
	nc_intb_001 = 0
	if ( foodid == 797 ) {
		fdmax = 0
		if ( fdmax < 10 ) {
			fdlist(0, fdmax) = 10, 50
			fdmax++
		}
		if ( fdmax < 10 ) {
			fdlist(0, fdmax) = 11, 50
			fdmax++
		}
		if ( fdmax < 10 ) {
			fdlist(0, fdmax) = 17, 50
			fdmax++
		}
		if ( fdmax < 10 ) {
			fdlist(0, fdmax) = 16, 50
			fdmax++
		}
		if ( fdmax < 10 ) {
			fdlist(0, fdmax) = 12, 50
			fdmax++
		}
		if ( fdmax < 10 ) {
			fdlist(0, fdmax) = 13, 50
			fdmax++
		}
		if ( fdmax < 10 ) {
			fdlist(0, fdmax) = 14, 50
			fdmax++
		}
		if ( fdmax < 10 ) {
			fdlist(0, fdmax) = 15, 50
			fdmax++
		}
		nutrition = 1000
		if ( cc == CHARA_PLAYER ) {
			txtef COLOR_GREEN
			txt -1, lang("食べても食べてもなくならない！", "This herb invigorates you.")
		}
	}
	if ( foodid == 425 ) {
		fdmax = 0
		if ( fdmax < 10 ) {
			fdlist(0, fdmax) = 10, 900 + iLevel(ci) * 10
			fdmax++
		}
		if ( fdmax < 10 ) {
			fdlist(0, fdmax) = 11, 900 + iLevel(ci) * 10
			fdmax++
		}
		if ( fdmax < 10 ) {
			fdlist(0, fdmax) = 17, 900 + iLevel(ci) * 10
			fdmax++
		}
		if ( fdmax < 10 ) {
			fdlist(0, fdmax) = 16, 900 + iLevel(ci) * 10
			fdmax++
		}
		if ( fdmax < 10 ) {
			fdlist(0, fdmax) = 12, 900 + iLevel(ci) * 10
			fdmax++
		}
		if ( fdmax < 10 ) {
			fdlist(0, fdmax) = 13, 900 + iLevel(ci) * 10
			fdmax++
		}
		if ( fdmax < 10 ) {
			fdlist(0, fdmax) = 14, 900 + iLevel(ci) * 10
			fdmax++
		}
		if ( fdmax < 10 ) {
			fdlist(0, fdmax) = 15, 900 + iLevel(ci) * 10
			fdmax++
		}
		nutrition = 2500
		if ( cc == CHARA_PLAYER ) {
			txtef COLOR_GREEN
			txt -1, lang("このハーブは活力の源だ。", "This herb invigorates you.")
		}
		nc_intb_001 = 1
	}
	if ( foodid == 422 ) {
		fdmax = 0
		if ( fdmax < 10 ) {
			fdlist(0, fdmax) = 10, 2700 + iLevel(ci) * 100
			fdmax++
		}
		if ( fdmax < 10 ) {
			fdlist(0, fdmax) = 11, 2100 + iLevel(ci) * 100
			fdmax++
		}
		if ( fdmax < 10 ) {
			fdlist(0, fdmax) = 17, 30 + iLevel(ci) * 10
			fdmax++
		}
		if ( fdmax < 10 ) {
			fdlist(0, fdmax) = 16, 30 + iLevel(ci) * 10
			fdmax++
		}
		if ( fdmax < 10 ) {
			fdlist(0, fdmax) = 12, 30 + iLevel(ci) * 10
			fdmax++
		}
		if ( fdmax < 10 ) {
			fdlist(0, fdmax) = 13, 30 + iLevel(ci) * 10
			fdmax++
		}
		if ( fdmax < 10 ) {
			fdlist(0, fdmax) = 14, 30 + iLevel(ci) * 10
			fdmax++
		}
		if ( fdmax < 10 ) {
			fdlist(0, fdmax) = 15, 30 + iLevel(ci) * 10
			fdmax++
		}
		nutrition = 500
		modgrowth2 cc, 10, 2
		modgrowth2 cc, 11, 2
		if ( cc == CHARA_PLAYER ) {
			txtef COLOR_GREEN
			txt -1, lang("新たな力が湧きあがってくる。", "You feel might coming through your body.")
		}
		nc_intb_001 = 1
	}
	if ( foodid == 423 ) {
		fdmax = 0
		if ( fdmax < 10 ) {
			fdlist(0, fdmax) = 10, 30 + iLevel(ci) * 10
			fdmax++
		}
		if ( fdmax < 10 ) {
			fdlist(0, fdmax) = 11, 30 + iLevel(ci) * 10
			fdmax++
		}
		if ( fdmax < 10 ) {
			fdlist(0, fdmax) = 17, 30 + iLevel(ci) * 10
			fdmax++
		}
		if ( fdmax < 10 ) {
			fdlist(0, fdmax) = 16, 2400 + iLevel(ci) * 100
			fdmax++
		}
		if ( fdmax < 10 ) {
			fdlist(0, fdmax) = 12, 30 + iLevel(ci) * 10
			fdmax++
		}
		if ( fdmax < 10 ) {
			fdlist(0, fdmax) = 13, 30 + iLevel(ci) * 10
			fdmax++
		}
		if ( fdmax < 10 ) {
			fdlist(0, fdmax) = 14, 30 + iLevel(ci) * 10
			fdmax++
		}
		if ( fdmax < 10 ) {
			fdlist(0, fdmax) = 15, 2400 + iLevel(ci) * 100
			fdmax++
		}
		nutrition = 500
		modgrowth2 cc, 16, 2
		modgrowth2 cc, 15, 2
		if ( cc == CHARA_PLAYER ) {
			txtef COLOR_GREEN
			txt -1, lang("魔力の向上を感じる。", "You feel magical power springs up inside you.")
		}
		nc_intb_001 = 1
	}
	if ( foodid == 424 ) {
		fdmax = 0
		if ( fdmax < 10 ) {
			fdlist(0, fdmax) = 10, 30 + iLevel(ci) * 10
			fdmax++
		}
		if ( fdmax < 10 ) {
			fdlist(0, fdmax) = 11, 30 + iLevel(ci) * 10
			fdmax++
		}
		if ( fdmax < 10 ) {
			fdlist(0, fdmax) = 17, 30 + iLevel(ci) * 10
			fdmax++
		}
		if ( fdmax < 10 ) {
			fdlist(0, fdmax) = 16, 30 + iLevel(ci) * 10
			fdmax++
		}
		if ( fdmax < 10 ) {
			fdlist(0, fdmax) = 12, 2250 + iLevel(ci) * 100
			fdmax++
		}
		if ( fdmax < 10 ) {
			fdlist(0, fdmax) = 13, 2400 + iLevel(ci) * 100
			fdmax++
		}
		if ( fdmax < 10 ) {
			fdlist(0, fdmax) = 14, 30 + iLevel(ci) * 10
			fdmax++
		}
		if ( fdmax < 10 ) {
			fdlist(0, fdmax) = 15, 30 + iLevel(ci) * 10
			fdmax++
		}
		modgrowth2 cc, 12, 2
		modgrowth2 cc, 13, 2
		nutrition = 500
		if ( cc == CHARA_PLAYER ) {
			txtef COLOR_GREEN
			txt -1, lang("感覚が研ぎ澄まされるようだ。", "You feel as your sense is sharpened.")
		}
		nc_intb_001 = 1
	}
	if ( foodid == 426 ) {
		fdmax = 0
		if ( fdmax < 10 ) {
			fdlist(0, fdmax) = 10, 30 + iLevel(ci) * 10
			fdmax++
		}
		if ( fdmax < 10 ) {
			fdlist(0, fdmax) = 11, 30 + iLevel(ci) * 10
			fdmax++
		}
		if ( fdmax < 10 ) {
			fdlist(0, fdmax) = 17, 2550 + iLevel(ci) * 100
			fdmax++
		}
		if ( fdmax < 10 ) {
			fdlist(0, fdmax) = 16, 30 + iLevel(ci) * 10
			fdmax++
		}
		if ( fdmax < 10 ) {
			fdlist(0, fdmax) = 12, 30 + iLevel(ci) * 10
			fdmax++
		}
		if ( fdmax < 10 ) {
			fdlist(0, fdmax) = 13, 30 + iLevel(ci) * 10
			fdmax++
		}
		if ( fdmax < 10 ) {
			fdlist(0, fdmax) = 14, 2100 + iLevel(ci) * 100
			fdmax++
		}
		if ( fdmax < 10 ) {
			fdlist(0, fdmax) = 15, 30 + iLevel(ci) * 10
			fdmax++
		}
		nutrition = 500
		modgrowth2 cc, 17, 2
		modgrowth2 cc, 14, 2
		if ( cc == CHARA_PLAYER ) {
			txtef COLOR_GREEN
			txt -1, lang("ホルモンが活発化した。", "Your hormones are activated.")
		}
		nc_intb_001 = 1
	}
	if ( foodid == 427 ) {
		fdmax = 0
		if ( fdmax < 10 ) {
			fdlist(0, fdmax) = 10, 300 + iLevel(ci) * 10
			fdmax++
		}
		if ( fdmax < 10 ) {
			fdlist(0, fdmax) = 11, 300 + iLevel(ci) * 10
			fdmax++
		}
		if ( fdmax < 10 ) {
			fdlist(0, fdmax) = 17, 300 + iLevel(ci) * 10
			fdmax++
		}
		if ( fdmax < 10 ) {
			fdlist(0, fdmax) = 16, 300 + iLevel(ci) * 10
			fdmax++
		}
		if ( fdmax < 10 ) {
			fdlist(0, fdmax) = 12, 300 + iLevel(ci) * 10
			fdmax++
		}
		if ( fdmax < 10 ) {
			fdlist(0, fdmax) = 13, 300 + iLevel(ci) * 10
			fdmax++
		}
		if ( fdmax < 10 ) {
			fdlist(0, fdmax) = 14, 300 + iLevel(ci) * 10
			fdmax++
		}
		if ( fdmax < 10 ) {
			fdlist(0, fdmax) = 15, 300 + iLevel(ci) * 10
			fdmax++
		}
		nutrition = 20000
		nc_intb_001 = 1
	}
	if ( nc_intb_001 ) {
		if ( iParam2(ci) > 0 ) {
			repeat fdmax
				if ( iParam2(ci) < 3 ) {
					fdlist(1, cnt) = fdlist(1, cnt) / 2
				}
				else {
					fdlist(1, cnt) = fdlist(1, cnt) * (50 + iParam2(ci) * 20) / 100
				}
			loop
		}
	}
	if ( foodid == 738 ) {
		nutrition = 750
	}
	if ( cc == CHARA_PLAYER ) {
		if ( iMaterial(ci) == ITEM_MATERIAL_RAW ) {
			if ( iParam3(ci) < 0 ) {
				gosub *label_1839
			}
		}
	}
	if ( foodid == 204 ) {
		s = refchara(iSubName(ci), DBSPEC_CHARA_FILTER, 1)
		if ( cc == CHARA_PLAYER ) {
			if ( instr(s, 0, "/man/") != (-1) ) {
				if ( gettrait(0, 41) ) {
					txt -1, lang("これはあなたの大好きな人肉だ！", "It's your favorite human flesh!")
				}
				else {
					if ( ogTitleHannibalLecter == 2 ) {
						txt -1, lang("これは人肉だ…が、あなたは特に気にならなかった。", "This is human flesh... however, you don't particularly mind the taste.")
					}
					else {
						txt -1, lang("これは人肉だ…うぇぇ！", "Eeeek! It's human flesh!")
						dmgsan cc, 15
						dmgcon cc, CONDITION_INSANE, 150
					}
					if ( gettrait(0, 41) == 0 ) {
						if ( rnd(5) == 0 ) {
							tid = TRAIT_NORMAL_OTHER_CANNIBALISM
							traitmode = 0
							r1 = 0
							gosub *trait_ref
							txtef COLOR_GREEN
							txt -1, traitrefn(0)
							settrait 0, 41, 1
						}
					}
				}
				ogTimesAteHumanFlesh++
				gosub *label_2665
			}
			else {
				if ( gettrait(0, 41) ) {
					txt -1, lang("人肉の方が好みだが…", "You would've rather eaten human flesh.")
					nutrition = nutrition * 2 / 3
				}
			}
		}
	}
	if ( foodid == 573 & inv((9 /*!!!@[INV_ITEM_AMMO @@@ INV_ITEM_CHARGE @@@ INV_ITEM_CLIENT @@@ INV_ITEM_FILE @@@ INV_ITEM_NEXT_PERIOD]@!!! */), ci) > 0 ) {
		if ( cbit(CHARA_BIT_PREGNANT, cc) == FALSE ) {
			txtef COLOR_YELLOW
			if ( inv((9 /*!!!@[INV_ITEM_AMMO @@@ INV_ITEM_CHARGE @@@ INV_ITEM_CLIENT @@@ INV_ITEM_FILE @@@ INV_ITEM_NEXT_PERIOD]@!!! */), ci) == 330 ) {
				txt -1, lang(name(cc) + "は寄生された。", name(cc) + " get" + _s(cc) + " pregnant.")
			}
			else {
				txt -1, lang(name(cc) + "は妊娠した。", name(cc) + " get" + _s(cc) + " pregnant.")
			}
			txtef COLOR_SKY_BLUE
			ctalk cc, 973, cc, 0
			animeload 8, cc
			cbitmod CHARA_BIT_PREGNANT, cc, TRUE
			ocAlienChildCreatureID(cc) = inv((9 /*!!!@[INV_ITEM_AMMO @@@ INV_ITEM_CHARGE @@@ INV_ITEM_CLIENT @@@ INV_ITEM_FILE @@@ INV_ITEM_NEXT_PERIOD]@!!! */), ci)
			if ( inv((9 /*!!!@[INV_ITEM_AMMO @@@ INV_ITEM_CHARGE @@@ INV_ITEM_CLIENT @@@ INV_ITEM_FILE @@@ INV_ITEM_NEXT_PERIOD]@!!! */), ci) == 343 ) {
				ocItemDV(cc) = iDV(ci) + 1
			}
		}
		if ( rnd(2) ) {
			dbmode = DBMODE_ON_EAT
			dbid = inv((9 /*!!!@[INV_ITEM_AMMO @@@ INV_ITEM_CHARGE @@@ INV_ITEM_CLIENT @@@ INV_ITEM_FILE @@@ INV_ITEM_NEXT_PERIOD]@!!! */), ci)
			cibkref = ci
			gosub *db_creature
		}
	}
	if ( foodid == 204 | (foodid == 571 | foodid == 573 & rnd(3) == 0) ) {
		dbmode = DBMODE_ON_EAT
		dbid = iSubName(ci)
		cibkref = ci
		gosub *db_creature
	}
	if ( iMaterial(ci) != ITEM_MATERIAL_RAW ) {
		i = refitem(foodid, DBSPEC_TYPE, ci)
		if ( i < 50000 | i == 60000 ) {
			if ( i == 10000 ) {
				if ( cRowActWarn(cc) == 0 ) {
					gosub *label_1873
					cRowActWarn(cc) = 0
				}
				else {
					gosub *label_1873
				}
			}
			if ( mtref(MTREF_WEIGHT, iMaterial(ci)) != mtref(MTREF_WEIGHT, ITEM_MATERIAL_RAW) ) {
				nutrition = nutrition * mtref(MTREF_WEIGHT, iMaterial(ci)) / mtref(MTREF_WEIGHT, ITEM_MATERIAL_RAW)
			}
			if ( mtref(MTREF_PV, iMaterial(ci)) >= mtref(MTREF_PV, ITEM_MATERIAL_METAL) ) {
				gosub *eatHard
			}
			if ( iMaterial(ci) == ITEM_MATERIAL_ETHER ) {
				gosub *eatEther
			}
			else {
				if ( iMaterial(ci) == ITEM_MATERIAL_SPIRIT ) {
					gosub *eatGhost
				}
			}
		}
	}
	repeat fdmax
		i = calcfixexp(cc, ci)
		if ( i > 0 ) {
			skillexp2 fdlist(0, cnt), cc, fdlist(1, cnt) * i / 100
		}
	loop
	if ( iStatus(ci) >= ITEM_STATUS_BLESSED ) {
		nutrition = nutrition * 150 / 100
	}
	if ( iStatus(ci) <= ITEM_STATUS_CURSED ) {
		nutrition = nutrition * 50 / 100
	}
	if ( nutrition >= 3000 ) {
		if ( rnd(10) == 0 | cHunger(cc) >= 12000 ) {
			modweight cc, rnd(3) + 1, cHunger(cc) >= 12000
		}
	}
	if ( iStatus(ci) == ITEM_STATUS_BLESSED ) {
		if ( ibit(ITEM_BIT_REMAKE, ci) ) {
			i = calcfixexp(cc, ci)
			if ( i > 0 ) {
				god_applyblessedfoodeffect cc, ci, i
			}
		}
	}
	cHunger(cc) += nutrition
	if ( cId(cc) == CREATURE_ID_CUTE_FAIRY ) {
		if ( nutrition >= 2000 ) {
			cibk = ci
			flt calcobjlv(cLevel(cc))
			flttypeminor = FILTER_ITEM_SEED
			itemcreate -1, ITEM_ID_DUMMY, cX(cc), cY(cc), 0
			ctalk cc, 1389, cc, cc
			if ( stat == 0 ) {
				txtef COLOR_SKY_BLUE
				txt cc, lang("「げふぅ」", "「Ugh-Ughu」")
			}
			txtef COLOR_SKY_BLUE
			txt cc, lang(name(cc) + "は" + itemname(ci, 1) + "を吐き出した。", name(cc) + " spews up " + itemname(ci, 1) + ".")
			ci = cibk
		}
	}
	if ( cId(cc) == CREATURE_ID_USER ) {
		if ( userdatan(1, cUNID(cc)) == "pelican" | userdatan(1, cUNID(cc)) == "ペリカン" ) {
			if ( nutrition >= 2000 ) {
				if ( rnd(5) == 0 ) {
					cibk = ci
					flt
					flttypemajor = FILTER_CARGO_TRADE
					if ( mType != MAP_TYPE_WORLD & mType != MAP_TYPE_HOME & mType != MAP_TYPE_TOWN & mType != (4 /*!!!@[MAP_TYPE_DUNGEON_RANGE @@@ MAP_TYPE_LOCAL]@!!! */) & mType != MAP_TYPE_FIELD & mType != MAP_TYPE_VILLAGE ) {
						itemcreate -1, ITEM_ID_DUMMY, -1, -1, 0
						ctalk cc, 1389, cc, cc
						if ( stat == 0 ) {
							txtef COLOR_SKY_BLUE
							txt cc, lang("「クェー」", "「Quuuu」")
						}
						txtef COLOR_SKY_BLUE
						txt cc, lang(name(cc) + "は" + itemname(ci, 1) + "をどこからともなく持ってきた。" + itemname(ci, 1) + "は給料箱に送られた。", name(cc) + " brought the " + itemname(ci, 1) + ". " + itemname(ci, 1) + "Was sent to the salary box.")
					}
					else {
						itemcreate -1, ITEM_ID_DUMMY, cX(cc), cY(cc), rnd(3) + 1
						ctalk cc, 1389, cc, cc
						if ( stat == 0 ) {
							txtef COLOR_SKY_BLUE
							txt cc, lang("「クェー」", "「Quuuu」")
						}
						txtef COLOR_SKY_BLUE
						txt cc, lang(name(cc) + "は" + itemname(ci, 1) + "をどこからともなく持ってきた。", name(cc) + " brought the " + itemname(ci, 1) + ".")
					}
					ci = cibk
				}
			}
		}
	}
	if ( foodid == 204 ) {
		if ( iSubName(ci) == 319 ) {
			txtef COLOR_GREEN
			txt -1, lang(name(cc) + "は進化した。", name(cc) + " evolve" + _s(cc) + ".")
			skillmod SKILL_ATTR_LIFE, cc, 1000
			skillmod SKILL_ATTR_MANA, cc, 1000
			repeat 400 - 100, 100
				if ( skillUse(cnt) == SKILL_NONE | sorg(cnt, cc) == 0 ) {
					continue
				}
				modgrowth2 cc, cnt, rnd(10) + 1
			loop
		}
	}
	if ( foodid == 755 ) {
		txt -1, lang("これは縁起がいい！", "The food is a charm!")
		skillmod SKILL_ATTR_LUC, cc, 2000
	}
	if ( foodid == 702 ) {
		skillmod SKILL_ATTR_LUC, cc, 1000
	}
	if ( foodid == 639 ) {
		skillmod SKILL_ATTR_LUC, cc, 1000 * 20
	}
	if ( foodid == 655 ) {
		skillmod SKILL_ATTR_LIFE, cc, 1000 * 3
	}
	if ( foodid == 662 ) {
		skillmod SKILL_ATTR_MANA, cc, 1000 * 3
	}
	if ( foodid == 738 ) {
		if ( cc == CHARA_PLAYER | petcheck(cc) ) {
			txt -1, lang(name(cc) + "はクッキーの中のおみくじを読んだ。", name(cc) + " read" + _s(cc) + " the paper fortune.")
			valn = "%COOKIE2"
			gosub *spec_talk
			if ( iStatus(ci) >= ITEM_STATUS_BLESSED | (iStatus(ci) == ITEM_STATUS_NORMAL & rnd(2)) ) {
				if ( rnd(5) ) {
					valn = "%COOKIE1"
				}
				else {
					valn = "%O_COOKIE1"
				}
				gosub *spec_talk
			}
			txtef COLOR_YELLOW
			txt -1, "" + buff
		}
	}
	if ( foodid == 667 ) {
		txt -1, lang(name(cc) + "の心はすこし癒された。", name(cc) + your(cc) + " heart is warmed.")
		if ( godcheck(cc) != "danalin" ) {
			healsan cc, 30
		}
	}
	if ( foodid == 499 ) {
		txt -1, lang(name(cc) + "は幸せの粉を摂取した。", name(cc) + " ingested happy powder.")
		dmgcon cc, CONDITION_DIM, 1000
		addbuff cc, BUFF_LUCK, 300, 1000
	}
	if ( foodid == 785 ) {
		if ( cnRace(cc) == "snail" ) {
			food_meltbysalt cc
		}
	}
	if ( ibit(ITEM_BIT_POISON_BLEND, ci) == TRUE ) {
		if ( synccheck(cc, -1) ) {
			txt -1, lang("これは毒されている！" + name(cc) + "はもがき苦しみのたうちまわった！", "It's poisoned! " + name(cc) + " writhe" + _s(cc) + " in agony!")
			ctalk cc, 1249, cc, cc
			if ( stat == 0 ) {
				txt cc, lang("「ギャァァ…！」", cnvtalk("Gyaaaaa...!")), lang("「ブッ！」", cnvtalk("Ugh!"))
			}
		}
		dmghp cc, rnd(250) + 250, DAMAGE_FROM_POISON
		if ( cExist(cc) != CHAR_STATE_ALIVE ) {
			if ( cc != CHARA_PLAYER ) {
				if ( cRelation(cc) >= RELATION_NEUTRAL ) {
					modkarma 0, -1
				}
			}
			return
		}
	}
	if ( ibit(ITEM_BIT_LOVE_BLEND, ci) == TRUE ) {
		cEmoIcon(cc) = 17 + 100 * 3
		if ( cc == CHARA_PLAYER ) {
			txtef COLOR_SKY_BLUE
			ctalk cc, 407, cc, cc
			if ( stat == 0 ) {
				txtef COLOR_SKY_BLUE
				txt -1, lang("あなたは興奮した！", "You are excited!")
			}
		}
		else {
			txtef COLOR_SKY_BLUE
			ctalk cc, 407, cc, cc
			if ( stat == 0 ) {
				txtef COLOR_SKY_BLUE
				txt cc, name(cc) + lang("「なんだか…変な気分なの…」", " gasps, " + cnvtalk("I f-feel...strange...")), name(cc) + lang("「あれ…なにこの感じは…」", "gasps " + cnvtalk("Uh..uh..What is this feeling..."))
			}
			modkarma 0, -10
		}
		modimp cc, 30
		f = 0
		lovemiracle cc
		dmgcon cc, CONDITION_DIM, 500
		dmgcon cc, 13, 500
		if ( godcheck(0) == "dorein" ) {
			modimp cc, 30
			f = 0
			lovemiracle cc
			dmgcon cc, CONDITION_DIM, 500
			dmgcon cc, 13, 500
		}
		cEmoIcon(cc) = 17 + 100 * 3
	}
	repeat 15
		if ( inv(STARTING_INV_ITEM_ENCHANT + cnt * 2, ci) == 0 ) {
			break
		}
		enc = inv(STARTING_INV_ITEM_ENCHANT + cnt * 2, ci)
		if ( enc == 36 ) {
			p = rnd(inv(STARTING_INV_ITEM_ENCHANT_POWER + cnt * 2, ci) / 50 + 1) + 1
			healsp cc, p
			continue
		}
		if ( enc == 38 ) {
			p = rnd(inv(STARTING_INV_ITEM_ENCHANT_POWER + cnt * 2, ci) / 25 + 1) + 1
			healmp cc, p / 5
			continue
		}
		if ( enc == 37 ) {
			if ( cId(cc) == CREATURE_ID_YOUNGER_SISTER | cId(cc) == CREATURE_ID_YOUNGER_SISTER2 | foodid == 667 ) {
				evadd 101, cc
			}
			else {
				evadd EVENT_RAGNAROK, cc
			}
			continue
		}
		if ( enc == 40 ) {
			if ( gTimeStopTime == 0 ) {
				txtef COLOR_SKY_BLUE
				txt -1, lang(name(cc) + "は時を止めた。", name(cc) + " stop" + _s(cc) + " time.")
				stopthetimebegin inv(STARTING_INV_ITEM_ENCHANT_POWER + cnt * 2, ci) / 100 + 1 + 1
				continue
			}
		}
		enc2 = enc / 10000
		if ( enc2 != 0 ) {
			enc = enc \ 10000
			if ( enc2 == 1 | enc2 == 3 ) {
				skillexp2 enc, cc, (inv(STARTING_INV_ITEM_ENCHANT_POWER + cnt * 2, ci) / 50 + 1) * 100 * (1 + (cc != CHARA_PLAYER) * 2)
				if ( synccheck(cc, -1) ) {
					if ( inv(STARTING_INV_ITEM_ENCHANT_POWER + cnt * 2, ci) / 50 + 1 >= 0 ) {
						txt -1, lang(name(cc) + "の" + skillname(enc) + "は発達した。", his(cc) + " " + skillname(enc) + " develops.")
					}
					else {
						txt -1, lang(name(cc) + "の" + skillname(enc) + "は衰えた。", his(cc) + " " + skillname(enc) + " deteriorates.")
					}
				}
				continue
			}
			if ( enc2 == 2 ) {
				p = inv(STARTING_INV_ITEM_ENCHANT_POWER + cnt * 2, ci)
				repeat abs(p / 100) + 1
					if ( p >= 0 ) {
						if ( rnd(10) == 0 ) {
							resistmod cc, enc, 50
						}
					}
					else {
						if ( rnd(10) == 0 ) {
							resistmod cc, enc, -50
						}
					}
				loop
				continue
			}
			if ( enc2 == 6 ) {
				if ( enc != 19 ) {
					addbuff cc, 20 + (enc - 10), (inv(STARTING_INV_ITEM_ENCHANT_POWER + cnt * 2, ci) / 50 + 1) * 5 * (1 + (cc != CHARA_PLAYER)), 2000
					continue
				}
			}
			if ( enc2 == 7 ) {
				if ( enc != 61 ) {
					calcbuff CALCBUFF_DURATION, enc - 21, (inv(STARTING_INV_ITEM_ENCHANT_POWER + cnt * 2, ci) / 10 + 1) * 5
					addbuff cc, enc - 21, (inv(STARTING_INV_ITEM_ENCHANT_POWER + cnt * 2, ci) / 10 + 1) * 5, dur
					continue
				}
			}
		}
	loop
	if ( foodid == 340 ) {
		s = refchara(iSubName(ci), DBSPEC_CHARA_FILTER, 1)
		if ( instr(s, 0, "/slime/") != (-1) ) {
			resetfaction cc
			if ( eqfaction(0, "golem") ) {
				rmfaction 0, "golem"
			}
			if ( eqfaction(cc, "slime") == 0 ) {
				addfaction cc, "slime"
				txtef COLOR_GREEN
				txt -1, lang("" + name(cc) + "の体は軟質化した！", "Your body turns gelatinous!")
			}
		}
		if ( instr(s, 0, "/dragon/") != (-1) ) {
			if ( eqfaction(cc, "dragon") == 0 ) {
				resetfaction cc
				addfaction cc, "dragon"
				txtef COLOR_GREEN
				txt -1, lang("" + name(cc) + "は竜の魂を得た！", "You absorb the dragon's soul!")
				ospact(782 - 661) = 1
			}
		}
		if ( instr(s, 0, "/golem/") != (-1) ) {
			if ( eqfaction(0, "slime") ) {
				rmfaction 0, "slime"
			}
			if ( eqfaction(cc, "golem") == 0 ) {
				resetfaction cc
				addfaction cc, "golem"
				r1 = cc
				gosub *charaRefresh
				txtef COLOR_GREEN
				txt -1, lang("" + name(cc) + "の体は硬質化した！", "Your skin hardens!")
			}
		}
	}
	if ( refitem(foodid, DBSPEC_TYPE, ci) == FILTER_FURNITURE ) {
		if ( foodid == 761 | foodid == 707 | foodid == 88 | foodid == 328 | foodid == 690 | foodid == 691 | foodid == 692 | foodid == 693 ) {
			if ( rnd(5) == 0 | foodid == 761 | foodid == 707 ) {
				getmutationtrait cc, 30, 1
			}
		}
		if ( foodid == 653 ) {
			if ( rnd(5) == 0 ) {
				getmutationtrait cc, 31, -1
			}
		}
		if ( foodid == 487 | foodid == 486 ) {
			if ( rnd(5) == 0 ) {
				getmutationtrait cc, 31, 1
			}
		}
		if ( foodid == 604 ) {
			if ( rnd(5) == 0 ) {
				getmutationtrait cc, 37, 1
			}
		}
		if ( foodid == 129 | foodid == 131 | foodid == 316 | foodid == 534 ) {
			if ( rnd(5) == 0 ) {
				getmutationtrait cc, 27, 1
			}
		}
		if ( foodid == 413 ) {
			if ( rnd(50) == 0 ) {
				matgetmain MATERIAL_100_YEN_COIN
			}
		}
		if ( foodid == 414 ) {
			if ( rnd(100) == 0 ) {
				matgetmain MATERIAL_500_YEN_COIN
			}
		}
		if ( foodid == 78 | foodid == 151 | foodid == 318 | foodid == 773 | foodid == 128 | foodid == 149 ) {
			addbuff cc, BUFF_DIVINE_WISDOM, 100, 20
		}
		if ( foodid == 152 ) {
			dmgcon cc, CONDITION_DRUNK, 100
		}
		if ( foodid == 720 | foodid == 754 ) {
			if ( rnd(5) == 0 | foodid == 720 ) {
				txt -1, lang("ワアーォ、" + name(cc) + "は幸運になった気がする！", "Wow, " + name(cc) + " get" + _s(cc) + " lucky!")
				skillexp2 SKILL_ATTR_LUC, cc, 100
			}
		}
		if ( foodid == 539 ) {
			txt -1, lang("猫の像を食べるなんて！！", "How can you eat a statue of cat!!")
			modkarma 0, -5
		}
		if ( foodid == 169 | foodid == 164 | foodid == 165 | foodid == 166 | foodid == 167 | foodid == 170 ) {
			if ( rnd(5) ) {
				efid = SKILL_EFFECT_CURSE
				efp = 200
				gosub *label_3383
			}
			else {
				addbuff cc, BUFF_CONTINGENCY, 1500, 10
			}
		}
		if ( foodid == 80 | foodid == 174 | foodid == 297 | foodid == 303 | foodid == 304 | foodid == 307 | foodid == 310 | foodid == 319 | foodid == 325 | foodid == 613 | foodid == 654 ) {
			txt -1, lang("今日は眠れないな。", "I can't sleep tonight.")
		}
	}
	eatstatus iStatus(cieat), cc
	return

#deffunc getmutationtrait int getmutationtrait_prm0, int getmutationtrait_prm1, int getmutationtrait_prm2
	traitmode = 0
	tid = getmutationtrait_prm1
	gosub *trait_ref
	if ( getmutationtrait_prm2 == 1 ) {
		if ( gettrait(getmutationtrait_prm1, getmutationtrait_prm0) < traitref(2) ) {
			addtrait getmutationtrait_prm0, getmutationtrait_prm1, 1
			txtef COLOR_GREEN
			txt -1, traitrefn(0)
		}
	}
	else {
		if ( traitref(1) < gettrait(getmutationtrait_prm1, getmutationtrait_prm0) ) {
			addtrait getmutationtrait_prm0, getmutationtrait_prm1, -1
			txtef COLOR_RED
			txt -1, traitrefn(1)
		}
	}
	return

*housing_design
	homemapmode = 1
	cxbk = cX(CHARA_PLAYER)
	cybk = cY(CHARA_PLAYER)
	if ( areaId(gArea ) == AREA_TEST_WORLD ) {
		gosub *label_0152
	}
	else {
		gosub *label_0150
	}
	n = 0
	txtnew
	txt -1, lang("マウスの左クリックでタイルの敷設、コントロールキーを押しながらマウスの左クリックで塗りつぶし、右クリックでタイルの取得、移動キーでスクリーン移動、決定キーでタイル一覧、キャンセルキーで終了。", "Left click to place the tile, left click with Ctrl key to fill, right click to pick the tile under your mouse cursor, movement keys to move current position, hit the enter key to show the list of tiles, hit the cancel key to exit.")
	tlocinitx = cX(CHARA_PLAYER)
	tlocinity = cY(CHARA_PLAYER)
	tile = 0
	repeat
		await 10
		homemakewall = 1
		gosub *label_2584
		if ( stat == (-1) ) {
			break
		}
		getkey a, 17
		if ( a ) {
			if ( mapId(tlocx, tlocy) != tile ) {
				dim bufferx
				dim buffery
				bufferx(0) = tlocx
				buffery(0) = tlocy
				bufferno = 0
				fillcell = mapId(tlocx, tlocy)
				repeat
					seedx = bufferx(bufferno)
					seedy = buffery(bufferno)
					bufferno--
					repeat -1, 1
						if ( seedx - cnt < 0 ) {
							leftx = seedx - cnt + 1
							break
						}
						if ( mapId(seedx - cnt, seedy) != fillcell | ((chipm(CHIPM_ATTRIB, tile) & CHIPM_ATTRIB_CANT_PASS) != 0 & mapChara(seedx - cnt, seedy) != 0) ) {
							leftx = seedx - cnt + 1
							break
						}
					loop
					repeat -1, 1
						if ( seedx + cnt >= mWidth ) {
							rightx = seedx + cnt - 1
							break
						}
						if ( mapId(seedx + cnt, seedy) != fillcell | ((chipm(CHIPM_ATTRIB, tile) & CHIPM_ATTRIB_CANT_PASS) != 0 & mapChara(seedx + cnt, seedy) != 0) ) {
							rightx = seedx + cnt - 1
							break
						}
					loop
					repeat rightx - leftx + 1
						mapId(leftx + cnt, seedy) = tile
						mapIdMemory(leftx + cnt, seedy) = tile
					loop
					if ( (chipm(CHIPM_ATTRIB, tile) & CHIPM_ATTRIB_CANT_PASS) != 0 & mapChara(seedx, seedy) != 0 ) {
						mapId(seedx, seedy) = fillcell
						mapIdMemory(seedx, seedy) = fillcell
					}
					paintcellflag = 0
					repeat rightx - leftx + 1
						if ( seedy - 1 < 0 ) {
							break
						}
						if ( mapId(leftx + cnt, seedy - 1) != fillcell | ((chipm(CHIPM_ATTRIB, tile) & CHIPM_ATTRIB_CANT_PASS) != 0 & mapChara(leftx + cnt, seedy - 1) != 0) ) {
							if ( paintcellflag == 1 ) {
								bufferno++
								bufferx(bufferno) = leftx + cnt - 1
								buffery(bufferno) = seedy - 1
							}
							paintcellflag = 0
						}
						else {
							paintcellflag = 1
						}
					loop
					if ( paintcellflag == 1 ) {
						bufferno++
						bufferx(bufferno) = rightx
						buffery(bufferno) = seedy - 1
					}
					paintcellflag = 0
					repeat rightx - leftx + 1
						if ( seedy + 1 >= mHeight ) {
							break
						}
						if ( mapId(leftx + cnt, seedy + 1) != fillcell | ((chipm(CHIPM_ATTRIB, tile) & CHIPM_ATTRIB_CANT_PASS) != 0 & mapChara(leftx + cnt, seedy + 1) != 0) ) {
							if ( paintcellflag == 1 ) {
								bufferno++
								bufferx(bufferno) = leftx + cnt - 1
								buffery(bufferno) = seedy + 1
							}
							paintcellflag = 0
						}
						else {
							paintcellflag = 1
						}
					loop
					if ( paintcellflag == 1 ) {
						bufferno++
						bufferx(bufferno) = rightx
						buffery(bufferno) = seedy + 1
					}
					if ( bufferno == (-1) ) {
						break
					}
				loop
			}
			await 30
		}
		else {
			if ( (chipm(CHIPM_ATTRIB, tile) & CHIPM_ATTRIB_CANT_PASS) == 0 ) {
				mapId(tlocx, tlocy) = tile
				mapIdMemory(tlocx, tlocy) = tile
			}
			else {
				efid = SKILL_SPELL_WALL_CREATION
				gosub *label_3383
			}
		}
		tlocinitx = tlocx
		tlocinity = tlocy
	loop
	homemapmode = 0
	cX(CHARA_PLAYER) = cxbk
	cY(CHARA_PLAYER) = cybk
	return

*label_0150
	p = 0
	gsel BUFFER_MAP
	repeat 7 * 33 * 12
		f = 0
		if ( cnt < 7 * 33 ) {
			f = 1
		}
		if ( cnt >= 330 & cnt < 363 ) {
			f = 1
		}
		if ( cnt >= 396 ) {
			if ( cnt < 429 ) {
				f = 1
			}
		}
		if ( cnt >= 462 ) {
			if ( cnt < 495 ) {
				f = 1
			}
		}
		if ( cnt == 543 | cnt >= 550 ) {
			if ( cnt < 726 ) {
				f = 1
			}
		}
		if ( f == 0 ) {
			continue
		}
		f = 1
		pget cnt \ 33 * 48, cnt / 33 * 48
		if ( ginfo(16) == 0 ) {
			if ( ginfo(17) == 0 ) {
				if ( ginfo(18) == 0 ) {
					f = 0
				}
			}
		}
		if ( f ) {
			list(0, p) = cnt
			p++
		}
		if ( chipm(CHIPM_ANIM, cnt) != 0 ) {
			continue cnt + chipm(CHIPM_ANIM, cnt)
		}
	loop
	listmax = p
	gsel BUFFER_SCREEN
	return

*label_0152
	p = 0
	gsel BUFFER_MAP
	repeat 7 * 33 * 12
		f = 0
		if ( cnt < 723 ) {
			f = 1
		}
		if ( f == 0 ) {
			continue
		}
		pget cnt \ 33 * 48, cnt / 33 * 48
		if ( ginfo(16) == 0 ) {
			if ( ginfo(17) == 0 ) {
				if ( ginfo(18) == 0 ) {
					f = 0
				}
			}
		}
		if ( f ) {
			list(0, p) = cnt
			p++
		}
		if ( chipm(CHIPM_ANIM, cnt) != 0 ) {
			continue cnt + chipm(CHIPM_ANIM, cnt)
		}
	loop
	listmax = p
	gsel BUFFER_SCREEN
	return








