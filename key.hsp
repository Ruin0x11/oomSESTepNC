#deffunc key_check int __ppp
	if (timeGetTime() / 1000 - time_talk > 20 && chatturn < 30) {
		chatturn = 30
	}
	if (usermusic == 2 & cfg_music == 3) {
		if (resmusic(nplay) == 1) {
			cmd_0_11 musicdata
			if (musicdata(0) == 0) {
				cmd_0_5
				nplay++
				if (resmusic(nplay) == 0) {
					nplay = 0
				}
				musicfolder = musiclist(nplay)
				if (resmusic(nplay) == 1) {
					cmd_0_13 musicfolder, 0, 0
				  cmd_0_4 0, 0
				}
				if (resmusic(nplay) == 2) {
					mci "close musicmc"
				  mci "open " + musicfolder + " alias musicmc"
					mci "play musicmc"
				}
			}
		} elseif (resmusic(nplay) == 2) {
			mci "status musicmc mode"
			if (refstr == "stopped") {
				mci "stop musicmc"
				mci "close musicmc"
				nplay++
				if (resmusic(nplay) == 0) {
					nplay = 0
				}
				musicfolder = musiclist(nplay)
				if (resmusic(nplay) == 1) {
					cmd_0_13 musicfolder, 0, 0
				  cmd_0_4 0, 0
				}
				if (resmusic(nplay) == 2) {
				  mci "open " + musicfolder + " alias musicmc"
					mci "play musicmc"
				}
			}
		}
		if (resmusic(nplay) == 0) {
			usermusic = 0
		}
	}
	if (ginfo(2) == 0) {
		objsel 0
	} else {
		key = ""
		objprm 0, ""
		keylog = ""
		await 100
		return
	}
	if (msgalert == 1) {
		if (cfg_alert > 1) {
			repeat cfg_alert
				await 10
				p@m19 = 0
				repeat 106
					if (cnt == 32 | cnt == 13 | (cnt >= 65 & cnt <= 90) | (cnt >= 96 & cnt <= 105)) {
						getkey a@m19, cnt
						if (a@m19) {
							p@m19 = 1
							break
						}
					}
				loop
				if (p@m19 == 0) {
					break
				}
			loop
			msgalert = 0
			keylog = ""
			objprm 0, ""
		}
	}
	key = ""
	if (nc_macromode == 1) {
		if (nc_key_log(nc_key_row) == "") {
			nc_macromode = 0
			nc_key_row = 0
			key = ""
			keylog = ""
			objprm 0, ""
			txt -1, lang("マクロを停止した。", "Stopped macro.")
			return
		}
		if (strmid(nc_key_log(nc_key_row), 0, strlen("Ifsc,")) == "Ifsc,") {
			f = 0
			split nc_key_log(nc_key_row), ",", nc_key_buff
			if (ogdata(36 + nc_key_buff(2)) >= 10000) {
				inv_getheader 0
				repeat invrange, invhead
					s = ""
					nc_strb_001 = itemname(cnt, 1, 0, 1)
					if (instr(nc_key_buff(1), 0, ioriginalnameref(iId(cnt))) != (-1) | instr(nc_strb_001, 0, nc_key_buff(1)) != (-1)) {
						if (iId(cnt) == ogdata(36 + int(nc_key_buff(2))) \ 1000000 \ 10000) {
							f = 1
							break
						}
					}
				loop
			} else {
				if (ogdata(36 + nc_key_buff(2)) > 0) {
					if (skillname(ogdata(36 + nc_key_buff(2))) == nc_key_buff(1)) {
						f = 1
					}
				}
			}
			if (f) {
				nc_key_row = int(nc_key_buff(3)) - 1
				key = ""
				keylog = ""
				objprm 0, ""
				return
			}
		}
		if (strmid(nc_key_log(nc_key_row), 0, strlen("Ifstop,")) == "Ifstop,") {
			split nc_key_log(nc_key_row), ",", nc_key_buff
			getkey nc_intb_001, peek(nc_key_buff(1), 0)
			if (nc_intb_001) {
				nc_macromode = 0
				nc_key_row = 0
				key = ""
				keylog = ""
				objprm 0, ""
				txt -1, lang("マクロを停止した。", "Stopped macro.")
				return
			}
		}
		if (strmid(nc_key_log(nc_key_row), 0, strlen("Pause,")) == "Pause,") {
			nc_strb_001 = nc_key_log(nc_key_row) + ",,"
			split nc_strb_001, ",", nc_key_buff
			if (nc_key_buff(1) == "") {
				rtval = 0
				txtnew
				txt -1, lang("マクロを一時停止中…", "Pausing macro...")
				promptl(0, 0) = stryes, "y", "1"
				promptmax = 1
				val = promptx, prompty, 160, 1
				nc_macromode = 0
				gosub *label_1353
				nc_macromode = 1
			} else {
				rtval = 0
				promptmax = 0
				txtnew
				txt -1, nc_key_buff(1)
				repeat
					if (nc_key_buff((cnt + 1) * 2) != "") {
						promptl(0, promptmax) = nc_key_buff((cnt + 1) * 2), "null", "" + cnt
						promptmax++
					} else {
						break
					}
				loop
				val = promptx, prompty, 160, 1
				nc_macromode = 0
				gosub *label_1353
				if (rtval == (-1)) {
					rtval = 0
				}
				nc_key_row = int(nc_key_buff((rtval + 1) * 2 + 1)) - 1
				nc_macromode = 1
				key = ""
				keylog = ""
				objprm 0, ""
				return
			}
		}
		if (strmid(nc_key_log(nc_key_row), 0, strlen("Skillset,")) == "Skillset,") {
			split nc_key_log(nc_key_row), ",", nc_key_buff
			repeat tailspact - 400, 400
				if (skillname(cnt) == nc_key_buff(1)) {
					nc_intb_001 = cnt
					repeat 20
						if (ogdata(36 + cnt) == nc_intb_001) {
							ogdata(36 + cnt) = 0
							stgdata(36 + cnt) = 0
						}
					loop
					ogdata(36 + int(nc_key_buff(2))) = cnt
					txt -1, lang("(マクロ)" + skillname(cnt) + "のショートカットを" + "{" + int(nc_key_buff(2)) + "}キーに割り当てた。", "(Macro) Assigned " + skillname(cnt) + " shortcut to {" + int(nc_key_buff(2)) + "} key.")
					break
				}
			loop
		}
		if (strmid(nc_key_log(nc_key_row), 0, strlen("Itemset,")) == "Itemset,") {
			nc_intb_002 = 0
			split nc_key_log(nc_key_row), ",", nc_key_buff
			inv_getheader 0
			repeat invrange, invhead
				s = ""
				nc_strb_001 = itemname(cnt, 1, 0, 1)
				if (instr(nc_key_buff(1), 0, ioriginalnameref(iId(cnt))) != (-1) | instr(nc_strb_001, 0, nc_key_buff(1)) != (-1)) {
					if (cfg_ST_shortcut) {
						if (instr(nc_key_buff(1), 0, lang("祝福された", "blessed")) != (-1)) {
							if (iCurseState(cnt) != 1 | iIdentificationState(cnt) < 3) {
								continue
							}
							s = lang("祝福された", "blessed")
						}
						if (instr(nc_key_buff(1), 0, lang("呪われていない", "uncursed")) != (-1)) {
							if (iCurseState(cnt) != 0 | iIdentificationState(cnt) < 3) {
								continue
							}
							s = lang("呪われていない", "uncursed ")
						}
						if (instr(nc_key_buff(1), 0, lang("呪われた", "cursed")) != (-1)) {
							if (iCurseState(cnt) != (-1) | iIdentificationState(cnt) < 3) {
								continue
							}
							s = lang("呪われた", "cursed ")
						}
						if (instr(nc_key_buff(1), 0, lang("堕落した", "doomed")) != (-1)) {
							if (iCurseState(cnt) != (-2) | iIdentificationState(cnt) < 3) {
								continue
							}
							s = lang("堕落した", "doomed ")
						}
						if (instr(nc_key_buff(1), 0, lang("未鑑定の", "unidentified")) != (-1)) {
							if (iIdentificationState(cnt) == 3) {
								continue
							}
							s = lang("未鑑定の", "unidentified ")
						}
					}
					switch nc_key_buff(2)
						case 0
							nc_intb_002 = 5
							swbreak
						case 1
							nc_intb_002 = 7
							swbreak
						case 2
							nc_intb_002 = 8
							swbreak
						case 3
							nc_intb_002 = 9
							swbreak
						case 4
							nc_intb_002 = 14
							swbreak
						case 5
							nc_intb_002 = 15
							swbreak
						case 6
							nc_intb_002 = 17
							swbreak
						case 7
							nc_intb_002 = 26
							swbreak
					swend
					p = iId(cnt) + int(nc_intb_002) * 10000 + inv(31, cnt) * 10000 * 100
					p1 = iCurseState(cnt)
					p2 = 0
					if (refitem(iId(cnt), 5, cnt) == 57000) {
						p2 = iParam2(cnt)
					}
					nc_intb_001 = cnt
					repeat 20
						if (ogdata(36 + cnt) == p & ((stgdata(36 + cnt) == p1 & stgdata(56 + cnt) == p2) | cfg_ST_shortcut == 0)) {
							ogdata(36 + cnt) = 0
							stgdata(36 + cnt) = 0
							stgdata(56 + cnt) = 0
						}
					loop
					repeat 20
						if (gdata(40 + cnt) == p) {
							gdata(40 + cnt) = 0
						}
					loop
					ogdata(36 + int(nc_key_buff(3))) = p
					stgdata(36 + int(nc_key_buff(3))) = p1
					stgdata(56 + int(nc_key_buff(3))) = p2
					gdata(40 + int(nc_key_buff(3))) = p
					txt -1, lang("(マクロ)" + nc_strb_001 + "のショートカットを" + "{" + int(nc_key_buff(3)) + "}キーに割り当てた。", "(Macro)Assigned " + s + ioriginalnameref(iId(cnt)) + " shortcut to {" + int(nc_key_buff(3)) + "} key.")
					break
				}
			loop
		}
		if (strmid(nc_key_log(nc_key_row), 0, strlen("Key,")) == "Key,") {
			split nc_key_log(nc_key_row), ",", nc_key_buff
			key = nc_key_buff(1)
			if (key == "UP") {
				key = key_north
			}
			if (key == "DOWN") {
				key = key_south
			}
			if (key == "LEFT") {
				key = key_west
			}
			if (key == "RIGHT") {
				key = key_east
			}
			if (key == "UPLEFT") {
				key = key_northwest
			}
			if (key == "UPRIGHT") {
				key = key_northeast
			}
			if (key == "DOWNLEFT") {
				key = key_southwest
			}
			if (key == "DOWNRIGHT") {
				key = key_southeast
			}
			if (key == "ESC") {
				key = key_esc
			}
			if (key == "ENTER") {
				key = key_enter
			}
			keylog = ""
			objprm 0, ""
		}
		if (strmid(nc_key_log(nc_key_row), 0, strlen("Sc,")) == "Sc,") {
			split nc_key_log(nc_key_row), ",", nc_key_buff
			sc = int(nc_key_buff(1))
			key = "sc"
			keylog = ""
			objprm 0, ""
		}
		if (strmid(nc_key_log(nc_key_row), 0, strlen("Paste,")) == "Paste,") {
			txt -1, lang("(マクロ)入力中ではない時にPasteが実行されました(行:", "(Macro)Paste was executed when no macro was being typed.(row:") + nc_key_row + ") "
			nc_macromode = 0
			nc_key_row = 0
			key = ""
			keylog = ""
			objprm 0, ""
			txt -1, lang("マクロを停止した。", "Stopped macro.")
			return
		}
		if (nc_key_log(nc_key_row) == "End") {
			nc_macromode = 0
			nc_key_row = 0
			key = ""
			keylog = ""
			objprm 0, ""
			txt -1, lang("マクロを停止した。", "Stopped macro.")
			return
		}
		if (strmid(nc_key_log(nc_key_row), 0, strlen("Roopend")) == "Roopend") {
			nc_macropoint = (-1)
			repeat 100
				if (strmid(nc_key_log(cnt), 0, strlen("Roop,")) == "Roop,") {
					nc_macropoint = cnt
				}
				if (cnt == nc_key_row) {
					break
				}
			loop
			if (nc_macropoint == (-1)) {
				txt -1, lang("【Error】始まりがないループを検知しました(行:", "(Error)Detected a loop with no beginning.(row:") + nc_key_row + ") "
				nc_macromode = 0
				nc_key_row = 0
				key = ""
				keylog = ""
				objprm 0, ""
				txt -1, lang("マクロを停止した。", "Stopped macro.")
				return
			}
			split nc_key_log(nc_macropoint), ",", nc_key_buff
			if (int(nc_key_buff(1)) > nc_key_roop(nc_macropoint)) {
				nc_key_row = nc_macropoint
				nc_key_roop(nc_macropoint)++
			}
		}
		nc_key_row++
		return
	}
	if (keylog != "") {
		keylog = strmid(keylog, 0, 1)
		if (peek(keylog, 0) == 13) {
			keylog = key_enter
		}
		key = keylog
		keylog = ""
		objprm 0, ""
	}
	mousel = 0
	f@m19 = 0
	key_tab = 0
	key_escape = 0
	stick p@m19, 15
	if (p@m19 != 0) {
		if (p@m19 == 128) {
			if (keywait == 0) {
				key = key_cancel
				key_escape = 1
			}
		}
		if (p@m19 == 1024) {
			key_tab = 1
			key = key_next
		}
	} else {
		getkey a@m19, 12
		if (a@m19) {
			key = key_wait
			f@m19 = 1
		}
		getkey a@m19, 45
		if (a@m19) {
			key = key_get
			f@m19 = 1
		}
		getkey a@m19, 36
		if (a@m19) {
			p@m19 = 3
		}
		getkey a@m19, 33
		if (a@m19) {
			p@m19 = 6
		}
		getkey a@m19, 35
		if (a@m19) {
			p@m19 = 9
		}
		getkey a@m19, 34
		if (a@m19) {
			p@m19 = 12
		}
	}
	getkey a@m19, 17
	if (a@m19) {
		key_ctrl = 1
	} else {
		key_ctrl = 0
	}
	getkey a@m19, 18
	if (a@m19) {
		key_alt = 1
	} else {
		key_alt = 0
	}
	getkey a@m19, 16
	if (a@m19) {
		keybd_wait = 100000 + keybd_wait \ 100
		key_shift = 1
		if (keywait != 0) {
			if (a@m19 == 0) {
				if (key_shift == 0) {
					keywait = 0
				}
			}
		}
		if (keywait == 0) {
			if (a@m19 == 1) {
				key = key_cancel
				keywait = 1
			}
		}
	} else {
		keywait = 0
		if (key_shift == 1) {
		}
		key_shift = 0
	}
	if (cfg_joypad) {
		j@m19 = 0
		DIGETJOYSTATE j@m19, 0
		HMMBITCHECK j@m19, 0
		if (stat) {
			p@m19 += 2
		}
		HMMBITCHECK j@m19, 1
		if (stat) {
			p@m19 += 8
		}
		HMMBITCHECK j@m19, 2
		if (stat) {
			p@m19 += 1
		}
		HMMBITCHECK j@m19, 3
		if (stat) {
			p@m19 += 4
		}
		a@m19 = 0
		repeat 12
			HMMBITCHECK j@m19, 4 + cnt
			if (stat) {
				a@m19 = 1
				if (jkey(cnt) == key_alter) {
					key_alt = 1
				}
				if (jkey(cnt) == key_cancel) {
					key_shift = 1
					if (p@m19 != 0) {
						keybd_wait = 100000 + keybd_wait \ 100
					}
				}
				if (prevjoy@m19 != cnt) {
					key = jkey(cnt)
					prevjoy@m19 = cnt
					if (key == key_esc) {
						key = key_cancel
						key_escape = 1
					}
					if (__ppp == 0) {
						b@m19 = 0
						if (key == key_fire) {
							key = key_northeast
							b@m19 = 1
						}
						if (key == key_target) {
							key = key_northwest
							b@m19 = 1
						}
						if (key == key_get) {
							key = key_northeast
							b@m19 = 1
						}
						if (key == key_alter) {
							key = key_northwest
							b@m19 = 1
						}
						if (b@m19 == 0 & key != key_enter & key != key_cancel & key != key_esc) {
							key = key_identify
						}
					}
				}
			}
		loop
		if (a@m19 == 0) {
			prevjoy@m19 = -1
		} elseif (__ppp == 2) {
			return
		}
	}
	if (quickkeywait) {
		if (p@m19 != 0) {
			return
		} else {
			quickkeywait = 0
		}
	}
	if (keybd_wait >= 100000) {
		if (key_shift == 0) {
			keybd_wait = 1000 + keybd_wait \ 100
		}
	}
	if (p@m19 == 1) {
		if (key_alt == 0) {
			key = key_west
			f@m19 = 1
		}
	}
	if (p@m19 == 2) {
		if (key_alt == 0) {
			key = key_north
			f@m19 = 1
		}
	}
	if (p@m19 == 4) {
		if (key_alt == 0) {
			key = key_east
			f@m19 = 1
		}
	}
	if (p@m19 == 8) {
		if (key_alt == 0) {
			key = key_south
			f@m19 = 1
		}
	}
	if (p@m19 == 3) {
		key = key_northwest
		f@m19 = 1
	}
	if (p@m19 == 6) {
		key = key_northeast
		f@m19 = 1
	}
	if (p@m19 == 9) {
		key = key_southwest
		f@m19 = 1
	}
	if (p@m19 == 12) {
		key = key_southeast
		f@m19 = 1
	}
	if (__ppp == 2) {
		return
	}
	if (f@m19) {
		if (keyactive@m19 != key) {
			keyactive@m19 = key
		}
		if (keybd_wait == 0) {
			keyactive@m19 = key
		}
		if (__ppp == 1) {
			if (keybd_attacking != 0) {
				if (keybd_wait \ cfg_attackwait != 0) {
					key = ""
				}
			} elseif (cfg_scroll == 0) {
				if (keybd_wait < cfg_walkwait * cfg_startrun) {
					if (keybd_wait \ cfg_walkwait == 0) {
					} else {
						key = ""
					}
				} else {
					running = 1
					if (keybd_wait < 100000) {
						if (keybd_wait \ cfg_runwait != 0) {
							key = ""
						}
					}
				}
			} elseif (p@m19 == 0) {
				if (keybd_wait < 10) {
					if (keybd_wait != 0) {
						key = ""
					}
				}
			} elseif (keybd_wait > cfg_startrun) {
				if (cfg_runscroll == 0) {
					if (keybd_wait \ cfg_runwait == 0) {
					} else {
						key = ""
					}
				}
				running = 1
			}
		} elseif (keybd_wait < 14) {
			if (keybd_wait == 0 | keybd_wait == 7) {
			} else {
				key = ""
			}
		} elseif (keybd_wait < 1000) {
			if (keybd_wait \ 2 != 1) {
				key = ""
			}
		}
		keybd_wait++
	} else {
		keybd_wait = 0
		keybd_attacking = 0
		running = 0
		keyactive@m19 = ""
	}
	repeat 10, 48
		getkey p@m19, cnt
		if (p@m19) {
			p@m19 = (cnt - 48) \ 10
			key = "sc"
			sc = cnt - 48 + (key_shift == 1 | key_ctrl == 1) * 10
			if (cfg_wait1 != 0) {
				keybd_event cnt, 0, 2
			}
			scon@m19 = 1
		}
	loop
	if (scon@m19) {
		key = "sc"
		scon@m19 = 0
		keylog = ""
		objprm 0, ""
		return
	}
	if (keyhalt != 0) {
		if (key != "" | keybd_wait != 0) {
			key = ""
		} else {
			keyhalt = 0
		}
	}
	return



#deffunc keyrelease
	repeat
		await 30
		stick a@m20, 768
		if (a@m20 == 0) {
			key_check
			if (key == "") {
				break
			}
		}
	loop
	return



#deffunc press int __qqq
	repeat
		await 20
		key_check
		if (__qqq == 0) {
			if (key != "") {
				break
			}
		}
		if (__qqq == 1) {
			if (key == key_enter | key == key_cancel) {
				break
			}
		}
	loop
	keyhalt = 1
	return
