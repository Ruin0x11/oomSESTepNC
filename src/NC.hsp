// 記念日チェック
// 0:妹の日
// 1:ベイベーの日
// 2:クリスマスイブ
// 3:クリスマス
// 4:バレンタインデー
// 5:アフターバレンタインデー
// 6:七草の節句
// cc:チェックする項目 dd:1ならリアル日付無視
#defcfunc Seasonal_Check int __cc, int __dd, local __vvv
	// リアル日付依存フラグ
	__vvv = 0
	// もし、シーズンイベント無効化設定が2なら、全てのイベントを無効化
	if (cfg_NC_noseasonalevent == 2) {
		return 0
	}
	// 妹の日
	if (__cc == 0) {
		// リアル日付
		if (gettime(1) == 9 & gettime(3) == 6 & __dd == 0) {
			__vvv = 1
		}
		if ((__vvv == 1 & cfg_NC_noseasonalevent == 0) | (gMonth == 9 & gDay == 6)) {
			return 1
		}
		return 0
	}
	// ベイベーの日
	if (__cc == 1) {
		// リアル日付
		if (gettime(1) == 7 & gettime(3) == 24 & __dd == 0) {
			__vvv = 1
		}
		if ((__vvv == 1 & cfg_NC_noseasonalevent == 0) | (gMonth == 7 & gDay == 24)) {
			return 1
		}
		return 0
	}
	// クリスマスイブ
	if (__cc == 2) {
		// リアル日付
		if (gettime(1) == 12 & gettime(3) == 24 & __dd == 0) {
			__vvv = 1
		}
		if ((__vvv == 1 & cfg_NC_noseasonalevent == 0) | (gMonth == 12 & gDay == 24)) {
			return 1
		}
		return 0
	}
	// クリスマス
	if (__cc == 3) {
		// リアル日付
		if (gettime(1) == 12 & gettime(3) == 25 & __dd == 0) {
			__vvv = 1
		}
		if ((__vvv == 1 & cfg_NC_noseasonalevent == 0) | (gMonth == 12 & gDay == 25)) {
			return 1
		}
		return 0
	}
	// バレンタインデー
	if (__cc == 4) {
		// リアル日付
		if (gettime(1) == 2 & gettime(3) == 14 & __dd == 0) {
			__vvv = 1
		}
		if ((__vvv == 1 & cfg_NC_noseasonalevent == 0) | (gMonth == 2 & gDay == 14)) {
			return 1
		}
		return 0
	}
	// アフターバレンタインデー
	if (__cc == 5) {
		// リアル日付
		if (gettime(1) == 2 & gettime(3) == 15 & __dd == 0) {
			__vvv = 1
		}
		if ((__vvv == 1 & cfg_NC_noseasonalevent == 0) | (gMonth == 2 & gDay == 15)) {
			return 1
		}
		return 0
	}
	// 七草の節句
	if (__cc == 6) {
		// リアル日付
		if (gettime(1) == 1 & gettime(3) == 7 & __dd == 0) {
			__vvv = 1
		}
		if ((__vvv == 1 & cfg_NC_noseasonalevent == 0) | (gMonth == 1 & gDay == 7)) {
			return 1
		}
		return 0
	}
	// 桃の節句
	if (__cc == 7) {
		// リアル日付
		if (gettime(1) == 3 & (gettime(3) == 3 | gettime(3) == 4) & __dd == 0) {
			__vvv = 1
		}
		if ((__vvv == 1 & cfg_NC_noseasonalevent == 0) | (gMonth == 3 & (gDay == 3 | gDay == 4))) {
			return 1
		}
		return 0
	}
	// 納税強化
	if (__cc == 8) {
		// リアル日付
		if (gettime(1) == 3 & gettime(3) >= 9 & gettime(3) <= 15 & __dd == 0) {
			__vvv = 1
		}
		if ((__vvv == 1 & cfg_NC_noseasonalevent == 0) | (gMonth == 3 & gDay >= 9 & gDay <= 15)) {
			return 1
		}
		return 0
	}
	// 愚者の日
	if (__cc == 9) {
		// リアル日付
		if (gettime(1) == 4 & gettime(3) == 1 & __dd == 0) {
			__vvv = 1
		}
		if ((__vvv == 1 & cfg_NC_noseasonalevent == 0) | (gMonth == 4 & gDay == 1)) {
			return 1
		}
		return 0
	}
	// ドラゴンころしの日
	if (__cc == 10) {
		// リアル日付
		if (gettime(1) == 4 & gettime(3) == 23 & __dd == 0) {
			__vvv = 1
		}
		if ((__vvv == 1 & cfg_NC_noseasonalevent == 0) | (gMonth == 4 & gDay == 23)) {
			return 1
		}
		return 0
	}
	// 黄金週間
	if (__cc == 11) {
		// リアル日付
		if (((gettime(1) == 4 & gettime(3) >= 29) | (gettime(1) == 5 & gettime(3) <= 5)) & __dd == 0) {
			__vvv = 1
		}
		if ((__vvv == 1 & cfg_NC_noseasonalevent == 0) | (gMonth == 4 & gDay >= 29) | (gMonth == 5 & gDay <= 5)) {
			return 1
		}
		return 0
	}
	// 菖蒲の節句
	if (__cc == 12) {
		// リアル日付
		if (gettime(1) == 5 & gettime(3) == 5 & __dd == 0) {
			__vvv = 1
		}
		if ((__vvv == 1 & cfg_NC_noseasonalevent == 0) | gMonth == 5 & gDay == 5) {
			return 1
		}
		return 0
	}
	// 夏至祭
	if (__cc == 13) {
		// リアル日付
		if (((gettime(1) == 6 & gettime(3) == 23) | (gettime(1) == 6 & gettime(3) == 24)) & __dd == 0) {
			__vvv = 1
		}
		if ((__vvv == 1 & cfg_NC_noseasonalevent == 0) | (gMonth == 6 & (gDay == 23 | gDay == 24))) {
			return 1
		}
		return 0
	}
	// 笹の節句
	if (__cc == 14) {
		// リアル日付
		if (gettime(1) == 7 & gettime(3) == 7 & __dd == 0) {
			__vvv = 1
		}
		if ((__vvv == 1 & cfg_NC_noseasonalevent == 0) | (gMonth == 7 & gDay == 7)) {
			return 1
		}
		return 0
	}
	// 銀狼節
	if (__cc == 15) {
		// リアル日付
		if (gettime(1) == 7 & gettime(3) >= 19 & gettime(3) <= 31 & __dd == 0) {
			__vvv = 1
		}
		if ((__vvv == 1 & cfg_NC_noseasonalevent == 0) | (gMonth == 7 & (gDay >= 19 & gDay <= 31))) {
			return 1
		}
		return 0
	}
	// 納涼祭
	if (__cc == 16) {
		// リアル日付
		if (gettime(1) == 8 & gettime(3) >= 13 & gettime(3) <= 16 & __dd == 0) {
			__vvv = 1
		}
		if ((__vvv == 1 & cfg_NC_noseasonalevent == 0) | (gMonth == 8 & (gDay >= 13 & gDay <= 16))) {
			return 1
		}
		return 0
	}
	// 防衛者の日
	if (__cc == 17) {
		// リアル日付
		if (gettime(1) == 9 & gettime(3) == 12 & __dd == 0) {
			__vvv = 1
		}
		if ((__vvv == 1 & cfg_NC_noseasonalevent == 0) | (gMonth == 9 & gDay == 12)) {
			return 1
		}
		return 0
	}
	// ハロウィンイブ
	if (__cc == 18) {
		// リアル日付
		if (gettime(1) == 10 & gettime(3) == 30 & __dd == 0) {
			__vvv = 1
		}
		if ((__vvv == 1 & cfg_NC_noseasonalevent == 0) | (gMonth == 10 & gDay == 30)) {
			return 1
		}
		return 0
	}
	// ハロウィン
	if (__cc == 19) {
		// リアル日付
		if (gettime(1) == 10 & gettime(3) == 31 & __dd == 0) {
			__vvv = 1
		}
		if ((__vvv == 1 & cfg_NC_noseasonalevent == 0) | (gMonth == 10 & gDay == 31)) {
			return 1
		}
		return 0
	}
return 0

// サブクエスト発生条件
#deffunc SubquestRequirement str __cc
	txtef 3
	txt -1, lang("サブクエスト発生条件:", "Subquest Requirement:") + __cc
return

// 称号獲得チェック
// 入手する称号
#deffunc newtitle int __cc
	if (ogdata(440 + __cc) == 0) {
		ogdata(440 + __cc) = 1
		snd 44
		txtef 2
		txt -1, lang("新しい称号を獲得した！", "Earned a new title!")
	}
return

//称号チェック
//サウスティリスの全サブクエクリアで開放
#deffunc check_stquest
	// 卵屋さん
	if (ncgdata(150) == 1000) {
		// 新人のお悩み
		if (ncgdata(152) == 1000) {
			// 海路を邪魔する精霊
			if (ncgdata(153) == 1000) {
				// 厄介者との一騎打ち
				if (ncgdata(154) == 1000) {
					// ただ帰りを待つ
					if (ncgdata(155) == 1000) {
						// 危ない装甲を作り出せ
						if (ncgdata(156) == 1000) {
							// ちょっとした経費
							if (ncgdata(157) == 1000) {
								// 友のために
								if (ncgdata(158) == 1000) {
									newtitle 98
								}
							}
						}
					}
				}
			}
		}
	}
return

// サブクエスト個数
#defcfunc check_stquest_amount local __vvv
	__vvv = 0
	// 卵屋さん
	if (ncgdata(150) == 1000) {
		__vvv++
	}
	// 新人のお悩み
	if (ncgdata(152) == 1000) {
		__vvv++
	}
	// 海路を邪魔する精霊
	if (ncgdata(153) == 1000) {
		__vvv++
	}
	// 厄介者との一騎打ち
	if (ncgdata(154) == 1000) {
		__vvv++
	}
	// ただ帰りを待つ
	if (ncgdata(155) == 1000) {
		__vvv++
	}
	// 危ない装甲を作り出せ
	if (ncgdata(156) == 1000) {
		__vvv++
	}
	// ちょっとした経費
	if (ncgdata(157) == 1000) {
		__vvv++
	}
	// 友のために
	if (ncgdata(158) == 1000) {
		__vvv++
	}
return __vvv

//プラチナ加算処理
//ユニットNo, 量
#deffunc addplat int __cc, int __dd
	// クルーラ信仰時はインベントリに入る
	if (__cc == 0 & godcheck() == "krula") {
		if (inv_getfreeid(0) == (-1)) {
			txt -1, lang("バックパックが一杯だ。", "Your inventory is full.")
			cPlatinumCoin(__cc) = limitaddition(cPlatinumCoin(__cc), __dd)
			return
		}
		flt
		itemcreate 0, 55, -1, -1, __dd
		txt -1, lang(itemname(ci, 1) + "をバックパックに入れた。", "You put " + itemname(ci, 1) + " in your backpack.")
	} else {
		cPlatinumCoin(__cc) = limitaddition(cPlatinumCoin(__cc), __dd)
	}
return

//ペットのHP
#defcfunc pethealthcheck
	p@m38 = 0
	repeat 15, 1
		if (cdata(0, cnt) != 0) {
			p@m38 = 1
		}
	loop
	if (p@m38 == 0) {
		return 0
	}
	p@m38 = 1
	repeat 15, 1
		if (cdata(0, cnt) == 6) {
			p@m38 = 0
			break
		}
		if (cdata(0, cnt) == 1) {
			if (cHp(cnt) < cMaxHp(cnt) * 3 / 4) {
				p@m38 = 0
				break
			}
		}
	loop
	if (p@m38 == 0) {
		return 0
	}
return 1

// 対象石化
// 使用者,対象,パワー
#deffunc charastone int __cc, int __dd, int __ee
	nc_intb_100 = 0
	if (findbuff(__dd, 10) != (-1)) {
		if (ocdata(192 + findbuff(__dd, 10) * 3 + 1, __dd) + 50 > __ee * 5 / 2 | rnd(ocdata(192 + findbuff(__dd, 10) * 3 + 1, __dd) + 50) > rndex(__ee + 1)) {
			txt -1, lang("ホーリーヴェイルが呪いを防いだ。", "The holy veil repels the hex.")
			animeload 8, __dd
			return
		}
	}
	f@m132 = 0
	if (cQuality(__dd) >= 4) {
		if (rnd(10)) {
			f@m132 = 1
		}
	}
	if (f@m132 != 1) {
		if (findfaction(__dd, "regist", "hex")) {
			f@m132 = 1
		} else {
			if (findfaction(__dd, "regist", "stone")) {
				f@m132 = 1
			}
		}
	}
	if (f@m132 == 1) {
		if (synccheck(__dd, -1)) {
			txt -1, lang(name(__dd) + "は抵抗した。", name(__dd) + " resist" + _s(__dd) + " the hex.")
			animeload 8, __dd
			return
		}
	}
	animeload 8, __dd
	dmgcon __dd, 14, 10
	if (__cc == 0) {
		hostileaction 0, __dd
	}
return

// 短縮表示
#defcfunc short_show int __cc
	if (__cc >= 1000000) {
		return "" + (__cc / 1000000) + "M"
	} elseif (__cc >= 1000) {
		return "" + (__cc / 1000) + "K"
	}
return "" + __cc

// 演奏のチェック
#defcfunc performance_check
	if (ogdata(464) == 2) {
		if (cc == 0) {
			return 0
		}
		if (cc < 16 & tc < 16) {
			return 0
		}
	} else {
		if (cc < 16 & tc < 16) {
			return 0
		}
	}
return 1

// 素材変化比較表示
#deffunc transformsstat
	pagesize = 0
	s = lang("変化前", "Before"), ""
	display_window (windoww - 750) / 2 + inf_screenx, winposy(550), 375, 200
	font lang(cfg_font1, cfg_font2), 14 - en * 2, 0
	color 0, 0, 0
	wy -= 32
	pos wx + 38, wy + 66 + cnt * 19 - 2
	mes lang("素材: ", "素材: ") + mtname(0, nc_intb_107)
	wy += 16
	if (refitem(iId(ci), 5, ci) <= 34000) {
		if (nc_intb_105 != 0) {
			pos wx + 38, wy + 66 + cnt * 19 - 2
			mes lang("ダメージ: ", "Damage: ") + nc_intb_105 + "d" + nc_intb_106 + cnvfix(nc_intb_103) + "(" + (nc_intb_105 + nc_intb_103) + "-" + (nc_intb_105 * nc_intb_106 + nc_intb_103) + ")"
			wy += 16
		}
		pos wx + 38, wy + 66 + cnt * 19 - 2
		mes "Pv: " + nc_intb_101
		wy += 16
		pos wx + 38, wy + 66 + cnt * 19 - 2
		mes "Dv: " + nc_intb_102
		wy += 16
		pos wx + 38, wy + 66 + cnt * 19 - 2
		mes lang("ダメージ修正: ", "DamageBonus: ") + nc_intb_103
		wy += 16
		pos wx + 38, wy + 66 + cnt * 19 - 2
		mes lang("命中修正: ", "HitBonus: ") + nc_intb_104
		wy += 16
	}
	pos wx + 38, wy + 66 + cnt * 19 - 2
	mes lang("価値: ", "Value: ") + nc_intb_108
	s = lang("変化後", "After")
	display_window (windoww - 25) / 2 + inf_screenx, winposy(550), 375, 200
	font lang(cfg_font1, cfg_font2), 14 - en * 2, 0
	color 0, 0, 0
	wy -= 32
	pos wx + 38, wy + 66 + cnt * 19 - 2
	mes lang("素材: ", "素材: ") + mtname(0, iMaterial(ci))
	wy += 16
	if (refitem(iId(ci), 5, ci) <= 34000) {
		if (nc_intb_105 != 0) {
			pos wx + 38, wy + 66 + cnt * 19 - 2
			mes lang("ダメージ: ", "Damage: ") + iDiceX(ci) + "d" + iDiceY(ci) + cnvfix(iDamageBonus(ci)) + "(" + (iDiceX(ci) + iDamageBonus(ci)) + "-" + (iDiceX(ci) * iDiceY(ci) + iDamageBonus(ci)) + ")"
			wy += 16
		}
		pos wx + 38, wy + 66 + cnt * 19 - 2
		mes "Pv: " + iPv(ci) + "(" + cnvfix(iPv(ci) - nc_intb_101) + ")"
		wy += 16
		pos wx + 38, wy + 66 + cnt * 19 - 2
		mes "Dv: " + iDv(ci) + "(" + cnvfix(iDv(ci) - nc_intb_102) + ")"
		wy += 16
		pos wx + 38, wy + 66 + cnt * 19 - 2
		mes lang("ダメージ修正: ", "DamageBonus: ") + iDamageBonus(ci) + "(" + cnvfix(iDamageBonus(ci) - nc_intb_103) + ")"
		wy += 16
		pos wx + 38, wy + 66 + cnt * 19 - 2
		mes lang("命中修正: ", "HitBonus: ") + iHitBonus(ci) + "(" + cnvfix(iHitBonus(ci) - nc_intb_104) + ")"
		wy += 16
	}
	pos wx + 38, wy + 66 + cnt * 19 - 2
	mes lang("価値: ", "Value: ") + iValue(ci) + "(" + cnvfix(iValue(ci) - nc_intb_108) + ")"
return

// 部位の選択
#deffunc bodycheck int __cc
	cs = 0
	cs_bk = -1
	pagemax = 0
	page = 0
	list(0, 0) = -1
	*label_N210
		redraw 0
		if (cs != cs_bk | p == (-2)) {
			keyrange = 0
			s = lang("求める部位の選択", "Select want part"), strhint3b
			display_window (windoww - 400) / 2 + inf_screenx, winposy(458, 1) + 20, 400, 358
			x = ww / 3 * 2
			y = wh - 80
			gmode 2
			display_topic lang("部位の候補", "Parts"), wx + 28, wy + 30
			font lang(cfg_font1, cfg_font2), 14 - en * 2, 0
			color 0, 0, 0
			repeat 9
				key_list(cnt) = key_select(cnt)
				list(0, keyrange) = cnt
				listn(0, keyrange) = bodyn(cnt + 1)
				pos wx + 38, wy + 66 + keyrange * 19 - 2
				gcopy 3, keyrange * 24 + 72, 30, 24, 18
				cs_list listn(0, keyrange), wx + 64, wy + 66 + keyrange * 19 - 1, 19
				keyrange += 1
			loop
		}
		redraw 1
		await cfg_wait1
		key_check
		cursor_check
		repeat keyrange
			if (key == key_select(cnt)) {
					p = cnt
					break
			} else {
					p = -1
			}
		loop
		if (p != (-1)) {
			return p
		}
		if (key == key_cancel) {
			return -1
		}
	goto *label_N210
return -1

// ダメージ表示コンフィグチェック
#defcfunc showdamagecheck int __cc
	if (cfg_dmgmonitor0 == 0) {
		return 0
	}
	if (cfg_NC_notshowzero == 1) {
		if (__cc == 0) {
			return 0
		}
	}
return 1

// トロフィー
#defcfunc trophycheck int __cc
	if (gettrait(0, 194) < 0) {
		return 0
	}
return trophy(__cc)

// 努力の証明
#defcfunc effortcnt
	f = 0
	repeat 10
		if (ogdata(520 + cnt) == 2) {
			f++
		}
	loop
return f

// 石化治癒
#deffunc recoverstorn int __cc
	healcon __cc, 14, 99999
return

// 石化状態か
#defcfunc isstorned int __cc
if (cStoned(__cc) > 0) {
	return 1
}
return 0

#deffunc boxfa int ax, int ay, int bx, int by
	pdx = ax, bx+ax, bx+ax, ax
	pdy = ay, ay, by+ay, by+ay
	gsquare -1, pdx, pdy
	return

#defcfunc checkyarikomi int __cc
	flg = 0
	repeat 8
		if (cfg_NC_charasheetdata(cnt) == __cc) {
			flg = 1
			break
		}
	loop
	if (flg == 1) {
		return 1
	}
return 0

// CAIの消去
#deffunc resetcai int __cc
	repeat 10
		cnt2 = cnt
		repeat 45
			nc_ai(__cc, cnt2, cnt) = 0
		loop
	loop
	return

// バフを持っているか
#defcfunc check_buff int __cc, int __dd
	if (__dd == 442 & findbuff(__cc, 1) == -1) {
		return 1
	}
	if (__dd == 444 & findbuff(__cc, 3) == -1) {
		return 1
	}
	if (__dd == 445 & findbuff(__cc, 4) == -1) {
		return 1
	}
	if (__dd == 446 & findbuff(__cc, 5) == -1) {
		return 1
	}
	if (__dd == 448 & findbuff(__cc, 7) == -1) {
		return 1
	}
	if (__dd == 451 & findbuff(__cc, 10) == -1) {
		return 1
	}
	if (__dd == 453 & findbuff(__cc, 12) == -1) {
		return 1
	}
	if (__dd == 625 & findbuff(__cc, 14) == -1) {
		return 1
	}
	if (__dd == 458 & findbuff(__cc, 15) == -1) {
		return 1
	}
	if (__dd == 647 & findbuff(__cc, 17) == -1) {
		return 1
	}
	if (__dd == 462 & findbuff(__cc, 18) == -1) {
		return 1
	}
	if (__dd == 775 & findbuff(__cc, 95) == -1) {
		return 1
	}
	if (__dd == 776 & findbuff(__cc, 96) == -1) {
		return 1
	}
	if (__dd == 778 & findbuff(__cc, 97) == -1) {
		return 1
	}
	if (__dd == 901 & findbuff(__cc, 60) == -1) {
		return 1
	}
	if (__dd == 902 & findbuff(__cc, 61) == -1) {
		return 1
	}
	if (__dd == 794 & findbuff(__cc, buffId_weakShield) == -1) {
		return 1
	}
	if (__dd == 501 & findbuff(__cc, 69) == -1) {
		return 1
	}
	return 0

// デバフを持っているか
#defcfunc check_debuff int __cc, int __dd
	if (__dd == 443 & findbuff(__cc, 2) == -1) {
		return 1
	}
	if (__dd == 447 & findbuff(__cc, 6) == -1) {
		return 1
	}
	if (__dd == 449 & findbuff(__cc, 8) == -1) {
		return 1
	}
	if (__dd == 450 & findbuff(__cc, 9) == -1) {
		return 1
	}
	if (__dd == 452 & findbuff(__cc, 11) == -1) {
		return 1
	}
	if (__dd == 646 & findbuff(__cc, 16) == -1) {
		return 1
	}
	if (__dd == 502 & findbuff(__cc, 68) == -1) {
		return 1
	}
	if (__dd == 509 & findbuff(__cc, 70) == -1) {
		return 1
	}
	return 0

// ビッグエンチャント付与
#deffunc add_bigench int __cc
	if (__cc == 2) {
		repeat
			inv(37, ci) = rnd(8) + 11
			if ((inv(37, ci) == 2 | inv(37, ci) == 4 | inv(37, ci) == 9 | inv(37, ci) == 10 | inv(37, ci) == 13) & iDiceX(ci) == 0) {
				continue
			}
			if (inv(37, ci) == 1 & iDiceX(ci) != 0) {
				continue
			}
			if (inv(37, ci) == 12) {
				continue
			}
			break
		loop
		if(inv(37, ci) == 0) {
			repeat
				nc_buf = rnd(301) + 1
				if (nc_buf == 1 | (nc_buf >= 4 & nc_buf <= 9) | (nc_buf >= 20 & nc_buf <= 99) | (nc_buf >= 112 & nc_buf <= 149) | (nc_buf >= 190 & nc_buf <= 299)) {
					continue
				}
				break
			loop
			inv(37, ci) = 10000 + nc_buf
			inv(38, ci) = rnd((gCurrentDungeonLevel - 50) / 200 + 3) + 1
		} else {
			if(inv(37, ci) == 2) {
				inv(38, ci) = rnd(20) + 1 + rnd((gCurrentDungeonLevel - 50) / 100 + 1)
			}
			if(inv(37, ci) == 4 | inv(37, ci) == 7) {
				inv(38, ci) = rnd(5) + 1 + rnd((gCurrentDungeonLevel - 50) / 100 + 1)
			}
			if(inv(37, ci) == 5) {
				inv(38, ci) = rnd(4) + 1 + rnd((gCurrentDungeonLevel - 50) / 100 + 1)
			}
			if(inv(37, ci) == 8) {
				inv(38, ci) = rnd(10) + 1 + rnd((gCurrentDungeonLevel - 50) / 100 + 1)
			}
			if(inv(37, ci) == 9 | inv(37, ci) == 10) {
				inv(38, ci) = rnd(3) + 1 + rnd((gCurrentDungeonLevel - 50) / 100 + 1)
			}
			if(inv(37, ci) == 15) {
				inv(38, ci) = rnd(5) + 1 + rnd((gCurrentDungeonLevel - 50) / 100 + 1)
			}
			if(inv(37, ci) == 16) {
				inv(38, ci) = rnd(3) + 1 + rnd((gCurrentDungeonLevel - 50) / 100 + 1)
			}
			if(inv(37, ci) == 17) {
				inv(38, ci) = rnd(3) + 1 + rnd((gCurrentDungeonLevel - 50) / 200 + 1)
			}
			if(inv(37, ci) == 18) {
				ibitmod 6, ci, 1
			}
		}
	} elseif (__cc == 1) {
		repeat
			inv(37, ci) = rnd(19)
			if ((inv(37, ci) == 2 | inv(37, ci) == 4 | inv(37, ci) == 9 | inv(37, ci) == 10 | inv(37, ci) == 13) & iDiceX(ci) == 0) {
				continue
			}
			if (inv(37, ci) == 1 & iDiceX(ci) != 0) {
				continue
			}
			if (inv(37, ci) == 12) {
				continue
			}
			break
		loop
		if(inv(37, ci) == 0) {
			repeat
				nc_buf = rnd(301) + 1
				if (nc_buf == 1 | (nc_buf >= 4 & nc_buf <= 9) | (nc_buf >= 20 & nc_buf <= 99) | (nc_buf >= 112 & nc_buf <= 149) | (nc_buf >= 190 & nc_buf <= 299)) {
					continue
				}
				break
			loop
			inv(37, ci) = 10000 + nc_buf
			inv(38, ci) = rnd((gCurrentDungeonLevel - 50) / 200 + 3) + 1
		} else {
			if(inv(37, ci) == 2) {
				inv(38, ci) = rnd(20) + 1 + rnd((gCurrentDungeonLevel - 50) / 100 + 1)
			}
			if(inv(37, ci) == 4 | inv(37, ci) == 7) {
				inv(38, ci) = rnd(5) + 1 + rnd((gCurrentDungeonLevel - 50) / 100 + 1)
			}
			if(inv(37, ci) == 5) {
				inv(38, ci) = rnd(4) + 1 + rnd((gCurrentDungeonLevel - 50) / 100 + 1)
			}
			if(inv(37, ci) == 8) {
				inv(38, ci) = rnd(10) + 1 + rnd((gCurrentDungeonLevel - 50) / 100 + 1)
			}
			if(inv(37, ci) == 9 | inv(37, ci) == 10) {
				inv(38, ci) = rnd(3) + 1 + rnd((gCurrentDungeonLevel - 50) / 100 + 1)
			}
			if(inv(37, ci) == 15) {
				inv(38, ci) = rnd(5) + 1 + rnd((gCurrentDungeonLevel - 50) / 100 + 1)
			}
			if(inv(37, ci) == 16) {
				inv(38, ci) = rnd(3) + 1 + rnd((gCurrentDungeonLevel - 50) / 100 + 1)
			}
			if(inv(37, ci) == 17) {
				inv(38, ci) = rnd(3) + 1 + rnd((gCurrentDungeonLevel - 50) / 200 + 1)
			}
			if(inv(37, ci) == 18) {
				ibitmod 6, ci, 1
			}
		}
	} else {
		// ルージィ
		repeat
			inv(37, ci) = rnd(11)
			if ((inv(37, ci) == 2 | inv(37, ci) == 4 | inv(37, ci) == 9 | inv(37, ci) == 10) & iDiceX(ci) == 0) {
				continue
			}
			if (inv(37, ci) == 1 & iDiceX(ci) != 0) {
				continue
			}
			break
		loop
		if(inv(37, ci) == 0) {
			repeat
				nc_buf = rnd(301) + 1
				if (nc_buf == 1 | (nc_buf >= 4 & nc_buf <= 9) | (nc_buf >= 20 & nc_buf <= 99) | (nc_buf >= 112 & nc_buf <= 149) | (nc_buf >= 190 & nc_buf <= 299)) {
					continue
				}
				break
			loop
			inv(37, ci) = 10000 + nc_buf
			inv(38, ci) = rnd(3) + 1
		} else {
			if(inv(37, ci) == 2) {
				inv(38, ci) = rnd(20) + 1
			}
			if(inv(37, ci) == 4 | inv(37, ci) == 7) {
				inv(38, ci) = rnd(5) + 1
			}
			if(inv(37, ci) == 5) {
				inv(38, ci) = rnd(4) + 1
			}
			if(inv(37, ci) == 8) {
				inv(38, ci) = rnd(10) + 1
			}
			if(inv(37, ci) == 9 | inv(37, ci) == 10) {
				inv(38, ci) = rnd(3) + 1
			}
		}
	}
return

// 状態異常を持っているか
#defcfunc check_abnormal int __cc
	if (cPoisoned(__cc) | cSleep(__cc) | cParalyzed(__cc) | cBlind(__cc) | cConfused(__cc) | cFear(__cc) | cDimmed(__cc) | cDrunk(__cc) | cBleeding(__cc) | cInsane(__cc)　| cStoned(__cc)) {
		return 1
	}
	return 0

// ビッグエンチャントの所持確認
#defcfunc check_bigench int __cc
	if (inv(37, __cc) != 0) {
			return inv(37, __cc)
	}
	return 0

#defcfunc have_bigench int __cc, int __dd
	nc_intb_001 = 0
	nc_intb_002 = 0
	nc_intb_003 = 0
	repeat 30, 100
		nc_intb_003 = cdata(cnt, __cc)
		if (nc_intb_003 \ 10000 == 0) {
			continue
		}
		nc_intb_001 = nc_intb_003 \ 10000 - 1
		if (inv(37, nc_intb_001) == __dd) {
			nc_intb_002 = 1
			break
		}
	loop
	return nc_intb_002

// 強度式のビッグエンチャントの所持
#defcfunc have_bigench2 int __cc, int __dd
	nc_intb_001 = 0
	nc_intb_002 = 0
	nc_intb_003 = 0
	repeat 30, 100
		nc_intb_004 = cdata(cnt, __cc)
		if (nc_intb_004 \ 10000 == 0) {
			continue
		}
		nc_intb_001 = nc_intb_004 \ 10000 - 1
		if (inv(37, nc_intb_001) == __dd) {
			nc_intb_002 += iBigenchantmentPower(nc_intb_001)
		}
	loop
	return nc_intb_002

#defcfunc have_skillbigench int __cc
	nc_intb_001 = 0
	nc_intb_002 = 0
	repeat 30, 100
		nc_intb_003 = cdata(cnt, __cc)
		if (nc_intb_003 \ 10000 == 0) {
			continue
		}
		nc_intb_002 = nc_intb_003 \ 10000 - 1
		if (inv(37, nc_intb_002) >= 10000) {
			nc_intb_001 = 1
			break
		}
	loop
	if (nc_intb_001 == 1) {
		return 1
	}
	return 0

 #defcfunc subactget int __cc
	 if (__cc == 0) {
		 return lang("何もしない", "nothing")
	 }
	 if (__cc < 0) {
		 if (__cc == -1) {
			 return lang("近接攻撃", "melee attack")
		 }
		 if (__cc == -2) {
			 return lang("遠隔攻撃", "range attack")
		 }
		 if (__cc == -3) {
			 return lang("接近待ち", "waiting")
		 }
		 if (__cc == -4) {
			 return lang("ランダム移動", "random move")
		 }
		 if (__cc == -9994) {
			 return lang("媚薬投擲", "aphrodisiac throwing")
		 }
		 if (__cc == -9995) {
			 return lang("トマト投擲", "tomato throwing")
		 }
		 if (__cc == -9996) {
			 return lang("塩投擲", "salt throwing")
		 }
		 if (__cc == -9997) {
			 return lang("ポーション投擲 No.1", "potion throw no.1")
		 }
		 if (__cc == -9998) {
			 return lang("ポーション投擲 No.2", "potion throw no.2")
		 }
		 if (__cc == -9999) {
			 return lang("ポーション投擲 No.3", "potion throw no.3")
		 }
	 } else {
		 return skillname(__cc)
	 }
 return "何もしない"

 *label_N100
	 if (jp) {
		 ainame(0) = "ターゲットの距離が適正距離より遠いなら", "ターゲットの距離が適正距離より近いなら", "ターゲットの距離が適正距離なら", "ターゲットと隣接していないなら", "ターゲットと隣接しているなら"
		 ainame(5) = "プレイヤーのＨＰが回復ライン以下なら", "プレイヤーのＨＰが回復ラインより多いなら", "自分がこの技のバフに掛かっていないなら", "ターゲットがこの技のデバフに掛かっていないなら", "自分が状態異常なら"
		 ainame(10) = "ターゲットが状態異常ではないなら", "魔法を唱えられるなら", "プレイヤーの距離が適正距離より遠いなら", "プレイヤーの距離が適正距離より近いなら", "プレイヤーの距離が適正距離なら"
		 ainame(15) = "周囲の味方のＨＰが回復ライン以下なら", "周囲の味方のＨＰが回復ラインより多いなら", "周囲の味方が状態異常の時なら", "自分のＨＰが回復ライン以下なら", "自分のＨＰが回復ラインより多いなら"
		 ainame(20) = "自分のＭＰが25％以下なら", "自分のＭＰが26％以上なら", "ターゲットのＨＰが80%以上なら", "ターゲットのＨＰが10%以下なら", "スウォーム範囲に複数敵がいるなら"
		 ainame(25) = "ターゲットが自爆生物なら", "ターゲットがカウンターを持っているなら", "ターゲットが変異種でないなら", "50%の確率で", "25%の確率で"
		 ainame(30) = "この技の属性が無効化されないなら", "この技の属性が大きく軽減されないなら", "===============", "===============", "==============="
		 ainame(35) = "===============", "===============", "===============", "===============", "==============="
		 ainame(40) = "===============", "===============", "優先的に判定を行う", "他の設定に関わらず絶対に実行する", "他の設定に関わらず絶対に実行しない"
	 } else {
		 ainame(0) = "If the target distance is farther than the proper distance", "If the target distance is closer than the proper distance", "If the target distance is the right distance", "If this is not adjacent to the target", "If this is adjacent to the target"
		 ainame(5) = "If the PC HP is below the recovery line", "If the PC has more HP than the recovery line", "If this character is not buffed by this skill", "If the target is not affected by the debuff of this skill", "If this is in an abnormal state"
		 ainame(10) = "If the target isn't in a state", "If this is can cast a spell", "If PC is farther away than the proper distance", "If PC distance is closer than the proper distance", "If PC distance is the right distance"
		 ainame(15) = "If the HP of surrounding allies is below the recovery line", "If the surrounding allies have more HP than the recovery line", "If the surrounding allies are in an abnormal state", "If this HP is below the recovery line", "If this HP is above the recovery line"
		 ainame(20) = "If this MP is below 25%", "If this MP is above 26%", "If the target's HP is above 80%", "If the target's HP is below 10%", "If there are multiple enemies in the Swarm range"
		 ainame(25) = "If the target is a self-destructing organism", "If the target has a counter", "If the target isn't a {}", "50%", "25%"
		 ainame(30) = "If the attribute of this Skill is not invalidated", "If the attributes of this skill are not greatly reduced", "===============", "===============", "==============="
		 ainame(35) = "===============", "===============", "===============", "===============", "==============="
		 ainame(40) = "===============", "===============", "Prioritize decisions", "Run absolutely regardless of other settings", "Never run it, regardless of other settings"
	 }

	 listmax = 0
	 page = 0
	 pagesize = 15
	 cs = 0
	 cs_bk = -1
	 page_load
	 curmenu = 2
	 ww = 800
	 wh = 400
	 wx = (windoww - ww) / 2 + inf_screenx
	 wy = winposy(wh)
	 windowanime wx, wy, ww, wh, 10, 4
	 redraw 0
	 gsel 3
	 pos 960, 96
	 picload_ exedir + "graphic\\deco_feat.bmp", 1
	 gsel 0
	 windowshadow = 1
	 *label_N101
	 listmax = 0
	 repeat length(ainame) * (int(cAiActNum(tc) / 10) + 5)
		 if (cnt < (45 * (int(cAiActNum(tc) / 10) + 5))) {
			 list(0, listmax) = cnt, cnt + 1
			 listmax++
		 }
	 loop
	 gosub *label_1276
	 repeat listmax
		 s = ainame(cnt \ (aipage * 15))
		 pos wx + 30, wy + 61 + cnt * 19
		 x = 84
		 listn(0, cnt) = s
	 loop
	 redraw 0
	 cs_bk = -1
	 pagemax = (listmax - 1) / pagesize
	 if (page < 0) {
		 page = pagemax
	 } else {
		 if (page > pagemax) {
			 page = 0
		 }
	 }
	 *label_N102
	 redraw 0
	 rc_subact = cdata(215 + int(page / aipage), tc)
	 s = lang("行動", "Act") + (int(page / aipage) + 1) + ":" + subactget(rc_subact)
	 s(1) = lang("判別したい条件を有効化してください " + key_target + "でORモードで選択します " + key_msglog + "で必須モードで選択します", "Activate the condition you want to judge. " + key_target + " Select in OR mode. " + key_msglog + " Select in Required mode.")
	 i = 0
	 display_window (windoww - 730) / 2 + inf_screenx, winposy(430, i) + i * 15, 730, 430, 55, 40
	 if (jp) {
		 s = "条件"
	 } else {
		 s = "condition"
	 }
	 display_topic s, wx + 46, wy + 36
	 keyrange = 0
	 repeat pagesize
		 p = pagesize * page + cnt
		 if (p >= listmax) {
			 break
		 }
		 key_list(cnt) = key_select(cnt)
		 keyrange++
		 if (cnt \ 2 == 0) {
			 pos wx + 57, wy + 66 + cnt * 19
			 gfini 640, 18
			 gfdec2 12, 14, 16
		 }
		 display_key wx + 58, wy + 66 + cnt * 19 - 2, cnt
	 loop
	 font lang(cfg_font1, cfg_font2), 14 - en * 2, 0
	 cs_listbk
	 repeat pagesize
		 p = pagesize * page + cnt
		 p2 = (page / aipage)
		 p3 = (p \ (aipage * 15))
		 if (p >= listmax) {
			 break
		 }
		 if (nc_ai(tc, p2, p3) != 0) {
			 if (nc_ai(tc, p2, p3) == 3) {
				 cs_list "/" + listn(0, p), wx + x, wy + 66 + cnt * 19 - 1, 19, 0, 6, 0
			 }
			 if (nc_ai(tc, p2, p3) == 2) {
				 cs_list "*" + listn(0, p), wx + x, wy + 66 + cnt * 19 - 1, 19, 0, 6, 0
			 }
			 if (nc_ai(tc, p2, p3) == 1){
				 cs_list listn(0, p), wx + x, wy + 66 + cnt * 19 - 1, 19, 0, 6, 0
			 }
		 } else {
			 cs_list listn(0, p), wx + x, wy + 66 + cnt * 19 - 1, 19, 0, 5, 0
		 }
	 loop
	 if (keyrange != 0) {
		 cs_bk = cs
	 }
	 redraw 1
	 await cfg_wait1
	 key_check
	 cursor_check
	 p = -1
	 repeat keyrange
		 if (key == key_select(cnt)) {
			 p = pagesize * page + cnt
			 p2 = (page / aipage)
			 p3 = (p \ (aipage * 15))
			 sf = 0
			 break
		 }
		 if (key == key_target) {
			 p = pagesize * page + cs_bk
			 p2 = (page / aipage)
			 p3 = (p \ (aipage * 15))
			 sf = 1
			 break
		 }
		 if (key == key_msglog) {
			 p = pagesize * page + cs_bk
			 p2 = (page / aipage)
			 p3 = (p \ (aipage * 15))
			 sf = 3
			 break
		 }
	 loop
	 if (p >= 0) {
			 snd 19
			 if (nc_ai(tc, p2, p3) == 1 | nc_ai(tc, p2, p3) == 2 | nc_ai(tc, p2, p3) == 3) {
				 nc_ai(tc, p2, p3) = 0
			 } else {
				 if (sf == 0) {
					 nc_ai(tc, p2, p3) = 1
				 } elseif (sf == 1) {
					 nc_ai(tc, p2, p3) = 2
				 } else {
					 nc_ai(tc, p2, p3) = 3
				 }
			 }
			 goto *label_N101
	 }
	 if (key == key_pageup) {
		 if (pagemax != 0) {
			 snd 1
			 page++
			 goto *label_N101
		 }
	 }
	 if (key == key_pagedown) {
		 if (pagemax != 0) {
			 snd 1
			 page--
			 goto *label_N101
		 }
	 }
	 if (key == key_cancel) {
		 if (cAiActSubFreq(tc) != 101) {
			 txt -1, lang("今すぐカスタムAIを使う？", "Use custom AI now?")
			 promptl(0, 0) = stryes, "y", "0"
			 promptl(0, 1) = strno, "n", "1"
			 promptmax = 2
			 val = promptx, prompty, 240, 1
			 gosub *label_1353
			 if (rtval == 0) {
				 cAiActSubFreq(tc) = 101
				 ocbitmod 0, tc, 1
			 }
		 }
		 gosub *label_0623
		 goto *label_1623
	 }
	 goto *label_N102

 // 特殊行動設定AI
 *label_N120
	 // 優先判定
	 prif = 0
	 repeat int(cAiActNum(cc) / 10) + 5
		 if (nc_ai(cc, cnt, 42) != 0) {
				 andf = 1
				 orf = 0
				 cai_distance(0) = dist(cX(tc), cY(tc), cX(cc), cY(cc)), dist(cX(0), cY(0), cX(cc), cY(cc))
				 if (nc_ai(cc, cnt, 44) != 0) {
						 continue
				 }
				 if (nc_ai(cc, cnt, 43) != 0) {
					 	 act = cdata(215 + cnt, cc)
						 prif = 1
						 break
				 }
				 if (nc_ai(cc, cnt, 0) != 0) {
					 if (cai_distance(0) > cAiDist(cc)) {
						 if (nc_ai(cc, cnt, 0) == 2) {
							 orf = 1
						 }
					 } elseif (nc_ai(cc, cnt, 0) == 1 | nc_ai(cc, cnt, 0) == 2) {
						 andf = 0
					 } elseif (nc_ai(cc, cnt, 0) == 3) {
						 continue
					 }
				 }
				 if (nc_ai(cc, cnt, 1) != 0) {
					 if (cai_distance(0) < cAiDist(cc)) {
						 if (nc_ai(cc, cnt, 1) == 2) {
							 orf = 1
						 }
					 } elseif (nc_ai(cc, cnt, 1) == 1 | nc_ai(cc, cnt, 1) == 2) {
						 andf = 0
					 } elseif (nc_ai(cc, cnt, 1) == 3) {
						 continue
					 }
				 }
				 if (nc_ai(cc, cnt, 2) != 0) {
					 if (cai_distance(0) == cAiDist(cc)) {
						 if (nc_ai(cc, cnt, 2) == 2) {
							 orf = 1
						 }
					 } elseif (nc_ai(cc, cnt, 2) == 1 | nc_ai(cc, cnt, 2) == 2) {
						 andf = 0
					 } elseif (nc_ai(cc, cnt, 2) == 3) {
						 continue
					 }
				 }
				 if (nc_ai(cc, cnt, 3) != 0) {
					 if (cai_distance(0) != 1) {
						 if (nc_ai(cc, cnt, 3) == 2) {
							 orf = 1
						 }
					 } elseif (nc_ai(cc, cnt, 3) == 1 | nc_ai(cc, cnt, 3) == 2) {
						 andf = 0
					 } elseif (nc_ai(cc, cnt, 3) == 3) {
						 continue
					 }
				 }
				 if (nc_ai(cc, cnt, 4) != 0) {
					 if (cai_distance(0) == 1) {
						 if (nc_ai(cc, cnt, 4) == 2) {
							 orf = 1
						 }
					 } elseif (nc_ai(cc, cnt, 4) == 1 | nc_ai(cc, cnt, 4) == 2) {
						 andf = 0
					 } elseif (nc_ai(cc, cnt, 4) == 3) {
						 continue
					 }
				 }
				 if (nc_ai(cc, cnt, 5) != 0) {
					 if (cHp(0) <= cMaxHp(0) / (4 - (ocdata(1, cc) == 1) * 2)) {
						 if (nc_ai(cc, cnt, 5) == 2) {
							 orf = 1
						 }
					 } elseif (nc_ai(cc, cnt, 5) == 1 | nc_ai(cc, cnt, 5) == 2) {
						 andf = 0
					 } elseif (nc_ai(cc, cnt, 5) == 3) {
						 continue
					 }
				 }
				 if (nc_ai(cc, cnt, 6) != 0) {
					 if (cHp(0) > cMaxHp(0) / (4 - (ocdata(1, cc) == 1) * 2)) {
						 if (nc_ai(cc, cnt, 6) == 2) {
							 orf = 1
						 }
					 } elseif (nc_ai(cc, cnt, 6) == 1 | nc_ai(cc, cnt, 6) == 2) {
						 andf = 0
					 } elseif (nc_ai(cc, cnt, 6) == 3) {
						 continue
					 }
				 }
				 if (nc_ai(cc, cnt, 7) != 0) {
					 if (check_buff(cc, cdata(215 + cnt, cc))) {
						 if (nc_ai(cc, cnt, 7) == 2) {
							 orf = 1
						 }
					 } elseif (nc_ai(cc, cnt, 7) == 1 | nc_ai(cc, cnt, 7) == 2) {
						 andf = 0
					 } elseif (nc_ai(cc, cnt, 7) == 3) {
						 continue
					 }
				 }
				 if (nc_ai(cc, cnt, 8) != 0) {
					 if (check_debuff(tc, cdata(215 + cnt, cc)) != 0) {
						 if (nc_ai(cc, cnt, 8) == 2) {
							 orf = 1
						 }
					 } elseif (nc_ai(cc, cnt, 8) == 1 | nc_ai(cc, cnt, 8) == 2) {
						 andf = 0
					 } elseif (nc_ai(cc, cnt, 8) == 3) {
						 continue
					 }
				 }
				 if (nc_ai(cc, cnt, 9) != 0) {
					 if (check_abnormal(cc) == 1) {
						 if (nc_ai(cc, cnt, 9) == 2) {
							 orf = 1
						 }
					 } elseif (nc_ai(cc, cnt, 9) == 1 | nc_ai(cc, cnt, 9) == 2) {
						 andf = 0
					 } elseif (nc_ai(cc, cnt, 9) == 3) {
						 continue
					 }
				 }
				 if (nc_ai(cc, cnt, 10) != 0) {
					 if (check_abnormal(tc) == 0) {
						 if (nc_ai(cc, cnt, 10) == 2) {
							 orf = 1
						 }
					 } elseif (nc_ai(cc, cnt, 10) == 1 | nc_ai(cc, cnt, 10) == 2) {
						 andf = 0
					 } elseif (nc_ai(cc, cnt, 10) == 3) {
						 continue
					 }
				 }
				 if (nc_ai(cc, cnt, 11) != 0) {
					 if (cConfused(cc) == 0 & cDimmed(cc) == 0 & findbuff(cc, 2) == (-1) & findbuff(cc, 93) == (-1) & oabit(0, gCurrentMap) == 0) {
						 if (nc_ai(cc, cnt, 11) == 2) {
							 orf = 1
						 }
					 } elseif (nc_ai(cc, cnt, 11) == 1 | nc_ai(cc, cnt, 11) == 2) {
						 andf = 0
					 } elseif (nc_ai(cc, cnt, 11) == 3) {
						 continue
					 }
				 }
				 if (nc_ai(cc, cnt, 12) != 0) {
					 if (cai_distance(1) < cAiDist(cc)) {
						 if (nc_ai(cc, cnt, 12) == 2) {
							 orf = 1
						 }
					 } elseif (nc_ai(cc, cnt, 12) == 1 | nc_ai(cc, cnt, 12) == 2) {
						 andf = 0
					 } elseif (nc_ai(cc, cnt, 12) == 3) {
						 continue
					 }
				 }
				 if (nc_ai(cc, cnt, 13) != 0) {
					 if (cai_distance(1) > cAiDist(cc)) {
						 if (nc_ai(cc, cnt, 13) == 2) {
							 orf = 1
						 }
					 } elseif (nc_ai(cc, cnt, 13) == 1 | nc_ai(cc, cnt, 13) == 2) {
						 andf = 0
					 } elseif (nc_ai(cc, cnt, 13) == 3) {
						 continue
					 }
				 }
				 if (nc_ai(cc, cnt, 14) != 0) {
					 if (cai_distance(1) == cAiDist(cc)) {
						 if (nc_ai(cc, cnt, 14) == 2) {
							 orf = 1
						 }
					 } elseif (nc_ai(cc, cnt, 14) == 1 | nc_ai(cc, cnt, 14) == 2) {
						 andf = 0
					 } elseif (nc_ai(cc, cnt, 14) == 3) {
						 continue
					 }
				 }
				 if (nc_ai(cc, cnt, 15) != 0) {
					 naf = 0
					 repeat 16
						 if (dist(cX(cnt), cY(cnt), cX(cc), cY(cc)) <= 3 & fov_los(cX(cc), cY(cc), cX(cnt), cY(cnt)) == 1 & cState(cnt) == 1 & cnt != cc) {
							 if (cHp(cnt) <= cMaxHp(cnt) / (4 - (ocdata(1, cc) == 1) * 2)) {
								 naf = 1
								 break
							 }
						 }
					 loop
					 if (naf == 1) {
						 if (nc_ai(cc, cnt, 15) == 2) {
							 orf = 1
						 }
					 } elseif (nc_ai(cc, cnt, 15) == 1 | nc_ai(cc, cnt, 15) == 2) {
						 andf = 0
					 } elseif (nc_ai(cc, cnt, 15) == 3) {
						 continue
					 }
				 }
				 if (nc_ai(cc, cnt, 16) != 0) {
					 naf = 0
					 repeat 16
						 if (dist(cX(cnt), cY(cnt), cX(cc), cY(cc)) <= 3 & fov_los(cX(cc), cY(cc), cX(cnt), cY(cnt)) == 1 & cState(cnt) == 1 & cnt != cc) {
							 if (cHp(cnt) > cMaxHp(cnt) / (4 - (ocdata(1, cc) == 1) * 2)) {
								 naf = 1
								 break
							 }
						 }
					 loop
					 if (naf == 1) {
						 if (nc_ai(cc, cnt, 16) == 2) {
							 orf = 1
						 }
					 } elseif (nc_ai(cc, cnt, 16) == 1 | nc_ai(cc, cnt, 16) == 2) {
						 andf = 0
					 } elseif (nc_ai(cc, cnt, 16) == 3) {
						 continue
					 }
				 }
				 if (nc_ai(cc, cnt, 17) != 0) {
					 naf = 0
					 repeat 16
						 if (dist(cX(cnt), cY(cnt), cX(cc), cY(cc)) <= 3 & fov_los(cX(cc), cY(cc), cX(cnt), cY(cnt)) == 1 & cState(cnt) == 1 & cnt != cc) {
							 if (check_abnormal(cnt) == 1) {
								 naf = 1
								 break
							 }
						 }
					 loop
					 if (naf == 1) {
						 if (nc_ai(cc, cnt, 17) == 2) {
							 orf = 1
						 }
					 } elseif (nc_ai(cc, cnt, 17) == 1 | nc_ai(cc, cnt, 17) == 2) {
						 andf = 0
					 } elseif (nc_ai(cc, cnt, 17) == 3) {
						 continue
					 }
				 }
				 if (nc_ai(cc, cnt, 18) != 0) {
					 if (cHp(cc) <= cMaxHp(cc) / (4 - (ocdata(1, cc) == 1) * 2)) {
						 if (nc_ai(cc, cnt, 18) == 2) {
							 orf = 1
						 }
					 } elseif (nc_ai(cc, cnt, 18) == 1 | nc_ai(cc, cnt, 18) == 2) {
						 andf = 0
					 } elseif (nc_ai(cc, cnt, 18) == 3) {
						 continue
					 }
				 }
				 if (nc_ai(cc, cnt, 19) != 0) {
					 if (cHp(cc) > cMaxHp(cc) / (4 - (ocdata(1, cc) == 1) * 2)) {
						 if (nc_ai(cc, cnt, 19) == 2) {
							 orf = 1
						 }
					 } elseif (nc_ai(cc, cnt, 19) == 1 | nc_ai(cc, cnt, 19) == 2) {
						 andf = 0
					 } elseif (nc_ai(cc, cnt, 19) == 3) {
						 continue
					 }
				 }
				 if (nc_ai(cc, cnt, 20) != 0) {
					 if (cMp(cc) <= cMaxMp(cc) / 4) {
						 if (nc_ai(cc, cnt, 20) == 2) {
							 orf = 1
						 }
					 } elseif (nc_ai(cc, cnt, 20) == 1 | nc_ai(cc, cnt, 20) == 2) {
						 andf = 0
					 } elseif (nc_ai(cc, cnt, 20) == 3) {
						 continue
					 }
				 }
				 if (nc_ai(cc, cnt, 21) != 0) {
					 if (cMp(cc) > cMaxMp(cc) / 4) {
						 if (nc_ai(cc, cnt, 21) == 2) {
							 orf = 1
						 }
					 } elseif (nc_ai(cc, cnt, 21) == 1 | nc_ai(cc, cnt, 21) == 2) {
						 andf = 0
					 } elseif (nc_ai(cc, cnt, 21) == 3) {
						 continue
					 }
				 }
				 if (nc_ai(cc, cnt, 22) != 0) {
					 if (cHp(tc) >= cMaxHp(tc) / 10 * 8 & cHp(tc) > 1) {
						 if (nc_ai(cc, cnt, 22) == 2) {
							 orf = 1
						 }
					 } elseif (nc_ai(cc, cnt, 22) == 1 | nc_ai(cc, cnt, 22) == 2) {
						 andf = 0
					 } elseif (nc_ai(cc, cnt, 22) == 3) {
						 continue
					 }
				 }
				 if (nc_ai(cc, cnt, 23) != 0) {
					 if (cHp(tc) <= cMaxHp(tc) / 10 | cHp(tc) <= 1) {
						 if (nc_ai(cc, cnt, 23) == 2) {
							 orf = 1
						 }
					 } elseif (nc_ai(cc, cnt, 23) == 1 | nc_ai(cc, cnt, 23) == 2) {
						 andf = 0
					 } elseif (nc_ai(cc, cnt, 23) == 3) {
						 continue
					 }
				 }
				 if (nc_ai(cc, cnt, 24) != 0) {
					 naf = 0
					 repeat 245
			 			if (cState(cnt) != 1) {
			 				continue
			 			}
			 			if (cc == cnt) {
			 				continue
			 			}
			 			if (relationbetween(cc, cnt) != (-3)) {
			 				continue
			 			}
			 			dx = cX(cnt)
			 			dy = cY(cnt)
			 			if (dist(cX(cc), cY(cc), dx, dy) > sdataref(3, 631) \ 1000 + 1 + (ogdata(465) == 2) + (ogdata(481) == 2)) {
			 				continue
			 			}
			 			if (fov_los(cX(cc), cY(cc), dx, dy) == 0) {
			 				continue
			 			}
			 			naf += 1
						if (naf >= 2) {
							break
						}
			 		 loop
					 if (naf >= 2) {
						 if (nc_ai(cc, cnt, 24) == 2) {
							 orf = 1
						 }
					 } elseif (nc_ai(cc, cnt, 24) == 1 | nc_ai(cc, cnt, 24) == 2) {
						 andf = 0
					 } elseif (nc_ai(cc, cnt, 24) == 3) {
						 continue
					 }
				 }
				 if (nc_ai(cc, cnt, 25) != 0) {
					 if (cbit(18, tc)) {
						 if (nc_ai(cc, cnt, 25) == 2) {
							 orf = 1
						 }
					 } elseif (nc_ai(cc, cnt, 25) == 1 | nc_ai(cc, cnt, 25) == 2) {
						 andf = 0
					 } elseif (nc_ai(cc, cnt, 25) == 3) {
						 continue
					 }
				 }
				 if (nc_ai(cc, cnt, 26) != 0) {
					 if (cDamageReactionInfo(tc) != 0 | cCutCounterattack(tc) > 0 | eqfaction(tc, "overwish")) {
						 if (nc_ai(cc, cnt, 26) == 2) {
							 orf = 1
						 }
					 } elseif (nc_ai(cc, cnt, 26) == 1 | nc_ai(cc, cnt, 26) == 2) {
						 andf = 0
					 } elseif (nc_ai(cc, cnt, 26) == 3) {
						 continue
					 }
				 }
				 if (nc_ai(cc, cnt, 27) != 0) {
					 if (cQuality(tc) <= 3) {
						 if (nc_ai(cc, cnt, 27) == 2) {
							 orf = 1
						 }
					 } elseif (nc_ai(cc, cnt, 27) == 1 | nc_ai(cc, cnt, 27) == 2) {
						 andf = 0
					 } elseif (nc_ai(cc, cnt, 27) == 3) {
						 continue
					 }
				 }
				 if (nc_ai(cc, cnt, 28) != 0) {
					 if (rnd(2) == 0) {
						 if (nc_ai(cc, cnt, 28) == 2) {
							 orf = 1
						 }
					 } elseif (nc_ai(cc, cnt, 28) == 1 | nc_ai(cc, cnt, 28) == 2) {
						 andf = 0
					 } elseif (nc_ai(cc, cnt, 28) == 3) {
						 continue
					 }
				 }
				 if (nc_ai(cc, cnt, 29) != 0) {
					 if (rnd(4) == 0) {
						 if (nc_ai(cc, cnt, 29) == 2) {
							 orf = 1
						 }
					 } elseif (nc_ai(cc, cnt, 29) == 1 | nc_ai(cc, cnt, 29) == 2) {
						 andf = 0
					 } elseif (nc_ai(cc, cnt, 29) == 3) {
						 continue
					 }
				 }
				 if (nc_ai(cc, cnt, 30) != 0) {
					 calcskill cdata(215 + cnt, cc), cc, 100
					 if (ele == 0 | ele >= 61) {
					 } else {
						 if ((sdata(ele, tc) / 50) < 10) {
							 if (nc_ai(cc, cnt, 30) == 2) {
								 orf = 1
							 }
						 } elseif (nc_ai(cc, cnt, 30) == 1 | nc_ai(cc, cnt, 30) == 2) {
							 andf = 0
						 } elseif (nc_ai(cc, cnt, 30) == 3) {
							 continue
						 }
					 }
				 }
				 if (nc_ai(cc, cnt, 31) != 0) {
					 calcskill cdata(215 + cnt, cc), cc, 100
					 if (ele == 0 | ele >= 61) {
					 } else {
						 if ((sdata(ele, tc) / 50) < 10) {
							 if (nc_ai(cc, cnt, 30) == 2) {
								 orf = 1
							 }
						 } elseif (nc_ai(cc, cnt, 30) == 1 | nc_ai(cc, cnt, 30) == 2) {
							 andf = 0
						 } elseif (nc_ai(cc, cnt, 30) == 3) {
							 continue
						 }
					 }
				 }
				 if (andf == 1 | orf == 1) {
					act = cdata(215 + cnt, cc)
					prif = 1
					ctalk cc, 1120 + cnt, tc, cc
		 			break
				 }
		 }
	 loop
	 // 通常処理
	 if (prif == 0) {
		 repeat int(cAiActNum(cc) / 10) + 5
			 andf = 1
			 orf = 0
			 cai_distance(0) = dist(cX(tc), cY(tc), cX(cc), cY(cc)), dist(cX(0), cY(0), cX(cc), cY(cc))
			 if (nc_ai(cc, cnt, 44) != 0) {
				continue
			 }
			 if (nc_ai(cc, cnt, 43) != 0) {
				 	 act = cdata(215 + cnt, cc)
					 break
			 }
			 if (nc_ai(cc, cnt, 0) != 0) {
				 if (cai_distance(0) > cAiDist(cc)) {
					 if (nc_ai(cc, cnt, 0) == 2) {
						 orf = 1
					 }
				 } elseif (nc_ai(cc, cnt, 0) == 1 | nc_ai(cc, cnt, 0) == 2) {
					 andf = 0
				 } elseif (nc_ai(cc, cnt, 0) == 3) {
					 continue
				 }
			 }
			 if (nc_ai(cc, cnt, 1) != 0) {
				 if (cai_distance(0) < cAiDist(cc)) {
					 if (nc_ai(cc, cnt, 1) == 2) {
						 orf = 1
					 }
				 } elseif (nc_ai(cc, cnt, 1) == 1 | nc_ai(cc, cnt, 1) == 2) {
					 andf = 0
				 } elseif (nc_ai(cc, cnt, 1) == 3) {
					 continue
				 }
			 }
			 if (nc_ai(cc, cnt, 2) != 0) {
				 if (cai_distance(0) == cAiDist(cc)) {
					 if (nc_ai(cc, cnt, 2) == 2) {
						 orf = 1
					 }
				 } elseif (nc_ai(cc, cnt, 2) == 1 | nc_ai(cc, cnt, 2) == 2) {
					 andf = 0
				 } elseif (nc_ai(cc, cnt, 2) == 3) {
					 continue
				 }
			 }
			 if (nc_ai(cc, cnt, 3) != 0) {
				 if (cai_distance(0) != 1) {
					 if (nc_ai(cc, cnt, 3) == 2) {
						 orf = 1
					 }
				 } elseif (nc_ai(cc, cnt, 3) == 1 | nc_ai(cc, cnt, 3) == 2) {
					 andf = 0
				 } elseif (nc_ai(cc, cnt, 3) == 3) {
					 continue
				 }
			 }
			 if (nc_ai(cc, cnt, 4) != 0) {
				 if (cai_distance(0) == 1) {
					 if (nc_ai(cc, cnt, 4) == 2) {
						 orf = 1
					 }
				 } elseif (nc_ai(cc, cnt, 4) == 1 | nc_ai(cc, cnt, 4) == 2) {
					 andf = 0
				 } elseif (nc_ai(cc, cnt, 4) == 3) {
					 continue
				 }
			 }
			 if (nc_ai(cc, cnt, 5) != 0) {
				 if (cHp(0) <= cMaxHp(0) / (4 - (ocdata(1, cc) == 1) * 2)) {
					 if (nc_ai(cc, cnt, 5) == 2) {
						 orf = 1
					 }
				 } elseif (nc_ai(cc, cnt, 5) == 1 | nc_ai(cc, cnt, 5) == 2) {
					 andf = 0
				 } elseif (nc_ai(cc, cnt, 5) == 3) {
					 continue
				 }
			 }
			 if (nc_ai(cc, cnt, 6) != 0) {
				 if (cHp(0) > cMaxHp(0) / (4 - (ocdata(1, cc) == 1) * 2)) {
					 if (nc_ai(cc, cnt, 6) == 2) {
						 orf = 1
					 }
				 } elseif (nc_ai(cc, cnt, 6) == 1 | nc_ai(cc, cnt, 6) == 2) {
					 andf = 0
				 } elseif (nc_ai(cc, cnt, 6) == 3) {
					 continue
				 }
			 }
			 if (nc_ai(cc, cnt, 7) != 0) {
				 if (check_buff(cc, cdata(215 + cnt, cc))) {
					 if (nc_ai(cc, cnt, 7) == 2) {
						 orf = 1
					 }
				 } elseif (nc_ai(cc, cnt, 7) == 1 | nc_ai(cc, cnt, 7) == 2) {
					 andf = 0
				 } elseif (nc_ai(cc, cnt, 7) == 3) {
					 continue
				 }
			 }
			 if (nc_ai(cc, cnt, 8) != 0) {
				 if (check_debuff(tc, cdata(215 + cnt, cc)) != 0) {
					 if (nc_ai(cc, cnt, 8) == 2) {
						 orf = 1
					 }
				 } elseif (nc_ai(cc, cnt, 8) == 1 | nc_ai(cc, cnt, 8) == 2) {
					 andf = 0
				 } elseif (nc_ai(cc, cnt, 8) == 3) {
					 continue
				 }
			 }
			 if (nc_ai(cc, cnt, 9) != 0) {
				 if (check_abnormal(cc) == 1) {
					 if (nc_ai(cc, cnt, 9) == 2) {
						 orf = 1
					 }
				 } elseif (nc_ai(cc, cnt, 9) == 1 | nc_ai(cc, cnt, 9) == 2) {
					 andf = 0
				 } elseif (nc_ai(cc, cnt, 9) == 3) {
					 continue
				 }
			 }
			 if (nc_ai(cc, cnt, 10) != 0) {
				 if (check_abnormal(tc) == 0) {
					 if (nc_ai(cc, cnt, 10) == 2) {
						 orf = 1
					 }
				 } elseif (nc_ai(cc, cnt, 10) == 1 | nc_ai(cc, cnt, 10) == 2) {
					 andf = 0
				 } elseif (nc_ai(cc, cnt, 10) == 3) {
					 continue
				 }
			 }
			 if (nc_ai(cc, cnt, 11) != 0) {
				 if (cConfused(cc) == 0 & cDimmed(cc) == 0 & findbuff(cc, 2) == (-1) & findbuff(cc, 93) == (-1) & oabit(0, gCurrentMap) == 0) {
					 if (nc_ai(cc, cnt, 11) == 2) {
						 orf = 1
					 }
				 } elseif (nc_ai(cc, cnt, 11) == 1 | nc_ai(cc, cnt, 11) == 2) {
					 andf = 0
				 } elseif (nc_ai(cc, cnt, 11) == 3) {
					 continue
				 }
			 }
			 if (nc_ai(cc, cnt, 12) != 0) {
				 if (cai_distance(1) < cAiDist(cc)) {
					 if (nc_ai(cc, cnt, 12) == 2) {
						 orf = 1
					 }
				 } elseif (nc_ai(cc, cnt, 12) == 1 | nc_ai(cc, cnt, 12) == 2) {
					 andf = 0
				 } elseif (nc_ai(cc, cnt, 12) == 3) {
					 continue
				 }
			 }
			 if (nc_ai(cc, cnt, 13) != 0) {
				 if (cai_distance(1) > cAiDist(cc)) {
					 if (nc_ai(cc, cnt, 13) == 2) {
						 orf = 1
					 }
				 } elseif (nc_ai(cc, cnt, 13) == 1 | nc_ai(cc, cnt, 13) == 2) {
					 andf = 0
				 } elseif (nc_ai(cc, cnt, 13) == 3) {
					 continue
				 }
			 }
			 if (nc_ai(cc, cnt, 14) != 0) {
				 if (cai_distance(1) == cAiDist(cc)) {
					 if (nc_ai(cc, cnt, 14) == 2) {
						 orf = 1
					 }
				 } elseif (nc_ai(cc, cnt, 14) == 1 | nc_ai(cc, cnt, 14) == 2) {
					 andf = 0
				 } elseif (nc_ai(cc, cnt, 14) == 3) {
					 continue
				 }
			 }
			 if (nc_ai(cc, cnt, 15) != 0) {
				 naf = 0
				 repeat 16
					 if (dist(cX(cnt), cY(cnt), cX(cc), cY(cc)) <= 3 & fov_los(cX(cc), cY(cc), cX(cnt), cY(cnt)) == 1 & cState(cnt) == 1 & cnt != cc) {
						 if (cHp(cnt) <= cMaxHp(cnt) / (4 - (ocdata(1, cc) == 1) * 2)) {
							 naf = 1
							 break
						 }
					 }
				 loop
				 if (naf == 1) {
					 if (nc_ai(cc, cnt, 15) == 2) {
						 orf = 1
					 }
				 } elseif (nc_ai(cc, cnt, 15) == 1 | nc_ai(cc, cnt, 15) == 2) {
					 andf = 0
				 } elseif (nc_ai(cc, cnt, 15) == 3) {
					 continue
				 }
			 }
			 if (nc_ai(cc, cnt, 16) != 0) {
				 naf = 0
				 repeat 16
					 if (dist(cX(cnt), cY(cnt), cX(cc), cY(cc)) <= 3 & fov_los(cX(cc), cY(cc), cX(cnt), cY(cnt)) == 1 & cState(cnt) == 1 & cnt != cc) {
						 if (cHp(cnt) > cMaxHp(cnt) / (4 - (ocdata(1, cc) == 1) * 2)) {
							 naf = 1
							 break
						 }
					 }
				 loop
				 if (naf == 1) {
					 if (nc_ai(cc, cnt, 16) == 2) {
						 orf = 1
					 }
				 } elseif (nc_ai(cc, cnt, 16) == 1 | nc_ai(cc, cnt, 16) == 2) {
					 andf = 0
				 } elseif (nc_ai(cc, cnt, 16) == 3) {
					 continue
				 }
			 }
			 if (nc_ai(cc, cnt, 17) != 0) {
				 naf = 0
				 repeat 16
					 if (dist(cX(cnt), cY(cnt), cX(cc), cY(cc)) <= 3 & fov_los(cX(cc), cY(cc), cX(cnt), cY(cnt)) == 1 & cState(cnt) == 1 & cnt != cc) {
						 if (check_abnormal(cnt) == 1) {
							 naf = 1
							 break
						 }
					 }
				 loop
				 if (naf == 1) {
					 if (nc_ai(cc, cnt, 17) == 2) {
						 orf = 1
					 }
				 } elseif (nc_ai(cc, cnt, 17) == 1 | nc_ai(cc, cnt, 17) == 2) {
					 andf = 0
				 } elseif (nc_ai(cc, cnt, 17) == 3) {
					 continue
				 }
			 }
			 if (nc_ai(cc, cnt, 18) != 0) {
				 if (cHp(cc) <= cMaxHp(cc) / (4 - (ocdata(1, cc) == 1) * 2)) {
					 if (nc_ai(cc, cnt, 18) == 2) {
						 orf = 1
					 }
				 } elseif (nc_ai(cc, cnt, 18) == 1 | nc_ai(cc, cnt, 18) == 2) {
					 andf = 0
				 } elseif (nc_ai(cc, cnt, 18) == 3) {
					 continue
				 }
			 }
			 if (nc_ai(cc, cnt, 19) != 0) {
				 if (cHp(cc) > cMaxHp(cc) / (4 - (ocdata(1, cc) == 1) * 2)) {
					 if (nc_ai(cc, cnt, 19) == 2) {
						 orf = 1
					 }
				 } elseif (nc_ai(cc, cnt, 19) == 1 | nc_ai(cc, cnt, 19) == 2) {
					 andf = 0
				 } elseif (nc_ai(cc, cnt, 19) == 3) {
					 continue
				 }
			 }
			 if (nc_ai(cc, cnt, 20) != 0) {
				 if (cMp(cc) <= cMaxMp(cc) / 4) {
					 if (nc_ai(cc, cnt, 20) == 2) {
						 orf = 1
					 }
				 } elseif (nc_ai(cc, cnt, 20) == 1 | nc_ai(cc, cnt, 20) == 2) {
					 andf = 0
				 } elseif (nc_ai(cc, cnt, 20) == 3) {
					 continue
				 }
			 }
			 if (nc_ai(cc, cnt, 21) != 0) {
				 if (cMp(cc) > cMaxMp(cc) / 4) {
					 if (nc_ai(cc, cnt, 21) == 2) {
						 orf = 1
					 }
				 } elseif (nc_ai(cc, cnt, 21) == 1 | nc_ai(cc, cnt, 21) == 2) {
					 andf = 0
				 } elseif (nc_ai(cc, cnt, 21) == 3) {
					 continue
				 }
			 }
			 if (nc_ai(cc, cnt, 22) != 0) {
				 if (cHp(tc) >= cMaxHp(tc) / 10 * 8 & cHp(tc) > 1) {
					 if (nc_ai(cc, cnt, 22) == 2) {
						 orf = 1
					 }
				 } elseif (nc_ai(cc, cnt, 22) == 1 | nc_ai(cc, cnt, 22) == 2) {
					 andf = 0
				 } elseif (nc_ai(cc, cnt, 22) == 3) {
					 continue
				 }
			 }
			 if (nc_ai(cc, cnt, 23) != 0) {
				 if (cHp(tc) <= cMaxHp(tc) / 10 | cHp(tc) <= 1) {
					 if (nc_ai(cc, cnt, 23) == 2) {
						 orf = 1
					 }
				 } elseif (nc_ai(cc, cnt, 23) == 1 | nc_ai(cc, cnt, 23) == 2) {
					 andf = 0
				 } elseif (nc_ai(cc, cnt, 23) == 3) {
					 continue
				 }
			 }
			 if (nc_ai(cc, cnt, 24) != 0) {
				 naf = 0
				 repeat 245
					if (cState(cnt) != 1) {
						continue
					}
					if (cc == cnt) {
						continue
					}
					if (relationbetween(cc, cnt) != (-3)) {
						continue
					}
					dx = cX(cnt)
					dy = cY(cnt)
					if (dist(cX(cc), cY(cc), dx, dy) > sdataref(3, 631) \ 1000 + 1 + (ogdata(465) == 2) + (ogdata(481) == 2)) {
						continue
					}
					if (fov_los(cX(cc), cY(cc), dx, dy) == 0) {
						continue
					}
					naf += 1
					if (naf >= 2) {
						break
					}
				 loop
				 if (naf >= 2) {
					 if (nc_ai(cc, cnt, 24) == 2) {
						 orf = 1
					 }
				 } elseif (nc_ai(cc, cnt, 24) == 1 | nc_ai(cc, cnt, 24) == 2) {
					 andf = 0
				 } elseif (nc_ai(cc, cnt, 24) == 3) {
					 continue
				 }
			 }
			 if (nc_ai(cc, cnt, 25) != 0) {
				 if (cbit(18, tc)) {
					 if (nc_ai(cc, cnt, 25) == 2) {
						 orf = 1
					 }
				 } elseif (nc_ai(cc, cnt, 25) == 1 | nc_ai(cc, cnt, 25) == 2) {
					 andf = 0
				 } elseif (nc_ai(cc, cnt, 25) == 3) {
					 continue
				 }
			 }
			 if (nc_ai(cc, cnt, 26) != 0) {
				 if (cDamageReactionInfo(tc) != 0 | cCutCounterattack(tc) > 0 | eqfaction(tc, "overwish")) {
					 if (nc_ai(cc, cnt, 26) == 2) {
						 orf = 1
					 }
				 } elseif (nc_ai(cc, cnt, 26) == 1 | nc_ai(cc, cnt, 26) == 2) {
					 andf = 0
				 } elseif (nc_ai(cc, cnt, 26) == 3) {
					 continue
				 }
			 }
			 if (nc_ai(cc, cnt, 27) != 0) {
				 if (cQuality(tc) <= 3) {
					 if (nc_ai(cc, cnt, 27) == 2) {
						 orf = 1
					 }
				 } elseif (nc_ai(cc, cnt, 27) == 1 | nc_ai(cc, cnt, 27) == 2) {
					 andf = 0
				 } elseif (nc_ai(cc, cnt, 27) == 3) {
					 continue
				 }
			 }
			 if (nc_ai(cc, cnt, 28) != 0) {
				 if (rnd(2) == 0) {
					 if (nc_ai(cc, cnt, 28) == 2) {
						 orf = 1
					 }
				 } elseif (nc_ai(cc, cnt, 28) == 1 | nc_ai(cc, cnt, 28) == 2) {
					 andf = 0
				 } elseif (nc_ai(cc, cnt, 28) == 3) {
					 continue
				 }
			 }
			 if (nc_ai(cc, cnt, 29) != 0) {
				 if (rnd(4) == 0) {
					 if (nc_ai(cc, cnt, 29) == 2) {
						 orf = 1
					 }
				 } elseif (nc_ai(cc, cnt, 29) == 1 | nc_ai(cc, cnt, 29) == 2) {
					 andf = 0
				 } elseif (nc_ai(cc, cnt, 29) == 3) {
					 continue
				 }
			 }
			 if (nc_ai(cc, cnt, 30) != 0) {
				 calcskill cdata(215 + cnt, cc), cc, 100
				 if (ele == 0 | ele >= 61 | (sdata(ele, tc) / 50) < 10) {
					 if (nc_ai(cc, cnt, 30) == 2) {
						 orf = 1
					 }
				 } elseif (nc_ai(cc, cnt, 30) == 1 | nc_ai(cc, cnt, 30) == 2) {
					 andf = 0
				 } elseif (nc_ai(cc, cnt, 30) == 3) {
					 continue
				 }
			 }
			 if (nc_ai(cc, cnt, 31) != 0) {
				 calcskill cdata(215 + cnt, cc), cc, 100
				 if (ele == 0 | ele >= 61 | (sdata(ele, tc) / 50) < 3) {
					 if (nc_ai(cc, cnt, 31) == 2) {
						 orf = 1
					 }
				 } elseif (nc_ai(cc, cnt, 31) == 1 | nc_ai(cc, cnt, 31) == 2) {
					 andf = 0
				 } elseif (nc_ai(cc, cnt, 31) == 3) {
					 continue
				 }
			 }
			 if (andf == 1 | orf == 1) {
				act = cdata(215 + cnt, cc)
				ctalk cc, 1120 + cnt, tc, cc
	 			break
			 }
		 loop
	 }
 return

 *label_N110
	 txtnew
	 txt -1, lang("どの技を変更する？", "Which skills to change?")
	 bufstr = ""
	 promptmax = 0
	 repeat int(cAiActNum(tc) / 10)
		 rc_subact = cdata(220 + cnt, tc)
		 promptl(0, cnt) = subactget(rc_subact), "null", "" + cnt
		 promptmax++
	 loop
	 val = promptx, prompty, 350, 1
	 gosub *label_1353
	 if (rtval != -1) {
		 cm = rtval
		 txtnew
		 txt -1, lang("技を入れ替える場合は入れ替え先の技を、忘れる場合は忘れさせるを選択。", "If you want to change your skills, select the skill you want to change, or if you want to forget, select Forget.")
		 bufstr = ""
		 promptmax = 0
		 repeat int(cAiActNum(tc) / 10)
			 rc_subact = cdata(220 + cnt, tc)
			 promptl(0, cnt) = subactget(rc_subact), "null", "" + cnt
			 promptmax++
		 loop
		 promptl(0, int(cAiActNum(tc) / 10)) = lang("忘れさせる", "Forget"), "null", "" + int(cAiActNum(tc) / 10)
		 promptmax++
		 val = promptx, prompty, 350, 1
		 gosub *label_1353
		 if (rtval == int(cAiActNum(tc) / 10)) {
			 repeat int(cAiActNum(tc) / 10) - cm, cm
				 if (cnt == cm) {
					 rc_subact = cdata(220 + cnt, tc)
					 bufstr = subactget(rc_subact)
				 }
				 if (cm < 4) {
					 cdata(220 + cnt, tc) = cdata(221 + cnt, tc)
					 cdata(221 + cnt, tc) = 0
					 nc_aicnt = cnt
					 if (nc_aicnt != 0) {
						 repeat aipage * 15
							 nc_ai(tc, 4 + nc_aicnt, cnt) = nc_ai(tc, 5 + nc_aicnt, cnt)
							 nc_ai(tc, 5 + nc_aicnt, cnt) = 0
						 loop
					 }
				 }
			 loop
			 cAiActNum(tc) -= 10
			 txtnew
			 txt -1, lang( name(tc) + "は" + bufstr + "を忘れた。" , name(tc) + " forget " + bufstr + ".")
		 } elseif (rtval != (-1)) {
			 bufact = cdata(220 + cm, tc)
			 cdata(220 + cm, tc) = cdata(220 + rtval, tc)
			 cdata(220 + rtval, tc) = bufact
			 repeat aipage * 15
				 nc_ai(0, cm + 5, cnt) = nc_ai(tc, cm + 5, cnt)
				 nc_ai(tc, cm + 5, cnt) = nc_ai(tc, rtval + 5, cnt)
				 nc_ai(tc, rtval + 5, cnt) = nc_ai(0, cm + 5, cnt)
			 loop
			 bufstr = subactget(cdata(220 + cm, tc))
			 bufstr2 = subactget(cdata(220 + rtval, tc))
			 txt -1, lang( bufstr + "と" + bufstr2 + "を入れ替えた。" , "")
		 }
	 }
	 gosub *label_0623
	 goto *label_1623

	 *label_N200
		 if (cGold(0) < 0 & ncgdata(50) > 0) {
			 ncgdata(50) -= 1
			 cGold(0) += 2147483647
		 }
		 if (cGold(0) < 0) {
			 cGold(0) = 0
		 }
	 return

  *label_N250
		txtnew
		txt -1, lang("誰と夜伽をする？", "Who do you want to go to bed with?")
		snd 26
		listmax = 0
		page = 0
		pagesize = 16
		cs = 0
		cc = 0
		cs_bk = -1
		repeat 16
			if (cnt == 0) {
				continue
			}
			if (cImpression(cnt) < 200) {
				continue
			}
			if (cState(cnt) != 1) {
				continue
			}
			list(0, listmax) = cnt, -cLevel(cnt)
			listmax++
		loop
		gosub *label_1276
		windowshadow = 1
	*label_N251
		redraw 0
		cs_bk = -1
		pagemax = (listmax - 1) / pagesize
		if (page < 0) {
			page = pagemax
		} else {
			if (page > pagemax) {
				page = 0
			}
		}
	*label_N252
		redraw 0
		s = lang("夜伽", "Nightfall"), strhint2 + strhint3
		display_window (windoww - 450) / 2 + inf_screenx, winposy(448), 450, 448
		display_topic lang("NPCの名前", "Name"), wx + 28, wy + 36
		keyrange = 0
		repeat pagesize
			p = pagesize * page + cnt
			if (p >= listmax) {
				break
			}
			key_list(cnt) = key_select(cnt)
			keyrange++
			if (cnt \ 2 == 0) {
				pos wx + 70, wy + 66 + cnt * 19
				gfini 350, 18
				gfdec2 12, 14, 16
			}
			display_key wx + 58, wy + 66 + cnt * 19 - 2, cnt
		loop
		font lang(cfg_font1, cfg_font2), 14 - en * 2, 0
		cs_listbk
		repeat pagesize
			p = pagesize * page + cnt
			if (p >= listmax) {
				break
			}
			transmissivity = 0
			if (cId(list(0, p)) == 343) {
				if (userdata2(1, cCnpcId(list(0, p)))) {
					transmissivity = userdata2(1, cCnpcId(list(0, p)))
				}
			}
			if (ocdata(101, list(0, p))) {
				transmissivity = ocdata(101, list(0, p))
			}
			i = getcharapic(list(0, p)), getcharacolor(list(0, p))
			chara_preparepic i, i(1)
			pos wx + 40, wy + 74 + cnt * 19 - 8
			gmode 4, chipc(2, i), chipc(3, i), 256 - transmissivity
			color 0, 0, 0
			grotate 5, 0, 960, 0, chipc(2, i) / (1 + (chipc(3, i) > inf_tiles)), inf_tiles
			gmode 2
			i = list(0, p)
			s = cdatan(0, i)
			cutname s, 36
			cs_list s, wx + 84, wy + 66 + cnt * 19 - 1, 19
		loop
		if (keyrange != 0) {
			cs_bk = cs
		}
		redraw 1
		await cfg_wait1
		key_check
		cursor_check
		p = -1
		repeat keyrange
			if (key == key_select(cnt)) {
				p = list(0, pagesize * page + cnt)
				break
			}
		loop
		if (p != (-1)) {
			return p
		}
		if (key == key_pageup) {
			if (pagemax != 0) {
				snd 1
				page++
				goto *label_N251
			}
		}
		if (key == key_pagedown) {
			if (pagemax != 0) {
				snd 1
				page--
				goto *label_N251
			}
		}
		if (key == key_cancel) {
			i = 0
			gosub *label_2053
			return -1
		}
		goto *label_N252
