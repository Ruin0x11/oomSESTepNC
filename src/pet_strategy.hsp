*pet_openStrategyMenu
	if (cc == 0) {
		repeat 11
			ocdata(cnt, cc) = -1
		loop
	}
	if (getfactionvalue(cc, "AI_read") != "") {
		frequency_read = int(refstr)
	} else {
		frequency_read = 10
	}
	sdim choice, 40, 20
	sdim choice2, 40, 20
	listmax = 0
	page = 0
	pagesize = 12
	cs = 0
	cs_bk = -1
	cs = commark(0) \ 1000
	page = commark(0) / 1000
	page_bk = 0
	cs_bk2 = 0
	gsel 4
	repeat 8
		pos cnt \ 4 * 180, cnt / 4 * 300
		picload_ exedir + "\\graphic\\g" + (cnt + 1) + ".bmp", 1
	loop
	gsel 0
	screenupdate = -1
	gosub *label_0623
	windowshadow = 1
*label_1229
	listmax = 0
	if (jp) {
		q = "作戦"
		s = "攻撃行動", "回復行動", "ドアについて", "自動拾い", "拾い食い", "自動食事", "歌唱", "種族スキル", "職業スキル", "特殊弾", "陣形", "詳細な作戦", "適正距離", "移動率", "特殊行動率", "魔法書の使用率", ""
	} else {
		q = "Strategy"
		s = "Attack behavior", "Healing behavior", "Doors", "Pickup ores", "Eat from ground", "Auto eat", "Singing", "Race skills", "Class skills", "Special ammo", "Formation", "Detailed strategy", "AI distance", "AI move rate", "AI special acts rate", "AI spellbook rate", ""
	}
	if (cc == 0) {
		s(11) = "", "", "", "", ""
	}
	inhact = ""
	inhact2 = ""
	if (cId(cc) == 21) {
		inhact = lang("感染", "Infection")
		choice = lang("いい", "Yes"), lang("だめ", "No")
	}
	if (cId(cc) == 176 | cId(cc) == 249) {
		inhact = lang("呼び方", "Call me")
		choice = lang("いつも通り", "As usual"), _onii2(1, cSex(0)), _onii2(2, cSex(0)), _onii2(3, cSex(0)), _onii2(4, cSex(0)), _onii2(5, cSex(0)), _onii2(6, cSex(0)), _onii2(7, cSex(0)), _onii2(8, cSex(0)), _onii2(9, cSex(0)), _onii2(10, cSex(0)), _onii2(11, cSex(0)), _onii2(12, cSex(0)), _onii2(13, cSex(0))
	}
	if (cId(cc) == 260) {
		inhact = lang("ぺろぺろ", "*lick* *lick*")
		choice = lang("いい", "Yes"), lang("だめ", "No")
	}
	if (cId(cc) == 264 | cId(cc) == 288 | cId(cc) == 290) {
		inhact = lang("連続魔法", "Rapid magic")
		choice = lang("いい", "Yes"), lang("だめ", "No")
	}
	if (cId(cc) == 285 | cId(cc) == 286 | cId(cc) == 287 | cId(cc) == 327) {
		inhact = lang("分裂", "Split")
		choice = lang("いい", "Yes"), lang("だめ", "No")
	}
	if (cId(cc) == 326) {
		inhact = lang("ベイベー", "Baby")
		choice = lang("ベイベー！", "Baby!"), lang("だめ", "No")
	}
	if (cId(cc) == 332) {
		inhact = lang("調子にのっちゃ", "Don't get carried away")
		choice = lang("だめー", "No"), lang("だめー", "No")
	}
	if (cId(cc) == 335 | cId(cc) == 352 | (inhact == "" & eqfaction(cc, "whole"))) {
		inhact = lang("一晩の夢", "Allow prostitution")
		choice = lang("いい", "Yes"), lang("だめ", "No")
	}
	if (cId(cc) == 343) {
		if (userspact(cCnpcId(cc), 0) > 0) {
			inhact = lang("特殊技能", "Special actions")
			choice = lang("いい", "Yes"), lang("だめ", "No")
		}
	}
	if (cId(cc) == 262 & ocdata(54, cc) == 343) {
		if (userspact(ocdata(55, cc) - 1, 0) > 0) {
			inhact = lang("特殊技能", "Special actions")
			choice = lang("いい", "Yes"), lang("だめ", "No")
		}
	}
	if (ocbit(0, cc) == 0) {
		if (cId(cc) == 211) {
			inhact = lang("ポーション投げ", "Throw potion")
			choice = lang("いい", "Yes"), lang("だめ", "No")
			inhact2 = lang("火炎瓶", "Molotov")
			choice2 = lang("ぽいぽい", "Somewhat"), lang("ぽいぽいぽい", "A lot"), lang("だめ", "No")
		}
		if (cId(cc) == 230) {
			inhact = lang("猫召喚", "Summon cats")
			choice = lang("いい", "Yes"), lang("だめ", "No")
		}
		if (cId(cc) == 237 | cId(cc) == 244 | cId(cc) == 245 | cId(cc) == 321) {
			inhact = lang("自爆", "Suicide")
			choice = lang("いい", "Yes"), lang("だめ", "No")
		}
		if (cId(cc) == 249) {
			inhact2 = lang("妹召喚", "Summon younger sisters")
			choice = lang("いい", "Yes"), lang("だめ", "No")
		}
		if (cId(cc) == 320) {
			inhact = lang("食塩水投げ", "Throw solution of salt")
			choice = lang("いい", "Yes"), lang("だめ", "No")
		}
		if (cId(cc) == 331 | cId(cc) == 336) {
			inhact = lang("うみみゃあ", "Mewmewmew!")
			choice = lang("うみみゃあ！", "Mewmewmew!"), lang("うみみゃっ", "Mewmew")
		}
		if (cId(cc) == 330) {
			inhact = lang("寄生", "Pregnant")
			choice = lang("いい", "Yes"), lang("だめ", "No")
		}
		if (cId(cc) == 341) {
			inhact = lang("重力", "Gravity")
			choice = lang("いい", "Yes"), lang("だめ", "No")
		}
		if (cId(cc) == 317) {
			inhact = lang("覚醒", "Awaken")
			choice = lang("いい", "Yes"), lang("だめ", "No")
		}
	}
	dx = 440
	dy = 400
	repeat 30
		if (s(cnt) == "") {
			f = cnt
			break
		}
		list(0, listmax) = cnt
		listn(0, listmax) = s(cnt)
		listmax++
	loop
	if (inhact != "") {
		list(0, listmax) = f
		listn(0, listmax) = inhact
		listmax++
	}
	if (cId(cc) != 211 | ocdata(49, cc) == 0) {
		if (inhact2 != "") {
			list(0, listmax) = f + 1
			listn(0, listmax) = inhact2
			listmax++
		}
	}
	if (cc != 0) {
		if (inhact == "") {
			list(0, listmax) = f
			listn(0, listmax) = lang("通常の作戦", "Normal strategy")
			listmax++
		} else {
			if (inhact2 == "") {
				list(0, listmax) = f + 1
				listn(0, listmax) = lang("通常の作戦", "Normal strategy")
				listmax++
			} else {
				list(0, listmax) = f + 2
				listn(0, listmax) = lang("通常の作戦", "Normal strategy")
				listmax++
			}
		}
	}
	redraw 0
	cs_bk = -1
	pagemax = (listmax - 1) / pagesize
	if (page < 0) {
		page = pagemax
	} else {
		if (page > pagemax) {
			page = 0
		}
	}
*label_1230
	redraw 0
	s = q, lang("左右キー [変更]  ｷｬﾝｾﾙ [閉じる]", "Right,left [Change]  Shift,Esc [Close]")
	display_window (windoww - dx) / 2 + inf_screenx, winposy(dy) - 12, dx, dy
	display_topic lang("項目", "Category"), wx + 34, wy + 36
	x = ww / 5 * 3
	y = wh - 80
	gmode 4, 180, 300, 50
	pos wx + ww / 3, wy + wh / 2
	grotate 4, cmbg / 4 \ 4 * 180, cmbg / 4 / 4 \ 2 * 300, 0, x, y
	gmode 2
	keyrange = 0
	repeat pagesize
		p = pagesize * page + cnt
		if (p >= listmax) {
			break
		}
		key_list(cnt) = key_enter
		keyrange++
	loop
	keyrange = 0
	font lang(cfg_font1, cfg_font2), 14 - en * 2, 0
	cs_listbk
	repeat pagesize
		p = pagesize * page + cnt
		if (p >= listmax) {
			break
		}
		i = list(0, p)
		s = listn(0, p)
		x = 0
		cs_list s, wx + 56 + x, wy + 66 + cnt * 19 - 1, 19, 0
		if (p != 11 & p != listmax - 1 | cc == 0) {
			pos wx + 200, wy + 66 + cnt * 19 - 5
			gcopy 3, 312, 336, 24, 24
			pos wx + 370, wy + 66 + cnt * 19 - 5
			gcopy 3, 336, 336, 24, 24
		}
		pos wx + 230, wy + 66 + cnt * 19
		color 0, 0, 0
		if (p == 0) {
			if (jp) {
				s = "自由行動", "ガンガンいこうぜ", "手近な敵を攻撃しろ", "主人を守れ", "手を出すな", "仲間にまかせろ"
			} else {
				s = "Act freely", "Rush in", "Nearby enemies", "Defend me", "Don't attack", "Let your allies go"
			}
			keyrange++
			if (ocdata(0, cc) < 0) {
				mes "-------------------"
			} else {
				mes s(ocdata(0, cc))
			}
		}
		if (p == 1) {
			s = lang("自由回復", "Heal as needed"), lang("早めに回復", "Heal immediately")
			keyrange++
			if (ocdata(1, cc) < 0) {
				mes "-------------------"
			} else {
				mes s(ocdata(1, cc))
			}
		}
		if (p == 2) {
			s = lang("開けていい", "Open as needed"), lang("開けるな", "Don't open")
			keyrange++
			if (ocdata(2, cc) < 0) {
				mes "-------------------"
			} else {
				mes s(ocdata(2, cc))
			}
		}
		if (p == 3) {
			s = lang("鉱石だけ", "Ore only"), lang("だめ", "No"), lang("設定通り", "Yes")
			keyrange++
			if (ocdata(3, cc) < 0) {
				mes "-------------------"
			} else {
				mes s(ocdata(3, cc))
			}
		}
		if (p == 4) {
			s = lang("いい", "Yes"), lang("だめ", "No")
			keyrange++
			if (ocdata(4, cc) < 0) {
				mes "-------------------"
			} else {
				mes s(ocdata(4, cc))
			}
		}
		if (p == 5) {
			s = lang("いい", "Yes"), lang("だめ", "No")
			keyrange++
			if (ocdata(5, cc) < 0) {
				mes "-------------------"
			} else {
				mes s(ocdata(5, cc))
			}
		}
		if (p == 6) {
			s = lang("いい", "Yes"), lang("だめ", "No")
			keyrange++
			if (ocdata(6, cc) < 0) {
				mes "-------------------"
			} else {
				if (sdata(183, cc) == 0 & cc != 0) {
					mes lang("演奏スキル未習得", "Requires Performer skill")
				} else {
					mes s(ocdata(6, cc))
				}
			}
		}
		if (p == 7) {
			s = lang("いい", "Yes"), lang("だめ", "No")
			keyrange++
			if (ocdata(7, cc) < 0) {
				mes "-------------------"
			} else {
				mes s(ocdata(7, cc))
			}
		}
		if (p == 8) {
			s = lang("いい", "Yes"), lang("だめ", "No")
			keyrange++
			if (ocdata(8, cc) < 0) {
				mes "-------------------"
			} else {
				mes s(ocdata(8, cc))
			}
		}
		if (p == 9) {
			s = lang("通常弾", "Normal ammo")
			repeat length(ammoname)
				s(cnt + 1) = cnven(ammoname(cnt))
			loop
			keyrange++
			if (ocdata(9, cc) < 0) {
				mes "-------------------"
			} else {
				gosub *label_1814
				if (ammo == (-1) & cc != 0) {
					mes lang("使用不可", "Unavailable")
				} else {
					mes s(ocdata(9, cc))
				}
			}
		}
		if (p == 10) {
			s = lang("後衛", "Back"), lang("前衛", "Front")
			keyrange++
			if (ocdata(10, cc) < 0) {
				mes "-------------------"
			} else {
				mes s(ocdata(10, cc))
			}
		}
		if (cc != 0) {
			if (p == 11) {
				keyrange++
				mes ""
			}
			if (p == 12) {
				keyrange++
				mes "" + cAiDist(cc)
			}
			if (p == 13) {
				keyrange++
				mes "" + cAiMove(cc) + " [%]"
			}
			if (p == 14) {
				keyrange++
				if (cAiActSubFreq(cc) == 101) {
					mes lang("カスタムAI","Custom AI")
				} else {
					mes "" + cAiActSubFreq(cc) + " [%]"
				}
			}
			if (p == 15) {
				keyrange++
				if (frequency_read == 10) {
					mes lang("" + frequency_read + " [%] (通常)", "" + frequency_read + " [%] (default)")
				} else {
					mes "" + frequency_read + " [%]"
				}
			}
			if (inhact != "") {
				if (p == f) {
					repeat checksdim(choice)
						s(cnt) = choice(cnt)
					loop
					keyrange++
					mes s(ocdata(49, cc))
				}
			}
			if (inhact2 != "") {
				if (p == f + 1) {
					repeat checksdim(choice2)
						s(cnt) = choice2(cnt)
					loop
					keyrange++
					mes s(ocdata(50, cc))
				}
			}
			if (p == listmax - 1) {
				keyrange++
				mes ""
			}
		}
	loop
	if (keyrange != 0) {
		cs_bk = cs
	}
	redraw 1
	await cfg_wait1
	key_check
	cursor_check
	commark(0) = page * 1000 + cs
	if (key == key_pageup | key == key_pagedown | key == key_southwest | key == key_southeast | key == key_northwest | key == key_northeast) {
		if (key == key_pageup) {
			p = 1
		}
		if (key == key_pagedown) {
			p = -1
		}
		if (key == key_southwest) {
			p = -10
		}
		if (key == key_southeast) {
			p = 10
		}
		if (key == key_northwest) {
			p = -100
		}
		if (key == key_northeast) {
			p = 100
		}
		if (pagesize * page + cs == 0) {
			ocdata(0, cc) += p
			if (ocdata(0, cc) > 5) {
				ocdata(0, cc) = 5
			} else {
				if (ocdata(0, cc) < 0 - (cc == 0)) {
					ocdata(0, cc) = 0 - (cc == 0)
				}
			}
			snd 20
			goto *label_1229
		}
		if (pagesize * page + cs == 1) {
			ocdata(1, cc) += p
			if (ocdata(1, cc) > 1) {
				ocdata(1, cc) = 1
			} else {
				if (ocdata(1, cc) < 0 - (cc == 0)) {
					ocdata(1, cc) = 0 - (cc == 0)
				}
			}
			snd 20
			goto *label_1229
		}
		if (pagesize * page + cs == 2) {
			ocdata(2, cc) += p
			if (ocdata(2, cc) > 1) {
				ocdata(2, cc) = 1
			} else {
				if (ocdata(2, cc) < 0 - (cc == 0)) {
					ocdata(2, cc) = 0 - (cc == 0)
				}
			}
			snd 20
			goto *label_1229
		}
		if (pagesize * page + cs == 3) {
			ocdata(3, cc) += p
			if (ocdata(3, cc) > 2) {
				ocdata(3, cc) = 2
			} else {
				if (ocdata(3, cc) < 0 - (cc == 0)) {
					ocdata(3, cc) = 0 - (cc == 0)
				}
			}
			snd 20
			goto *label_1229
		}
		if (pagesize * page + cs == 4) {
			ocdata(4, cc) += p
			if (ocdata(4, cc) > 1) {
				ocdata(4, cc) = 1
			} else {
				if (ocdata(4, cc) < 0 - (cc == 0)) {
					ocdata(4, cc) = 0 - (cc == 0)
				}
			}
			snd 20
			goto *label_1229
		}
		if (pagesize * page + cs == 5) {
			ocdata(5, cc) += p
			if (ocdata(5, cc) > 1) {
				ocdata(5, cc) = 1
			} else {
				if (ocdata(5, cc) < 0 - (cc == 0)) {
					ocdata(5, cc) = 0 - (cc == 0)
				}
			}
			snd 20
			goto *label_1229
		}
		if (pagesize * page + cs == 6) {
			ocdata(6, cc) += p
			if (ocdata(6, cc) > 1) {
				ocdata(6, cc) = 1
			} else {
				if (ocdata(6, cc) < 0 - (cc == 0)) {
					ocdata(6, cc) = 0 - (cc == 0)
				}
			}
			snd 20
			goto *label_1229
		}
		if (pagesize * page + cs == 7) {
			ocdata(7, cc) += p
			if (ocdata(7, cc) > 1) {
				ocdata(7, cc) = 1
			} else {
				if (ocdata(7, cc) < 0 - (cc == 0)) {
					ocdata(7, cc) = 0 - (cc == 0)
				}
			}
			snd 20
			goto *label_1229
		}
		if (pagesize * page + cs == 8) {
			ocdata(8, cc) += p
			if (ocdata(8, cc) > 1) {
				ocdata(8, cc) = 1
			} else {
				if (ocdata(8, cc) < 0 - (cc == 0)) {
					ocdata(8, cc) = 0 - (cc == 0)
				}
			}
			snd 20
			goto *label_1229
		}
		if (pagesize * page + cs == 9) {
			ocdata(9, cc) += p
			if (ocdata(9, cc) > length(ammoname)) {
				ocdata(9, cc) = length(ammoname)
			} else {
				if (ocdata(9, cc) < 0 - (cc == 0)) {
					ocdata(9, cc) = 0 - (cc == 0)
				}
			}
			snd 20
			goto *label_1229
		}
		if (pagesize * page + cs == 10) {
			ocdata(10, cc) += p
			if (ocdata(10, cc) > 1) {
				ocdata(10, cc) = 1
			} else {
				if (ocdata(10, cc) < 0 - (cc == 0)) {
					ocdata(10, cc) = 0 - (cc == 0)
				}
			}
			snd 20
			goto *label_1229
		}
		if (cc != 0) {
			if (pagesize * page + cs == 12) {
				cAiDist(cc) += p
				if (cAiDist(cc) > 6) {
					cAiDist(cc) = 6
				}
				if (cAiDist(cc) < 1) {
					cAiDist(cc) = 1
				}
				snd 20
				goto *label_1229
			}
			if (pagesize * page + cs == 13) {
				cAiMove(cc) += p
				if (cAiMove(cc) > 100) {
					cAiMove(cc) = 100
				}
				if (cAiMove(cc) < 0) {
					cAiMove(cc) = 0
				}
				snd 20
				goto *label_1229
			}
			if (pagesize * page + cs == 14) {
				cAiActSubFreq(cc) += p
				if (cAiActSubFreq(cc) > 101) {
					cAiActSubFreq(cc) = 101
				}
				if (cAiActSubFreq(cc) < 0) {
					cAiActSubFreq(cc) = 0
				}
				snd 20
				goto *label_1229
			}
			if (pagesize * page + cs == 15) {
				frequency_read += p
				if (frequency_read > 100) {
					frequency_read = 100
				}
				if (frequency_read < 0) {
					frequency_read = 0
				}
				snd 20
				goto *label_1229
			}
			if (inhact != "") {
				if (pagesize * page + cs == f) {
					ocdata(49, cc) += p
					if (ocdata(49, cc) > checksdim(choice) - 1) {
						ocdata(49, cc) = checksdim(choice) - 1
					} else {
						if (ocdata(49, cc) < 0) {
							ocdata(49, cc) = 0
						}
					}
					snd 20
					goto *label_1229
				}
			}
			if (inhact2 != "") {
				if (pagesize * page + cs == f + 1) {
					ocdata(50, cc) += p
					if (ocdata(50, cc) > checksdim(choice2) - 1) {
						ocdata(50, cc) = checksdim(choice2) - 1
					} else {
						if (ocdata(50, cc) < 0) {
							ocdata(50, cc) = 0
						}
					}
					snd 20
					goto *label_1229
				}
			}
		}
	}
	if (key == key_enter) {
		if (inhact == "") {
			f@se = f
		} else {
			if (inhact2 == "") {
				f@se = f + 1
			} else {
				f@se = f + 2
			}
		}
		if (page == 0 & cs == 11 | (page == 1 & pagesize + cs == f@se)) {
			if (pagemax != 0) {
				snd 1
				if (cs == 11) {
					page++
				} else {
					page--
					cs = 11
				}
				goto *label_1229
			}
		}
	}
	if (key == key_cancel) {
		if (pagemax != 0) {
			if (page != 0) {
				snd 1
				page--
				goto *label_1229
			}
		}
		rmfaction cc, "AI_read"
		if (frequency_read != 10) {
			addfaction cc, "AI_read," + frequency_read
		}
		if (inhact != "") {
			rewriteai cc
		}
		if (cc == 0) {
			repeat 11
				cnt2 = cnt
				repeat 16 - 1, 1
					if (ocdata(cnt2, cc) != (-1)) {
						if (cState(cnt) == 1) {
							ocdata(cnt2, cnt) = ocdata(cnt2, cc)
						}
					}
				loop
				ocdata(cnt2, cc) = 0
			loop
			repeat 16 - 1, 1
				if (cAiActSubFreq(cnt) == 101) {
					ocbitmod 0, cnt, 1
				}
			loop
		} else {
			if (cAiActSubFreq(cc) == 101) {
				ocbitmod 0, cc, 1
			}
		}
		return
	}
	goto *label_1230
