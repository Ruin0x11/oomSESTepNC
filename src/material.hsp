#module

#define ctype matrefLevel(%1) matref@(0, (%1))
#define ctype matrefRarity(%1) matref@(1, (%1))



/*
Chooses a material at random which is found in `__spotType`.
@params __spotType Material spot type.
@return int Chosen material.
TODO: Improve performance; 500-time loop
*/
#defcfunc random_material int __spotType, int __level
	ret = 0
	level = __level
	rarity = 40
	repeat 500
		id = rnd(55)
		if (cnt \ 10 == 0) {
			if (level > 1) {
				level--
			}
			if (rarity > 1) {
				rarity--
			}
		}
		if (matrefRarity(id) == 0) {
			continue
		}
		if (matrefLevel(id) > level) {
			continue
		}
		if (matrefRarity(id) > rarity) {
			continue
		}
		if (rnd(matrefRarity(id)) != 0) {
			continue
		}
		available = FALSE
		spot = matspot@(0, id)
		if (spot == __spotType | spot == 18) {
			available = TRUE
		} else {
			spot = matspot@(1, id)
			if (spot != 0 & (spot == __spotType | spot == 18)) {
				available = TRUE
			}
		}
		if (available) {
			ret = id
			break
		}
	loop
	return ret



/*
Add materials to your material bag.
@params __id Material ID.
@params __number Number of the materials.
@params __wayToGet Way to get the materials.
@return Nothing
*/
#deffunc matgetmain int __id, int __number, int __wayToGet
	number = __number
	if (number == 0) {
		number = 1
	}
	mat@(__id) = limitmax(mat@(__id) + number, 2000000000)
	snd 21
	if (en@) {
		if (petJob) {
			s = "got " + number + " " + matname@(__id) + ". "
		} else {
			s = "You get " + number + " " + matname@(__id) + ". "
		}
	} else {
		s = "マテリアル:" + matname@(__id) + "を" + number + "個"
		if (__wayToGet == 1) {
			s += "掘り当てた"
		}
		if (__wayToGet == 2) {
			s += "釣り上げた"
		}
		if (__wayToGet == 3) {
			s += "採取した"
		}
		if (__wayToGet == 5) {
			s += "見つけた"
		}
		if (__wayToGet == 0) {
			s += "入手した"
		}
	}
	txtef 4
	txt@ -1, s + "(" + mat@(__id) + ") "
	return

#deffunc another_matgetmain int __id, int __number
	number = __number
	if (number == 0) {
		number = 1
	}
	ncgdata@(400 + __id) = limitmax(ncgdata@(400 + __id) + number, 2000000000)
	snd 21
	if (en@) {
		s = "You get " + number + " " + another_matname@(__id) + ". "
	} else {
		s = "異界マテリアル:" + another_matname@(__id) + "を" + number + "個入手した"
	}
	txtef 4
	txt@ -1, s + "(" + ncgdata@(400 + __id) + ") "
	return

/*
* Lose materials from your material bag.
* @params __id Material ID.
* @params __number Number of the materials.
* @return Nothing
*/
#deffunc matdelmain int __id, int __number
	number = limitmin(__number, 1)
	mat@(__id) -= number
	s = lang("マテリアル:" + matname@(__id) + "を" + number + "個失った", "You lose " + __number + " " + matname@(__id) + ".")
	txtef 4
	txt@ -1, lang(s + "(残り " + mat@(__id) + "個) ", "(" + mat@(__id) + " pieces remaining)")
	return

#global
